; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -o.\objects\stm32f0xx_hal_usart.o --depend=.\objects\stm32f0xx_hal_usart.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE\Device\STM32F071VBTx -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0 -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32F0xx\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc\Legacy -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F071xB --omf_browse=.\objects\stm32f0xx_hal_usart.crf C:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Src\stm32f0xx_hal_usart.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.HAL_USART_Abort||, CODE, READONLY, ALIGN=1

HAL_USART_Abort PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,r1,#0xe1
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L1.70|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x38]
        CMP      r0,#0
        BEQ      |L1.70|
        MOVS     r0,#0
        LDR      r1,[r4,#0x38]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x38]
        BL       HAL_DMA_Abort
|L1.70|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L1.110|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x3c]
        CMP      r0,#0
        BEQ      |L1.110|
        MOVS     r0,#0
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x3c]
        BL       HAL_DMA_Abort
|L1.110|
        MOVS     r0,#0
        STRH     r0,[r4,#0x2a]
        STRH     r0,[r4,#0x32]
        MOVS     r0,#0xf
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#1
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        MOVS     r0,#0
        STR      r0,[r4,#0x44]
        POP      {r4,pc}
        ENDP


        AREA ||i.HAL_USART_AbortCpltCallback||, CODE, READONLY, ALIGN=1

HAL_USART_AbortCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_USART_Abort_IT||, CODE, READONLY, ALIGN=2

HAL_USART_Abort_IT PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r5,#1
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,r1,#0xe1
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r5
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x38]
        CMP      r0,#0
        BEQ      |L3.62|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L3.56|
        LDR      r0,|L3.228|
        LDR      r1,[r4,#0x38]
        STR      r0,[r1,#0x34]
        B        |L3.62|
|L3.56|
        MOVS     r0,#0
        LDR      r1,[r4,#0x38]
        STR      r0,[r1,#0x34]
|L3.62|
        LDR      r0,[r4,#0x3c]
        CMP      r0,#0
        BEQ      |L3.94|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L3.88|
        LDR      r0,|L3.232|
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#0x34]
        B        |L3.94|
|L3.88|
        MOVS     r0,#0
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#0x34]
|L3.94|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L3.142|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x38]
        CMP      r0,#0
        BEQ      |L3.142|
        LDR      r0,[r4,#0x38]
        BL       HAL_DMA_Abort_IT
        CMP      r0,#0
        BEQ      |L3.140|
        MOVS     r0,#0
        LDR      r1,[r4,#0x38]
        STR      r0,[r1,#0x34]
        B        |L3.142|
|L3.140|
        MOVS     r5,#0
|L3.142|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L3.192|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x3c]
        CMP      r0,#0
        BEQ      |L3.192|
        LDR      r0,[r4,#0x3c]
        BL       HAL_DMA_Abort_IT
        CMP      r0,#0
        BEQ      |L3.190|
        MOVS     r0,#0
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#0x34]
        MOVS     r5,#1
        B        |L3.192|
|L3.190|
        MOVS     r5,#0
|L3.192|
        CMP      r5,#1
        BNE      |L3.222|
        MOVS     r0,#0
        STRH     r0,[r4,#0x2a]
        STRH     r0,[r4,#0x32]
        STR      r0,[r4,#0x44]
        MOVS     r0,#0xf
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#1
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_USART_AbortCpltCallback
|L3.222|
        MOVS     r0,#0
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L3.228|
        DCD      USART_DMATxAbortCallback
|L3.232|
        DCD      USART_DMARxAbortCallback

        AREA ||i.HAL_USART_DMAPause||, CODE, READONLY, ALIGN=1

HAL_USART_DMAPause PROC
        MOV      r1,r0
        NOP      
        MOVS     r0,#0x40
        LDRB     r0,[r0,r1]
        CMP      r0,#1
        BNE      |L4.16|
        MOVS     r0,#2
|L4.14|
        BX       lr
|L4.16|
        MOVS     r2,#1
        MOVS     r0,#0x40
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r0,#0x41
        LDRB     r0,[r0,r1]
        CMP      r0,#0x12
        BNE      |L4.56|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        MOVS     r2,#0x80
        ANDS     r0,r0,r2
        CMP      r0,#0
        BEQ      |L4.56|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
        B        |L4.142|
|L4.56|
        MOVS     r0,#0x41
        LDRB     r0,[r0,r1]
        CMP      r0,#0x22
        BEQ      |L4.72|
        MOVS     r0,#0x41
        LDRB     r0,[r0,r1]
        CMP      r0,#0x32
        BNE      |L4.142|
|L4.72|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        MOVS     r2,#0x80
        ANDS     r0,r0,r2
        CMP      r0,#0
        BEQ      |L4.94|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
|L4.94|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        MOVS     r2,#0x40
        ANDS     r0,r0,r2
        CMP      r0,#0
        BEQ      |L4.142|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        LSLS     r2,r2,#2
        BICS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        MOVS     r2,#0x40
        BICS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
|L4.142|
        NOP      
        MOVS     r2,#0
        MOVS     r0,#0x40
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r0,#0
        B        |L4.14|
        ENDP


        AREA ||i.HAL_USART_DMAResume||, CODE, READONLY, ALIGN=1

HAL_USART_DMAResume PROC
        MOV      r1,r0
        NOP      
        MOVS     r0,#0x40
        LDRB     r0,[r0,r1]
        CMP      r0,#1
        BNE      |L5.16|
        MOVS     r0,#2
|L5.14|
        BX       lr
|L5.16|
        MOVS     r2,#1
        MOVS     r0,#0x40
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r0,#0x41
        LDRB     r0,[r0,r1]
        CMP      r0,#0x12
        BNE      |L5.46|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        MOVS     r2,#0x80
        ORRS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
        B        |L5.118|
|L5.46|
        MOVS     r0,#0x41
        LDRB     r0,[r0,r1]
        CMP      r0,#0x22
        BEQ      |L5.62|
        MOVS     r0,#0x41
        LDRB     r0,[r0,r1]
        CMP      r0,#0x32
        BNE      |L5.118|
|L5.62|
        MOVS     r0,#8
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0x20]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        MOVS     r2,#0xff
        ADDS     r2,#1
        ORRS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        MOVS     r2,#1
        ORRS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        MOVS     r2,#0x40
        ORRS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        MOVS     r2,#0x80
        ORRS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
|L5.118|
        NOP      
        MOVS     r2,#0
        MOVS     r0,#0x40
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r0,#0
        B        |L5.14|
        ENDP


        AREA ||i.HAL_USART_DMAStop||, CODE, READONLY, ALIGN=1

HAL_USART_DMAStop PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x38]
        CMP      r0,#0
        BEQ      |L6.40|
        LDR      r0,[r4,#0x38]
        BL       HAL_DMA_Abort
|L6.40|
        LDR      r0,[r4,#0x3c]
        CMP      r0,#0
        BEQ      |L6.52|
        LDR      r0,[r4,#0x3c]
        BL       HAL_DMA_Abort
|L6.52|
        MOV      r0,r4
        BL       USART_EndTransfer
        MOVS     r1,#1
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.HAL_USART_DeInit||, CODE, READONLY, ALIGN=1

HAL_USART_DeInit PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CMP      r4,#0
        BNE      |L7.12|
        MOVS     r0,#1
|L7.10|
        POP      {r4,pc}
|L7.12|
        MOVS     r1,#2
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        MOVS     r0,#0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOV      r0,r4
        BL       HAL_USART_MspDeInit
        MOVS     r0,#0
        STR      r0,[r4,#0x44]
        MOVS     r1,#0
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0x40
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        B        |L7.10|
        ENDP


        AREA ||i.HAL_USART_ErrorCallback||, CODE, READONLY, ALIGN=1

HAL_USART_ErrorCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_USART_GetError||, CODE, READONLY, ALIGN=1

HAL_USART_GetError PROC
        MOV      r1,r0
        LDR      r0,[r1,#0x44]
        BX       lr
        ENDP


        AREA ||i.HAL_USART_GetState||, CODE, READONLY, ALIGN=1

HAL_USART_GetState PROC
        MOV      r1,r0
        MOVS     r0,#0x41
        LDRB     r0,[r0,r1]
        BX       lr
        ENDP


        AREA ||i.HAL_USART_IRQHandler||, CODE, READONLY, ALIGN=2

HAL_USART_IRQHandler PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r5,[r0,#0x1c]
        LDR      r0,[r4,#0]
        LDR      r6,[r0,#0]
        LSLS     r0,r5,#28
        LSRS     r0,r0,#28
        STR      r0,[sp,#0]
        LDR      r0,[sp,#0]
        CMP      r0,#0
        BNE      |L11.64|
        MOVS     r0,#0x20
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L11.64|
        MOVS     r0,#0x20
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L11.64|
        MOVS     r0,#0x41
        LDRB     r0,[r0,r4]
        CMP      r0,#0x22
        BNE      |L11.56|
        MOV      r0,r4
        BL       USART_Receive_IT
        B        |L11.62|
|L11.56|
        MOV      r0,r4
        BL       USART_TransmitReceive_IT
|L11.62|
        POP      {r3-r7,pc}
|L11.64|
        LDR      r0,[r4,#0]
        LDR      r7,[r0,#8]
        LDR      r0,[sp,#0]
        CMP      r0,#0
|L11.72|
        BEQ      |L11.328|
        LSLS     r0,r7,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BNE      |L11.92|
        MOVS     r0,#0xff
        ADDS     r0,r0,#0x21
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L11.72|
|L11.92|
        LSLS     r0,r5,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L11.124|
        MOVS     r0,#0xff
        ADDS     r0,#1
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L11.124|
        MOVS     r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        LDR      r0,[r4,#0x44]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x44]
|L11.124|
        MOVS     r0,#2
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L11.154|
        LSLS     r0,r7,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L11.154|
        MOVS     r0,#2
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        LDR      r0,[r4,#0x44]
        MOVS     r1,#4
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x44]
|L11.154|
        MOVS     r0,#4
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L11.184|
        LSLS     r0,r7,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L11.184|
        MOVS     r0,#4
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        LDR      r0,[r4,#0x44]
        MOVS     r1,#2
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x44]
|L11.184|
        MOVS     r0,#8
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L11.222|
        MOVS     r0,#0x20
        ANDS     r0,r0,r6
        CMP      r0,#0
        BNE      |L11.208|
        LSLS     r0,r7,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L11.222|
|L11.208|
        MOVS     r0,#8
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        LDR      r0,[r4,#0x44]
        MOVS     r1,#8
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x44]
|L11.222|
        LDR      r0,[r4,#0x44]
        CMP      r0,#0
        BEQ      |L11.394|
        MOVS     r0,#0x20
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L11.266|
        MOVS     r0,#0x20
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L11.266|
        MOVS     r0,#0x41
        LDRB     r0,[r0,r4]
        CMP      r0,#0x22
        BNE      |L11.260|
        MOV      r0,r4
        BL       USART_Receive_IT
        B        |L11.266|
|L11.260|
        MOV      r0,r4
        BL       USART_TransmitReceive_IT
|L11.266|
        LDR      r0,[r4,#0x44]
        MOVS     r1,#8
        ANDS     r0,r0,r1
        CMP      r0,#0
        BNE      |L11.288|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L11.384|
|L11.288|
        MOV      r0,r4
        BL       USART_EndTransfer
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L11.376|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x38]
        CMP      r0,#0
        BEQ      |L11.338|
        MOVS     r0,#0
        LDR      r1,[r4,#0x38]
        B        |L11.330|
|L11.328|
        B        |L11.396|
|L11.330|
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x38]
        BL       HAL_DMA_Abort_IT
|L11.338|
        LDR      r0,[r4,#0x3c]
        CMP      r0,#0
        BEQ      |L11.368|
        LDR      r0,|L11.464|
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x3c]
        BL       HAL_DMA_Abort_IT
        CMP      r0,#0
        BEQ      |L11.394|
        LDR      r0,[r4,#0x3c]
        LDR      r1,[r0,#0x34]
        BLX      r1
        B        |L11.394|
|L11.368|
        MOV      r0,r4
        BL       HAL_USART_ErrorCallback
        B        |L11.394|
|L11.376|
        MOV      r0,r4
        BL       HAL_USART_ErrorCallback
        B        |L11.394|
|L11.384|
        MOV      r0,r4
        BL       HAL_USART_ErrorCallback
        MOVS     r0,#0
        STR      r0,[r4,#0x44]
|L11.394|
        B        |L11.62|
|L11.396|
        MOVS     r0,#0x80
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L11.436|
        MOVS     r0,#0x80
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L11.436|
        MOVS     r0,#0x41
        LDRB     r0,[r0,r4]
        CMP      r0,#0x12
        BNE      |L11.428|
        MOV      r0,r4
        BL       USART_Transmit_IT
        B        |L11.434|
|L11.428|
        MOV      r0,r4
        BL       USART_TransmitReceive_IT
|L11.434|
        B        |L11.62|
|L11.436|
        MOVS     r0,#0x40
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L11.460|
        MOVS     r0,#0x40
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L11.460|
        MOV      r0,r4
        BL       USART_EndTransmit_IT
        B        |L11.62|
|L11.460|
        NOP      
        B        |L11.62|
        ENDP

|L11.464|
        DCD      USART_DMAAbortOnError

        AREA ||i.HAL_USART_Init||, CODE, READONLY, ALIGN=1

HAL_USART_Init PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CMP      r4,#0
        BNE      |L12.12|
        MOVS     r0,#1
|L12.10|
        POP      {r4,pc}
|L12.12|
        MOVS     r0,#0x41
        LDRB     r0,[r0,r4]
        CMP      r0,#0
        BNE      |L12.32|
        MOVS     r1,#0
        MOVS     r0,#0x40
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_USART_MspInit
|L12.32|
        MOVS     r1,#2
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       USART_SetConfig
        CMP      r0,#1
        BNE      |L12.62|
        B        |L12.10|
|L12.62|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        MOVS     r1,#1
        LSLS     r1,r1,#14
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x2a
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       USART_CheckIdleState
        B        |L12.10|
        ENDP


        AREA ||i.HAL_USART_MspDeInit||, CODE, READONLY, ALIGN=1

HAL_USART_MspDeInit PROC
        BX       lr
        ENDP


        AREA ||i.HAL_USART_MspInit||, CODE, READONLY, ALIGN=1

HAL_USART_MspInit PROC
        BX       lr
        ENDP


        AREA ||i.HAL_USART_Receive||, CODE, READONLY, ALIGN=2

HAL_USART_Receive PROC
        PUSH     {r4-r7,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r7,r3
        MOVS     r0,#0
        STR      r0,[sp,#0xc]
        STR      r0,[sp,#4]
        MOVS     r0,#0x41
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L15.254|
        CMP      r5,#0
        BEQ      |L15.34|
        CMP      r6,#0
        BNE      |L15.40|
|L15.34|
        MOVS     r0,#1
|L15.36|
        ADD      sp,sp,#0x14
        POP      {r4-r7,pc}
|L15.40|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L15.68|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L15.68|
        LSLS     r0,r5,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L15.68|
        MOVS     r0,#1
        B        |L15.36|
|L15.68|
        NOP      
        MOVS     r0,#0x40
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L15.82|
        MOVS     r0,#2
        B        |L15.36|
|L15.82|
        MOVS     r1,#1
        MOVS     r0,#0x40
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        STR      r0,[r4,#0x44]
        MOVS     r1,#0x22
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        BL       HAL_GetTick
        STR      r0,[sp,#4]
        STRH     r6,[r4,#0x30]
        STRH     r6,[r4,#0x32]
        NOP      
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L15.140|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L15.134|
        LDR      r0,|L15.336|
        STRH     r0,[r4,#0x34]
        B        |L15.190|
|L15.134|
        MOVS     r0,#0xff
        STRH     r0,[r4,#0x34]
        B        |L15.190|
|L15.140|
        LDR      r0,[r4,#8]
        CMP      r0,#0
        BNE      |L15.164|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L15.158|
        MOVS     r0,#0xff
        STRH     r0,[r4,#0x34]
        B        |L15.190|
|L15.158|
        MOVS     r0,#0x7f
        STRH     r0,[r4,#0x34]
        B        |L15.190|
|L15.164|
        MOVS     r1,#1
        LSLS     r1,r1,#28
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L15.190|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L15.186|
        MOVS     r0,#0x7f
        STRH     r0,[r4,#0x34]
        B        |L15.190|
|L15.186|
        MOVS     r0,#0x3f
        STRH     r0,[r4,#0x34]
|L15.190|
        NOP      
        LDRH     r0,[r4,#0x34]
        STR      r0,[sp,#8]
        B        |L15.304|
|L15.198|
        LDRH     r0,[r4,#0x32]
        SUBS     r0,r0,#1
        STRH     r0,[r4,#0x32]
        STR      r7,[sp,#0]
        MOVS     r2,#0
        MOVS     r1,#0x40
        MOV      r0,r4
        LDR      r3,[sp,#4]
        BL       USART_WaitOnFlagUntilTimeout
        CMP      r0,#0
        BEQ      |L15.226|
        MOVS     r0,#3
        B        |L15.36|
|L15.226|
        MOVS     r0,#0xff
        LDR      r1,[r4,#0]
        STRH     r0,[r1,#0x28]
        STR      r7,[sp,#0]
        MOVS     r2,#0
        MOVS     r1,#0x20
        MOV      r0,r4
        LDR      r3,[sp,#4]
        BL       USART_WaitOnFlagUntilTimeout
        CMP      r0,#0
        BEQ      |L15.256|
        MOVS     r0,#3
        B        |L15.36|
|L15.254|
        B        |L15.330|
|L15.256|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L15.290|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L15.290|
        STR      r5,[sp,#0xc]
        LDR      r0,[r4,#0]
        LDRH     r0,[r0,#0x24]
        LDR      r1,[sp,#8]
        ANDS     r0,r0,r1
        LDR      r5,[sp,#0xc]
        STRH     r0,[r5,#0]
        ADDS     r5,r5,#2
        B        |L15.304|
|L15.290|
        LDR      r0,[r4,#0]
        LDRH     r0,[r0,#0x24]
        LDR      r1,[sp,#8]
        UXTB     r1,r1
        ANDS     r0,r0,r1
        STRB     r0,[r5,#0]
        ADDS     r5,r5,#1
|L15.304|
        LDRH     r0,[r4,#0x32]
        CMP      r0,#0
        BNE      |L15.198|
        MOVS     r1,#1
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x40
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        B        |L15.36|
|L15.330|
        MOVS     r0,#2
        B        |L15.36|
        ENDP

        DCW      0x0000
|L15.336|
        DCD      0x000001ff

        AREA ||i.HAL_USART_Receive_DMA||, CODE, READONLY, ALIGN=2

HAL_USART_Receive_DMA PROC
        PUSH     {r0-r2,r4-r7,lr}
        MOV      r4,r0
        MOV      r5,r2
        MOVS     r0,#0x41
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L16.232|
        LDR      r0,[sp,#4]
        CMP      r0,#0
        BEQ      |L16.24|
        CMP      r5,#0
        BNE      |L16.28|
|L16.24|
        MOVS     r0,#1
|L16.26|
        POP      {r1-r7,pc}
|L16.28|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L16.58|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L16.58|
        LDR      r0,[sp,#4]
        LSLS     r0,r0,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L16.58|
        MOVS     r0,#1
        B        |L16.26|
|L16.58|
        NOP      
        MOVS     r0,#0x40
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L16.72|
        MOVS     r0,#2
        B        |L16.26|
|L16.72|
        MOVS     r1,#1
        MOVS     r0,#0x40
        STRB     r1,[r0,r4]
        NOP      
        LDR      r0,[sp,#4]
        STR      r0,[r4,#0x2c]
        STRH     r5,[r4,#0x30]
        LDR      r0,[sp,#4]
        STR      r0,[r4,#0x24]
        STRH     r5,[r4,#0x28]
        MOVS     r0,#0
        STR      r0,[r4,#0x44]
        MOVS     r1,#0x22
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        LDR      r0,|L16.236|
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#0x28]
        LDR      r0,|L16.240|
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#0x2c]
        LDR      r0,|L16.244|
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#0x30]
        ADD      r6,sp,#4
        LDR      r2,[r6,#0]
        LDR      r3,[r4,#0]
        MOV      r1,r3
        ADDS     r1,r1,#0x24
        MOV      r3,r5
        LDR      r0,[r4,#0x3c]
        BL       HAL_DMA_Start_IT
        MOVS     r0,#0
        LDR      r1,[r4,#0x38]
        STR      r0,[r1,#0x30]
        LDR      r1,[r4,#0x38]
        STR      r0,[r1,#0x2c]
        LDR      r1,[r4,#0x38]
        STR      r0,[r1,#0x28]
        LDR      r3,[r4,#0]
        MOV      r2,r3
        ADDS     r2,r2,#0x28
        LDR      r1,[r6,#0]
        MOV      r3,r5
        LDR      r0,[r4,#0x38]
        BL       HAL_DMA_Start_IT
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x40
        STRB     r1,[r0,r4]
        NOP      
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r0,#0
        B        |L16.26|
|L16.232|
        MOVS     r0,#2
        B        |L16.26|
        ENDP

|L16.236|
        DCD      USART_DMAReceiveCplt
|L16.240|
        DCD      USART_DMARxHalfCplt
|L16.244|
        DCD      USART_DMAError

        AREA ||i.HAL_USART_Receive_IT||, CODE, READONLY, ALIGN=2

HAL_USART_Receive_IT PROC
        PUSH     {r4,lr}
        MOV      r3,r0
        MOVS     r0,#0x41
        LDRB     r0,[r0,r3]
        CMP      r0,#1
        BNE      |L17.236|
        CMP      r1,#0
        BEQ      |L17.20|
        CMP      r2,#0
        BNE      |L17.24|
|L17.20|
        MOVS     r0,#1
|L17.22|
        POP      {r4,pc}
|L17.24|
        MOVS     r4,#1
        LSLS     r4,r4,#12
        LDR      r0,[r3,#8]
        CMP      r0,r4
        BNE      |L17.52|
        LDR      r0,[r3,#0x10]
        CMP      r0,#0
        BNE      |L17.52|
        LSLS     r0,r1,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L17.52|
        MOVS     r0,#1
        B        |L17.22|
|L17.52|
        NOP      
        MOVS     r0,#0x40
        LDRB     r0,[r0,r3]
        CMP      r0,#1
        BNE      |L17.66|
        MOVS     r0,#2
        B        |L17.22|
|L17.66|
        MOVS     r4,#1
        MOVS     r0,#0x40
        STRB     r4,[r0,r3]
        NOP      
        STR      r1,[r3,#0x2c]
        STRH     r2,[r3,#0x30]
        STRH     r2,[r3,#0x32]
        NOP      
        LSLS     r4,r4,#12
        LDR      r0,[r3,#8]
        CMP      r0,r4
        BNE      |L17.108|
        LDR      r0,[r3,#0x10]
        CMP      r0,#0
        BNE      |L17.102|
        LDR      r0,|L17.240|
        STRH     r0,[r3,#0x34]
        B        |L17.158|
|L17.102|
        MOVS     r0,#0xff
        STRH     r0,[r3,#0x34]
        B        |L17.158|
|L17.108|
        LDR      r0,[r3,#8]
        CMP      r0,#0
        BNE      |L17.132|
        LDR      r0,[r3,#0x10]
        CMP      r0,#0
        BNE      |L17.126|
        MOVS     r0,#0xff
        STRH     r0,[r3,#0x34]
        B        |L17.158|
|L17.126|
        MOVS     r0,#0x7f
        STRH     r0,[r3,#0x34]
        B        |L17.158|
|L17.132|
        MOVS     r4,#1
        LSLS     r4,r4,#28
        LDR      r0,[r3,#8]
        CMP      r0,r4
        BNE      |L17.158|
        LDR      r0,[r3,#0x10]
        CMP      r0,#0
        BNE      |L17.154|
        MOVS     r0,#0x7f
        STRH     r0,[r3,#0x34]
        B        |L17.158|
|L17.154|
        MOVS     r0,#0x3f
        STRH     r0,[r3,#0x34]
|L17.158|
        NOP      
        MOVS     r0,#0
        STR      r0,[r3,#0x44]
        MOVS     r4,#0x22
        MOVS     r0,#0x41
        STRB     r4,[r0,r3]
        NOP      
        MOVS     r4,#0
        MOVS     r0,#0x40
        STRB     r4,[r0,r3]
        NOP      
        LDR      r0,[r3,#0]
        LDR      r0,[r0,#0]
        MOVS     r4,#0xff
        ADDS     r4,r4,#0x21
        ORRS     r0,r0,r4
        LDR      r4,[r3,#0]
        STR      r0,[r4,#0]
        LDR      r0,[r3,#0]
        LDR      r0,[r0,#8]
        MOVS     r4,#1
        ORRS     r0,r0,r4
        LDR      r4,[r3,#0]
        STR      r0,[r4,#8]
        MOVS     r4,#1
        LSLS     r4,r4,#12
        LDR      r0,[r3,#8]
        CMP      r0,r4
        BNE      |L17.224|
        LDR      r0,|L17.240|
        LDR      r4,[r3,#0]
        STRH     r0,[r4,#0x28]
        B        |L17.230|
|L17.224|
        MOVS     r0,#0xff
        LDR      r4,[r3,#0]
        STRH     r0,[r4,#0x28]
|L17.230|
        MOVS     r0,#0
        B        |L17.22|
        B        |L17.236|
|L17.236|
        MOVS     r0,#2
        B        |L17.22|
        ENDP

|L17.240|
        DCD      0x000001ff

        AREA ||i.HAL_USART_RxCpltCallback||, CODE, READONLY, ALIGN=1

HAL_USART_RxCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_USART_RxHalfCpltCallback||, CODE, READONLY, ALIGN=1

HAL_USART_RxHalfCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_USART_Transmit||, CODE, READONLY, ALIGN=1

HAL_USART_Transmit PROC
        PUSH     {r1-r7,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r7,r3
        MOVS     r0,#0
        STR      r0,[sp,#8]
        STR      r0,[sp,#4]
        MOVS     r0,#0x41
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L20.226|
        CMP      r5,#0
        BEQ      |L20.32|
        CMP      r6,#0
        BNE      |L20.36|
|L20.32|
        MOVS     r0,#1
|L20.34|
        POP      {r1-r7,pc}
|L20.36|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L20.64|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L20.64|
        LSLS     r0,r5,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L20.64|
        MOVS     r0,#1
        B        |L20.34|
|L20.64|
        NOP      
        MOVS     r0,#0x40
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L20.78|
        MOVS     r0,#2
        B        |L20.34|
|L20.78|
        MOVS     r1,#1
        MOVS     r0,#0x40
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        STR      r0,[r4,#0x44]
        MOVS     r1,#0x12
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        BL       HAL_GetTick
        STR      r0,[sp,#4]
        STRH     r6,[r4,#0x28]
        STRH     r6,[r4,#0x2a]
        B        |L20.178|
|L20.108|
        LDRH     r0,[r4,#0x2a]
        SUBS     r0,r0,#1
        STRH     r0,[r4,#0x2a]
        STR      r7,[sp,#0]
        MOVS     r2,#0
        MOVS     r1,#0x40
        MOV      r0,r4
        LDR      r3,[sp,#4]
        BL       USART_WaitOnFlagUntilTimeout
        CMP      r0,#0
        BEQ      |L20.136|
        MOVS     r0,#3
        B        |L20.34|
|L20.136|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L20.170|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L20.170|
        STR      r5,[sp,#8]
        LDR      r5,[sp,#8]
        LDRH     r0,[r5,#0]
        LSLS     r0,r0,#23
        LSRS     r0,r0,#23
        LDR      r1,[r4,#0]
        STRH     r0,[r1,#0x28]
        ADDS     r5,r5,#2
        B        |L20.178|
|L20.170|
        LDRB     r0,[r5,#0]
        ADDS     r5,r5,#1
        LDR      r1,[r4,#0]
        STRH     r0,[r1,#0x28]
|L20.178|
        LDRH     r0,[r4,#0x2a]
        CMP      r0,#0
        BGT      |L20.108|
        STR      r7,[sp,#0]
        MOVS     r2,#0
        MOVS     r1,#0x40
        MOV      r0,r4
        LDR      r3,[sp,#4]
        BL       USART_WaitOnFlagUntilTimeout
        CMP      r0,#0
        BEQ      |L20.206|
        MOVS     r0,#3
        B        |L20.34|
|L20.206|
        MOVS     r1,#1
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x40
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        B        |L20.34|
|L20.226|
        MOVS     r0,#2
        B        |L20.34|
        ENDP


        AREA ||i.HAL_USART_TransmitReceive||, CODE, READONLY, ALIGN=2

HAL_USART_TransmitReceive PROC
        PUSH     {r4-r7,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r7,r3
        MOVS     r0,#0
        STR      r0,[sp,#0xc]
        STR      r0,[sp,#4]
        MOVS     r0,#0x41
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L21.250|
        CMP      r5,#0
        BEQ      |L21.38|
        CMP      r6,#0
        BEQ      |L21.38|
        CMP      r7,#0
        BNE      |L21.44|
|L21.38|
        MOVS     r0,#1
|L21.40|
        ADD      sp,sp,#0x14
        POP      {r4-r7,pc}
|L21.44|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L21.80|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L21.80|
        LSLS     r0,r5,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BNE      |L21.76|
        LSLS     r0,r6,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L21.80|
|L21.76|
        MOVS     r0,#1
        B        |L21.40|
|L21.80|
        NOP      
        MOVS     r0,#0x40
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L21.94|
        MOVS     r0,#2
        B        |L21.40|
|L21.94|
        MOVS     r1,#1
        MOVS     r0,#0x40
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        STR      r0,[r4,#0x44]
        MOVS     r1,#0x22
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        BL       HAL_GetTick
        STR      r0,[sp,#4]
        STRH     r7,[r4,#0x30]
        STRH     r7,[r4,#0x28]
        STRH     r7,[r4,#0x2a]
        STRH     r7,[r4,#0x32]
        NOP      
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L21.156|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L21.150|
        LDR      r0,|L21.400|
        STRH     r0,[r4,#0x34]
        B        |L21.206|
|L21.150|
        MOVS     r0,#0xff
        STRH     r0,[r4,#0x34]
        B        |L21.206|
|L21.156|
        LDR      r0,[r4,#8]
        CMP      r0,#0
        BNE      |L21.180|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L21.174|
        MOVS     r0,#0xff
        STRH     r0,[r4,#0x34]
        B        |L21.206|
|L21.174|
        MOVS     r0,#0x7f
        STRH     r0,[r4,#0x34]
        B        |L21.206|
|L21.180|
        MOVS     r1,#1
        LSLS     r1,r1,#28
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L21.206|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L21.202|
        MOVS     r0,#0x7f
        STRH     r0,[r4,#0x34]
        B        |L21.206|
|L21.202|
        MOVS     r0,#0x3f
        STRH     r0,[r4,#0x34]
|L21.206|
        NOP      
        LDRH     r0,[r4,#0x34]
        STR      r0,[sp,#8]
        B        |L21.370|
|L21.214|
        LDRH     r0,[r4,#0x2a]
        SUBS     r0,r0,#1
        STRH     r0,[r4,#0x2a]
        LDRH     r0,[r4,#0x32]
        SUBS     r0,r0,#1
        STRH     r0,[r4,#0x32]
        LDR      r0,[sp,#0x28]
        STR      r0,[sp,#0]
        MOVS     r2,#0
        MOVS     r1,#0x40
        MOV      r0,r4
        LDR      r3,[sp,#4]
        BL       USART_WaitOnFlagUntilTimeout
        CMP      r0,#0
        BEQ      |L21.252|
        MOVS     r0,#3
        B        |L21.40|
|L21.250|
        B        |L21.396|
|L21.252|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L21.286|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L21.286|
        STR      r5,[sp,#0xc]
        LDR      r5,[sp,#0xc]
        LDRH     r0,[r5,#0]
        LDR      r1,[sp,#8]
        ANDS     r0,r0,r1
        LDR      r1,[r4,#0]
        STRH     r0,[r1,#0x28]
        ADDS     r5,r5,#2
        B        |L21.298|
|L21.286|
        LDRB     r0,[r5,#0]
        ADDS     r5,r5,#1
        LDR      r1,[sp,#8]
        ANDS     r0,r0,r1
        LDR      r1,[r4,#0]
        STRH     r0,[r1,#0x28]
|L21.298|
        LDR      r0,[sp,#0x28]
        STR      r0,[sp,#0]
        MOVS     r2,#0
        MOVS     r1,#0x20
        MOV      r0,r4
        LDR      r3,[sp,#4]
        BL       USART_WaitOnFlagUntilTimeout
        CMP      r0,#0
        BEQ      |L21.322|
        MOVS     r0,#3
        B        |L21.40|
|L21.322|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L21.356|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L21.356|
        STR      r6,[sp,#0xc]
        LDR      r0,[r4,#0]
        LDRH     r0,[r0,#0x24]
        LDR      r1,[sp,#8]
        ANDS     r0,r0,r1
        LDR      r6,[sp,#0xc]
        STRH     r0,[r6,#0]
        ADDS     r6,r6,#2
        B        |L21.370|
|L21.356|
        LDR      r0,[r4,#0]
        LDRH     r0,[r0,#0x24]
        LDR      r1,[sp,#8]
        UXTB     r1,r1
        ANDS     r0,r0,r1
        STRB     r0,[r6,#0]
        ADDS     r6,r6,#1
|L21.370|
        LDRH     r0,[r4,#0x2a]
        CMP      r0,#0
        BNE      |L21.214|
        MOVS     r1,#1
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x40
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        B        |L21.40|
|L21.396|
        MOVS     r0,#2
        B        |L21.40|
        ENDP

|L21.400|
        DCD      0x000001ff

        AREA ||i.HAL_USART_TransmitReceive_DMA||, CODE, READONLY, ALIGN=2

HAL_USART_TransmitReceive_DMA PROC
        PUSH     {r0-r6,lr}
        MOV      r4,r0
        MOV      r5,r3
        MOVS     r0,#0x41
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L22.262|
        LDR      r0,[sp,#4]
        CMP      r0,#0
        BEQ      |L22.30|
        LDR      r0,[sp,#8]
        CMP      r0,#0
        BEQ      |L22.30|
        CMP      r5,#0
        BNE      |L22.36|
|L22.30|
        MOVS     r0,#1
|L22.32|
        ADD      sp,sp,#0x10
        POP      {r4-r6,pc}
|L22.36|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L22.76|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L22.76|
        LDR      r0,[sp,#4]
        LSLS     r0,r0,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BNE      |L22.72|
        LDR      r0,[sp,#8]
        LSLS     r0,r0,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L22.76|
|L22.72|
        MOVS     r0,#1
        B        |L22.32|
|L22.76|
        NOP      
        MOVS     r0,#0x40
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L22.90|
        MOVS     r0,#2
        B        |L22.32|
|L22.90|
        MOVS     r1,#1
        MOVS     r0,#0x40
        STRB     r1,[r0,r4]
        NOP      
        LDR      r0,[sp,#8]
        STR      r0,[r4,#0x2c]
        STRH     r5,[r4,#0x30]
        LDR      r0,[sp,#4]
        STR      r0,[r4,#0x24]
        STRH     r5,[r4,#0x28]
        MOVS     r0,#0
        STR      r0,[r4,#0x44]
        MOVS     r1,#0x32
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        LDR      r0,|L22.268|
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#0x28]
        LDR      r0,|L22.272|
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#0x2c]
        LDR      r0,|L22.276|
        LDR      r1,[r4,#0x38]
        STR      r0,[r1,#0x28]
        LDR      r0,|L22.280|
        LDR      r1,[r4,#0x38]
        STR      r0,[r1,#0x2c]
        LDR      r0,|L22.284|
        LDR      r1,[r4,#0x38]
        STR      r0,[r1,#0x30]
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#0x30]
        ADD      r6,sp,#8
        LDR      r2,[r6,#0]
        LDR      r3,[r4,#0]
        MOV      r1,r3
        ADDS     r1,r1,#0x24
        MOV      r3,r5
        LDR      r0,[r4,#0x3c]
        BL       HAL_DMA_Start_IT
        ADD      r6,sp,#4
        LDR      r3,[r4,#0]
        MOV      r2,r3
        ADDS     r2,r2,#0x28
        LDR      r1,[r6,#0]
        MOV      r3,r5
        LDR      r0,[r4,#0x38]
        BL       HAL_DMA_Start_IT
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x40
        STRB     r1,[r0,r4]
        NOP      
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r0,#0x40
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r0,#0
        B        |L22.32|
        B        |L22.262|
|L22.262|
        MOVS     r0,#2
        B        |L22.32|
        ENDP

        DCW      0x0000
|L22.268|
        DCD      USART_DMAReceiveCplt
|L22.272|
        DCD      USART_DMARxHalfCplt
|L22.276|
        DCD      USART_DMATransmitCplt
|L22.280|
        DCD      USART_DMATxHalfCplt
|L22.284|
        DCD      USART_DMAError

        AREA ||i.HAL_USART_TransmitReceive_IT||, CODE, READONLY, ALIGN=2

HAL_USART_TransmitReceive_IT PROC
        PUSH     {r4,r5,lr}
        MOV      r4,r0
        MOVS     r0,#0x41
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L23.242|
        CMP      r1,#0
        BEQ      |L23.24|
        CMP      r2,#0
        BEQ      |L23.24|
        CMP      r3,#0
        BNE      |L23.28|
|L23.24|
        MOVS     r0,#1
|L23.26|
        POP      {r4,r5,pc}
|L23.28|
        MOVS     r5,#1
        LSLS     r5,r5,#12
        LDR      r0,[r4,#8]
        CMP      r0,r5
        BNE      |L23.64|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L23.64|
        LSLS     r0,r1,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BNE      |L23.60|
        LSLS     r0,r2,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L23.64|
|L23.60|
        MOVS     r0,#1
        B        |L23.26|
|L23.64|
        NOP      
        MOVS     r0,#0x40
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L23.78|
        MOVS     r0,#2
        B        |L23.26|
|L23.78|
        MOVS     r5,#1
        MOVS     r0,#0x40
        STRB     r5,[r0,r4]
        NOP      
        STR      r2,[r4,#0x2c]
        STRH     r3,[r4,#0x30]
        STRH     r3,[r4,#0x32]
        STR      r1,[r4,#0x24]
        STRH     r3,[r4,#0x28]
        STRH     r3,[r4,#0x2a]
        NOP      
        LSLS     r5,r5,#12
        LDR      r0,[r4,#8]
        CMP      r0,r5
        BNE      |L23.126|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L23.120|
        LDR      r0,|L23.248|
        STRH     r0,[r4,#0x34]
        B        |L23.176|
|L23.120|
        MOVS     r0,#0xff
        STRH     r0,[r4,#0x34]
        B        |L23.176|
|L23.126|
        LDR      r0,[r4,#8]
        CMP      r0,#0
        BNE      |L23.150|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L23.144|
        MOVS     r0,#0xff
        STRH     r0,[r4,#0x34]
        B        |L23.176|
|L23.144|
        MOVS     r0,#0x7f
        STRH     r0,[r4,#0x34]
        B        |L23.176|
|L23.150|
        MOVS     r5,#1
        LSLS     r5,r5,#28
        LDR      r0,[r4,#8]
        CMP      r0,r5
        BNE      |L23.176|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L23.172|
        MOVS     r0,#0x7f
        STRH     r0,[r4,#0x34]
        B        |L23.176|
|L23.172|
        MOVS     r0,#0x3f
        STRH     r0,[r4,#0x34]
|L23.176|
        NOP      
        MOVS     r0,#0
        STR      r0,[r4,#0x44]
        MOVS     r5,#0x32
        MOVS     r0,#0x41
        STRB     r5,[r0,r4]
        NOP      
        MOVS     r5,#0
        MOVS     r0,#0x40
        STRB     r5,[r0,r4]
        NOP      
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r5,#1
        ORRS     r0,r0,r5
        LDR      r5,[r4,#0]
        STR      r0,[r5,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r5,#0xff
        ADDS     r5,r5,#0x21
        ORRS     r0,r0,r5
        LDR      r5,[r4,#0]
        STR      r0,[r5,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r5,#0x80
        ORRS     r0,r0,r5
        LDR      r5,[r4,#0]
        STR      r0,[r5,#0]
        MOVS     r0,#0
        B        |L23.26|
        B        |L23.242|
|L23.242|
        MOVS     r0,#2
        B        |L23.26|
        ENDP

        DCW      0x0000
|L23.248|
        DCD      0x000001ff

        AREA ||i.HAL_USART_Transmit_DMA||, CODE, READONLY, ALIGN=2

HAL_USART_Transmit_DMA PROC
        PUSH     {r0-r2,r4-r7,lr}
        MOV      r4,r0
        MOV      r5,r2
        MOVS     r6,#0
        MOVS     r0,#0x41
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L24.166|
        LDR      r0,[sp,#4]
        CMP      r0,#0
        BEQ      |L24.26|
        CMP      r5,#0
        BNE      |L24.30|
|L24.26|
        MOVS     r0,#1
|L24.28|
        POP      {r1-r7,pc}
|L24.30|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L24.60|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L24.60|
        LDR      r0,[sp,#4]
        LSLS     r0,r0,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L24.60|
        MOVS     r0,#1
        B        |L24.28|
|L24.60|
        NOP      
        MOVS     r0,#0x40
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L24.74|
        MOVS     r0,#2
        B        |L24.28|
|L24.74|
        MOVS     r1,#1
        MOVS     r0,#0x40
        STRB     r1,[r0,r4]
        NOP      
        LDR      r0,[sp,#4]
        STR      r0,[r4,#0x24]
        STRH     r5,[r4,#0x28]
        STRH     r5,[r4,#0x2a]
        MOVS     r0,#0
        STR      r0,[r4,#0x44]
        MOVS     r1,#0x12
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        LDR      r0,|L24.172|
        LDR      r1,[r4,#0x38]
        STR      r0,[r1,#0x28]
        LDR      r0,|L24.176|
        LDR      r1,[r4,#0x38]
        STR      r0,[r1,#0x2c]
        LDR      r0,|L24.180|
        LDR      r1,[r4,#0x38]
        STR      r0,[r1,#0x30]
        ADD      r6,sp,#4
        LDR      r3,[r4,#0]
        MOV      r2,r3
        ADDS     r2,r2,#0x28
        LDR      r1,[r6,#0]
        MOV      r3,r5
        LDR      r0,[r4,#0x38]
        BL       HAL_DMA_Start_IT
        MOVS     r0,#0x40
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        NOP      
        MOVS     r1,#0
        STRB     r1,[r0,r4]
        NOP      
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r0,#0
        B        |L24.28|
|L24.166|
        MOVS     r0,#2
        B        |L24.28|
        ENDP

        DCW      0x0000
|L24.172|
        DCD      USART_DMATransmitCplt
|L24.176|
        DCD      USART_DMATxHalfCplt
|L24.180|
        DCD      USART_DMAError

        AREA ||i.HAL_USART_Transmit_IT||, CODE, READONLY, ALIGN=1

HAL_USART_Transmit_IT PROC
        PUSH     {r4,lr}
        MOV      r3,r0
        MOVS     r0,#0x41
        LDRB     r0,[r0,r3]
        CMP      r0,#1
        BNE      |L25.116|
        CMP      r1,#0
        BEQ      |L25.20|
        CMP      r2,#0
        BNE      |L25.24|
|L25.20|
        MOVS     r0,#1
|L25.22|
        POP      {r4,pc}
|L25.24|
        MOVS     r4,#1
        LSLS     r4,r4,#12
        LDR      r0,[r3,#8]
        CMP      r0,r4
        BNE      |L25.52|
        LDR      r0,[r3,#0x10]
        CMP      r0,#0
        BNE      |L25.52|
        LSLS     r0,r1,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L25.52|
        MOVS     r0,#1
        B        |L25.22|
|L25.52|
        NOP      
        MOVS     r0,#0x40
        LDRB     r0,[r0,r3]
        CMP      r0,#1
        BNE      |L25.66|
        MOVS     r0,#2
        B        |L25.22|
|L25.66|
        MOVS     r4,#1
        MOVS     r0,#0x40
        STRB     r4,[r0,r3]
        NOP      
        STR      r1,[r3,#0x24]
        STRH     r2,[r3,#0x28]
        STRH     r2,[r3,#0x2a]
        MOVS     r0,#0
        STR      r0,[r3,#0x44]
        MOVS     r4,#0x12
        MOVS     r0,#0x41
        STRB     r4,[r0,r3]
        NOP      
        MOVS     r4,#0
        MOVS     r0,#0x40
        STRB     r4,[r0,r3]
        NOP      
        LDR      r0,[r3,#0]
        LDR      r0,[r0,#0]
        MOVS     r4,#0x80
        ORRS     r0,r0,r4
        LDR      r4,[r3,#0]
        STR      r0,[r4,#0]
        MOVS     r0,#0
        B        |L25.22|
|L25.116|
        MOVS     r0,#2
        B        |L25.22|
        ENDP


        AREA ||i.HAL_USART_TxCpltCallback||, CODE, READONLY, ALIGN=1

HAL_USART_TxCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_USART_TxHalfCpltCallback||, CODE, READONLY, ALIGN=1

HAL_USART_TxHalfCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_USART_TxRxCpltCallback||, CODE, READONLY, ALIGN=1

HAL_USART_TxRxCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.USART_CheckIdleState||, CODE, READONLY, ALIGN=2

USART_CheckIdleState PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOVS     r5,#0
        MOVS     r0,#0
        STR      r0,[r4,#0x44]
        BL       HAL_GetTick
        MOV      r5,r0
        LDR      r1,|L29.128|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BEQ      |L29.32|
        LDR      r1,|L29.132|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L29.108|
|L29.32|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#8
        ANDS     r0,r0,r1
        CMP      r0,#8
        BNE      |L29.70|
        MOVS     r0,#0x7d
        LSLS     r0,r0,#3
        MOV      r3,r5
        MOVS     r2,#0
        LSLS     r1,r1,#18
        STR      r0,[sp,#0]
        MOV      r0,r4
        BL       USART_WaitOnFlagUntilTimeout
        CMP      r0,#0
        BEQ      |L29.70|
        MOVS     r0,#3
|L29.68|
        POP      {r3-r5,pc}
|L29.70|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#4
        ANDS     r0,r0,r1
        CMP      r0,#4
        BNE      |L29.108|
        MOVS     r0,#0x7d
        LSLS     r0,r0,#3
        MOV      r3,r5
        MOVS     r2,#0
        LSLS     r1,r1,#20
        STR      r0,[sp,#0]
        MOV      r0,r4
        BL       USART_WaitOnFlagUntilTimeout
        CMP      r0,#0
        BEQ      |L29.108|
        MOVS     r0,#3
        B        |L29.68|
|L29.108|
        MOVS     r1,#1
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x40
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        B        |L29.68|
        ENDP

|L29.128|
        DCD      0x40013800
|L29.132|
        DCD      0x40004400

        AREA ||i.USART_DMAAbortOnError||, CODE, READONLY, ALIGN=1

USART_DMAAbortOnError PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        MOVS     r0,#0
        STRH     r0,[r4,#0x32]
        STRH     r0,[r4,#0x2a]
        MOV      r0,r4
        BL       HAL_USART_ErrorCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.USART_DMAError||, CODE, READONLY, ALIGN=1

USART_DMAError PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        MOVS     r0,#0
        STRH     r0,[r4,#0x32]
        STRH     r0,[r4,#0x2a]
        MOV      r0,r4
        BL       USART_EndTransfer
        LDR      r0,[r4,#0x44]
        MOVS     r1,#0x10
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x44]
        MOVS     r1,#1
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_USART_ErrorCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.USART_DMAReceiveCplt||, CODE, READONLY, ALIGN=1

USART_DMAReceiveCplt PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        LDR      r0,[r5,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0x20
        ANDS     r0,r0,r1
        CMP      r0,#0
        BNE      |L32.98|
        STRH     r0,[r4,#0x32]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSLS     r1,r1,#3
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r0,#0x41
        LDRB     r0,[r0,r4]
        CMP      r0,#0x22
        BNE      |L32.84|
        MOV      r0,r4
        BL       HAL_USART_RxCpltCallback
        B        |L32.90|
|L32.84|
        MOV      r0,r4
        BL       HAL_USART_TxRxCpltCallback
|L32.90|
        MOVS     r1,#1
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        B        |L32.120|
|L32.98|
        MOVS     r0,#0x41
        LDRB     r0,[r0,r4]
        CMP      r0,#0x22
        BNE      |L32.114|
        MOV      r0,r4
        BL       HAL_USART_RxCpltCallback
        B        |L32.120|
|L32.114|
        MOV      r0,r4
        BL       HAL_USART_TxRxCpltCallback
|L32.120|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.USART_DMARxAbortCallback||, CODE, READONLY, ALIGN=1

USART_DMARxAbortCallback PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        MOVS     r0,#0
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x38]
        CMP      r0,#0
        BEQ      |L33.28|
        LDR      r0,[r4,#0x38]
        LDR      r0,[r0,#0x34]
        CMP      r0,#0
        BEQ      |L33.28|
|L33.26|
        POP      {r4-r6,pc}
|L33.28|
        MOVS     r0,#0
        STRH     r0,[r4,#0x2a]
        STRH     r0,[r4,#0x32]
        STR      r0,[r4,#0x44]
        MOVS     r0,#0xf
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#1
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_USART_AbortCpltCallback
        NOP      
        B        |L33.26|
        ENDP


        AREA ||i.USART_DMARxHalfCplt||, CODE, READONLY, ALIGN=1

USART_DMARxHalfCplt PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r5,[r4,#0x24]
        MOV      r0,r5
        BL       HAL_USART_RxHalfCpltCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.USART_DMATransmitCplt||, CODE, READONLY, ALIGN=1

USART_DMATransmitCplt PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        LDR      r0,[r5,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0x20
        ANDS     r0,r0,r1
        CMP      r0,#0
        BNE      |L35.54|
        STRH     r0,[r4,#0x2a]
        MOVS     r0,#0x41
        LDRB     r0,[r0,r4]
        CMP      r0,#0x12
        BNE      |L35.68|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0x40
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        B        |L35.68|
|L35.54|
        MOVS     r0,#0x41
        LDRB     r0,[r0,r4]
        CMP      r0,#0x12
        BNE      |L35.68|
        MOV      r0,r4
        BL       HAL_USART_TxCpltCallback
|L35.68|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.USART_DMATxAbortCallback||, CODE, READONLY, ALIGN=1

USART_DMATxAbortCallback PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        MOVS     r0,#0
        LDR      r1,[r4,#0x38]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x3c]
        CMP      r0,#0
        BEQ      |L36.28|
        LDR      r0,[r4,#0x3c]
        LDR      r0,[r0,#0x34]
        CMP      r0,#0
        BEQ      |L36.28|
|L36.26|
        POP      {r4-r6,pc}
|L36.28|
        MOVS     r0,#0
        STRH     r0,[r4,#0x2a]
        STRH     r0,[r4,#0x32]
        STR      r0,[r4,#0x44]
        MOVS     r0,#0xf
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#1
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_USART_AbortCpltCallback
        NOP      
        B        |L36.26|
        ENDP


        AREA ||i.USART_DMATxHalfCplt||, CODE, READONLY, ALIGN=1

USART_DMATxHalfCplt PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r5,[r4,#0x24]
        MOV      r0,r5
        BL       HAL_USART_TxHalfCpltCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.USART_EndTransfer||, CODE, READONLY, ALIGN=1

USART_EndTransfer PROC
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#0]
        MOVS     r2,#0xff
        ADDS     r2,r2,#0xe1
        BICS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#0]
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#8]
        LSRS     r1,r1,#1
        LSLS     r1,r1,#1
        LDR      r2,[r0,#0]
        STR      r1,[r2,#8]
        MOVS     r2,#1
        MOVS     r1,#0x41
        STRB     r2,[r1,r0]
        BX       lr
        ENDP


        AREA ||i.USART_EndTransmit_IT||, CODE, READONLY, ALIGN=1

USART_EndTransmit_IT PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0x40
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r1,#1
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_USART_TxCpltCallback
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.USART_Receive_IT||, CODE, READONLY, ALIGN=1

USART_Receive_IT PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r6,#0
        LDRH     r5,[r4,#0x34]
        MOVS     r0,#0x41
        LDRB     r0,[r0,r4]
        CMP      r0,#0x22
        BNE      |L40.130|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L40.50|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L40.50|
        LDR      r6,[r4,#0x2c]
        LDR      r0,[r4,#0]
        LDRH     r0,[r0,#0x24]
        ANDS     r0,r0,r5
        STRH     r0,[r6,#0]
        LDR      r0,[r4,#0x2c]
        ADDS     r0,r0,#2
        STR      r0,[r4,#0x2c]
        B        |L40.66|
|L40.50|
        LDR      r0,[r4,#0]
        LDRH     r0,[r0,#0x24]
        UXTB     r1,r5
        ANDS     r0,r0,r1
        LDR      r2,[r4,#0x2c]
        ADDS     r1,r2,#1
        STR      r1,[r4,#0x2c]
        STRB     r0,[r2,#0]
|L40.66|
        MOVS     r0,#0xff
        LDR      r1,[r4,#0]
        STRH     r0,[r1,#0x28]
        LDRH     r0,[r4,#0x32]
        SUBS     r0,r0,#1
        UXTH     r0,r0
        STRH     r0,[r4,#0x32]
        CMP      r0,#0
        BNE      |L40.126|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,r1,#0x21
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r1,#1
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_USART_RxCpltCallback
        MOVS     r0,#0
|L40.124|
        POP      {r4-r6,pc}
|L40.126|
        MOVS     r0,#0
        B        |L40.124|
|L40.130|
        MOVS     r0,#2
        B        |L40.124|
        ENDP


        AREA ||i.USART_SetConfig||, CODE, READONLY, ALIGN=2

USART_SetConfig PROC
        PUSH     {r1-r7,lr}
        MOV      r4,r0
        MOVS     r5,#0
        MOVS     r0,#0x10
        STR      r0,[sp,#8]
        MOVS     r0,#0
        STR      r0,[sp,#4]
        MOVS     r6,#0
        MOVS     r7,#0
        LDR      r1,[r4,#0x10]
        LDR      r0,[r4,#8]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0x14]
        ORRS     r0,r0,r1
        MOVS     r1,#1
        LSLS     r1,r1,#15
        ORRS     r0,r0,r1
        MOV      r5,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LDR      r1,|L41.400|
        ANDS     r0,r0,r1
        ORRS     r0,r0,r5
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOVS     r5,#1
        LSLS     r5,r5,#11
        LDR      r1,[r4,#0x1c]
        LDR      r0,[r4,#0x18]
        ORRS     r0,r0,r1
        ORRS     r5,r5,r0
        LDR      r1,[r4,#0xc]
        LDR      r0,[r4,#0x20]
        ORRS     r0,r0,r1
        ORRS     r5,r5,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        MOVS     r1,#0x3f
        LSLS     r1,r1,#8
        BICS     r0,r0,r1
        ORRS     r0,r0,r5
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        NOP      
        LDR      r1,|L41.404|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L41.154|
        LDR      r0,|L41.408|
        LDR      r0,[r0,#0x30]
        LSLS     r0,r0,#30
        LSRS     r0,r0,#30
        CMP      r0,#0
        BEQ      |L41.122|
        CMP      r0,#1
        BEQ      |L41.134|
        CMP      r0,#2
        BEQ      |L41.140|
        CMP      r0,#3
        BNE      |L41.146|
        B        |L41.128|
|L41.122|
        MOVS     r0,#0
        STR      r0,[sp,#8]
        B        |L41.152|
|L41.128|
        MOVS     r0,#2
        STR      r0,[sp,#8]
        B        |L41.152|
|L41.134|
        MOVS     r0,#4
        STR      r0,[sp,#8]
        B        |L41.152|
|L41.140|
        MOVS     r0,#8
        STR      r0,[sp,#8]
        B        |L41.152|
|L41.146|
        MOVS     r0,#0x10
        STR      r0,[sp,#8]
        NOP      
|L41.152|
        B        |L41.258|
|L41.154|
        LDR      r1,|L41.412|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L41.226|
        LDR      r0,|L41.408|
        LDR      r0,[r0,#0x30]
        MOVS     r1,#3
        LSLS     r1,r1,#16
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L41.194|
        MOVS     r1,#1
        LSLS     r1,r1,#16
        SUBS     r0,r0,r1
        BEQ      |L41.206|
        SUBS     r0,r0,r1
        BEQ      |L41.212|
        SUBS     r0,r0,r1
        BNE      |L41.218|
        B        |L41.200|
|L41.194|
        MOVS     r0,#0
        STR      r0,[sp,#8]
        B        |L41.224|
|L41.200|
        MOVS     r0,#2
        STR      r0,[sp,#8]
        B        |L41.224|
|L41.206|
        MOVS     r0,#4
        STR      r0,[sp,#8]
        B        |L41.224|
|L41.212|
        MOVS     r0,#8
        STR      r0,[sp,#8]
        B        |L41.224|
|L41.218|
        MOVS     r0,#0x10
        STR      r0,[sp,#8]
        NOP      
|L41.224|
        B        |L41.258|
|L41.226|
        LDR      r1,|L41.416|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L41.240|
        MOVS     r0,#0
        STR      r0,[sp,#8]
        B        |L41.258|
|L41.240|
        LDR      r1,|L41.420|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L41.254|
        MOVS     r0,#0
        STR      r0,[sp,#8]
        B        |L41.258|
|L41.254|
        MOVS     r0,#0x10
        STR      r0,[sp,#8]
|L41.258|
        NOP      
        LDR      r0,[sp,#8]
        CMP      r0,#4
        BEQ      |L41.328|
        BGT      |L41.278|
        CMP      r0,#0
        BEQ      |L41.288|
        CMP      r0,#2
        BNE      |L41.370|
        B        |L41.312|
|L41.278|
        CMP      r0,#8
        BEQ      |L41.352|
        CMP      r0,#0x10
        BNE      |L41.370|
        B        |L41.372|
|L41.288|
        BL       HAL_RCC_GetPCLK1Freq
        LSLS     r0,r0,#1
        LDR      r1,[r4,#4]
        LSRS     r1,r1,#1
        ADDS     r0,r0,r1
        STR      r0,[sp,#0]
        LDR      r1,[r4,#4]
        BL       __aeabi_uidivmod
        UXTH     r7,r0
        B        |L41.378|
|L41.312|
        LDR      r1,[r4,#4]
        LSRS     r2,r1,#1
        LDR      r3,|L41.424|
        ADDS     r0,r2,r3
        BL       __aeabi_uidivmod
        UXTH     r7,r0
        B        |L41.378|
|L41.328|
        BL       HAL_RCC_GetSysClockFreq
        LSLS     r0,r0,#1
        LDR      r1,[r4,#4]
        LSRS     r1,r1,#1
        ADDS     r0,r0,r1
        STR      r0,[sp,#0]
        LDR      r1,[r4,#4]
        BL       __aeabi_uidivmod
        UXTH     r7,r0
        B        |L41.378|
|L41.352|
        LDR      r1,[r4,#4]
        LSRS     r2,r1,#1
        MOVS     r3,#1
        LSLS     r3,r3,#16
        ADDS     r0,r2,r3
        BL       __aeabi_uidivmod
        UXTH     r7,r0
        B        |L41.378|
|L41.370|
        NOP      
|L41.372|
        MOVS     r0,#1
        STR      r0,[sp,#4]
        NOP      
|L41.378|
        NOP      
        LDR      r0,|L41.428|
        ANDS     r0,r0,r7
        MOV      r6,r0
        LSLS     r0,r7,#28
        LSRS     r0,r0,#29
        ORRS     r6,r6,r0
        LDR      r0,[r4,#0]
        STR      r6,[r0,#0xc]
        LDR      r0,[sp,#4]
        POP      {r1-r7,pc}
        ENDP

|L41.400|
        DCD      0xefff69f3
|L41.404|
        DCD      0x40013800
|L41.408|
        DCD      0x40021000
|L41.412|
        DCD      0x40004400
|L41.416|
        DCD      0x40004800
|L41.420|
        DCD      0x40004c00
|L41.424|
        DCD      0x00f42400
|L41.428|
        DCD      0x0000fff0

        AREA ||i.USART_TransmitReceive_IT||, CODE, READONLY, ALIGN=1

USART_TransmitReceive_IT PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r6,#0
        LDRH     r5,[r4,#0x34]
        MOVS     r0,#0x41
        LDRB     r0,[r0,r4]
        CMP      r0,#0x32
        BNE      |L42.232|
        LDRH     r0,[r4,#0x2a]
        CMP      r0,#0
        BEQ      |L42.106|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x1c]
        MOVS     r1,#0x80
        ANDS     r0,r0,r1
        LSRS     r0,r0,#7
        CMP      r0,#0
        BEQ      |L42.106|
        LSLS     r1,r1,#5
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L42.68|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L42.68|
        LDR      r6,[r4,#0x24]
        LDRH     r0,[r6,#0]
        ANDS     r0,r0,r5
        LDR      r1,[r4,#0]
        STRH     r0,[r1,#0x28]
        LDR      r0,[r4,#0x24]
        ADDS     r0,r0,#2
        STR      r0,[r4,#0x24]
        B        |L42.82|
|L42.68|
        LDR      r1,[r4,#0x24]
        ADDS     r0,r1,#1
        STR      r0,[r4,#0x24]
        LDRB     r0,[r1,#0]
        ANDS     r0,r0,r5
        LDR      r1,[r4,#0]
        STRH     r0,[r1,#0x28]
|L42.82|
        LDRH     r0,[r4,#0x2a]
        SUBS     r0,r0,#1
        STRH     r0,[r4,#0x2a]
        LDRH     r0,[r4,#0x2a]
        CMP      r0,#0
        BNE      |L42.106|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0x80
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
|L42.106|
        LDRH     r0,[r4,#0x32]
        CMP      r0,#0
        BEQ      |L42.180|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x1c]
        MOVS     r1,#0x20
        ANDS     r0,r0,r1
        LSRS     r0,r0,#5
        CMP      r0,#0
        BEQ      |L42.180|
        LSLS     r1,r1,#7
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L42.158|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L42.158|
        LDR      r6,[r4,#0x2c]
        LDR      r0,[r4,#0]
        LDRH     r0,[r0,#0x24]
        ANDS     r0,r0,r5
        STRH     r0,[r6,#0]
        LDR      r0,[r4,#0x2c]
        ADDS     r0,r0,#2
        STR      r0,[r4,#0x2c]
        B        |L42.174|
|L42.158|
        LDR      r0,[r4,#0]
        LDRH     r0,[r0,#0x24]
        UXTB     r1,r5
        ANDS     r0,r0,r1
        LDR      r2,[r4,#0x2c]
        ADDS     r1,r2,#1
        STR      r1,[r4,#0x2c]
        STRB     r0,[r2,#0]
|L42.174|
        LDRH     r0,[r4,#0x32]
        SUBS     r0,r0,#1
        STRH     r0,[r4,#0x32]
|L42.180|
        LDRH     r0,[r4,#0x32]
        CMP      r0,#0
        BNE      |L42.228|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,r1,#0x21
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r1,#1
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_USART_TxRxCpltCallback
        MOVS     r0,#0
|L42.226|
        POP      {r4-r6,pc}
|L42.228|
        MOVS     r0,#0
        B        |L42.226|
|L42.232|
        MOVS     r0,#2
        B        |L42.226|
        ENDP


        AREA ||i.USART_Transmit_IT||, CODE, READONLY, ALIGN=1

USART_Transmit_IT PROC
        MOV      r1,r0
        MOVS     r2,#0
        MOVS     r0,#0x41
        LDRB     r0,[r0,r1]
        CMP      r0,#0x12
        BNE      |L43.104|
        LDRH     r0,[r1,#0x2a]
        CMP      r0,#0
        BNE      |L43.46|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        MOVS     r3,#0x80
        BICS     r0,r0,r3
        LDR      r3,[r1,#0]
        STR      r0,[r3,#0]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        MOVS     r3,#0x40
        ORRS     r0,r0,r3
        LDR      r3,[r1,#0]
        STR      r0,[r3,#0]
        MOVS     r0,#0
|L43.44|
        BX       lr
|L43.46|
        MOVS     r3,#1
        LSLS     r3,r3,#12
        LDR      r0,[r1,#8]
        CMP      r0,r3
        BNE      |L43.82|
        LDR      r0,[r1,#0x10]
        CMP      r0,#0
        BNE      |L43.82|
        LDR      r2,[r1,#0x24]
        LDRH     r0,[r2,#0]
        LSLS     r0,r0,#23
        LSRS     r0,r0,#23
        LDR      r3,[r1,#0]
        STRH     r0,[r3,#0x28]
        LDR      r0,[r1,#0x24]
        ADDS     r0,r0,#2
        STR      r0,[r1,#0x24]
        B        |L43.94|
|L43.82|
        LDR      r3,[r1,#0x24]
        ADDS     r0,r3,#1
        STR      r0,[r1,#0x24]
        LDRB     r0,[r3,#0]
        LDR      r3,[r1,#0]
        STRH     r0,[r3,#0x28]
|L43.94|
        LDRH     r0,[r1,#0x2a]
        SUBS     r0,r0,#1
        STRH     r0,[r1,#0x2a]
        MOVS     r0,#0
        B        |L43.44|
|L43.104|
        MOVS     r0,#2
        B        |L43.44|
        ENDP


        AREA ||i.USART_WaitOnFlagUntilTimeout||, CODE, READONLY, ALIGN=1

USART_WaitOnFlagUntilTimeout PROC
        PUSH     {r0-r7,lr}
        SUB      sp,sp,#4
        MOV      r4,r0
        MOV      r5,r1
        MOV      r7,r2
        LDR      r6,[sp,#0x28]
        B        |L44.84|
|L44.14|
        ADDS     r0,r6,#1
        CMP      r0,#0
        BEQ      |L44.84|
        CMP      r6,#0
        BEQ      |L44.36|
        BL       HAL_GetTick
        LDR      r1,[sp,#0x10]
        SUBS     r0,r0,r1
        CMP      r0,r6
        BLS      |L44.84|
|L44.36|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,r1,#0xa1
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r1,#1
        MOVS     r0,#0x41
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x40
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#3
|L44.80|
        ADD      sp,sp,#0x14
        POP      {r4-r7,pc}
|L44.84|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x1c]
        ANDS     r0,r0,r5
        CMP      r0,r5
        BNE      |L44.98|
        MOVS     r0,#1
        B        |L44.100|
|L44.98|
        MOVS     r0,#0
|L44.100|
        CMP      r0,r7
        BEQ      |L44.14|
        MOVS     r0,#0
        B        |L44.80|
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F0xx_DFP\\2.0.0\\Drivers\\STM32F0xx_HAL_Driver\\Src\\stm32f0xx_hal_usart.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___21_stm32f0xx_hal_usart_c_32ae8742____REV16|
#line 463 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.4.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___21_stm32f0xx_hal_usart_c_32ae8742____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___21_stm32f0xx_hal_usart_c_32ae8742____REVSH|
#line 478
|__asm___21_stm32f0xx_hal_usart_c_32ae8742____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT HAL_USART_Abort [CODE]
        EXPORT HAL_USART_AbortCpltCallback [CODE,WEAK]
        EXPORT HAL_USART_Abort_IT [CODE]
        EXPORT HAL_USART_DMAPause [CODE]
        EXPORT HAL_USART_DMAResume [CODE]
        EXPORT HAL_USART_DMAStop [CODE]
        EXPORT HAL_USART_DeInit [CODE]
        EXPORT HAL_USART_ErrorCallback [CODE,WEAK]
        EXPORT HAL_USART_GetError [CODE]
        EXPORT HAL_USART_GetState [CODE]
        EXPORT HAL_USART_IRQHandler [CODE]
        EXPORT HAL_USART_Init [CODE]
        EXPORT HAL_USART_MspDeInit [CODE,WEAK]
        EXPORT HAL_USART_MspInit [CODE,WEAK]
        EXPORT HAL_USART_Receive [CODE]
        EXPORT HAL_USART_Receive_DMA [CODE]
        EXPORT HAL_USART_Receive_IT [CODE]
        EXPORT HAL_USART_RxCpltCallback [CODE,WEAK]
        EXPORT HAL_USART_RxHalfCpltCallback [CODE,WEAK]
        EXPORT HAL_USART_Transmit [CODE]
        EXPORT HAL_USART_TransmitReceive [CODE]
        EXPORT HAL_USART_TransmitReceive_DMA [CODE]
        EXPORT HAL_USART_TransmitReceive_IT [CODE]
        EXPORT HAL_USART_Transmit_DMA [CODE]
        EXPORT HAL_USART_Transmit_IT [CODE]
        EXPORT HAL_USART_TxCpltCallback [CODE,WEAK]
        EXPORT HAL_USART_TxHalfCpltCallback [CODE,WEAK]
        EXPORT HAL_USART_TxRxCpltCallback [CODE,WEAK]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT HAL_GetTick [CODE]
        IMPORT HAL_RCC_GetPCLK1Freq [CODE]
        IMPORT __aeabi_uidivmod [CODE]
        IMPORT HAL_RCC_GetSysClockFreq [CODE]
        IMPORT HAL_DMA_Start_IT [CODE]
        IMPORT HAL_DMA_Abort [CODE]
        IMPORT HAL_DMA_Abort_IT [CODE]

        KEEP USART_CheckIdleState
        KEEP USART_DMAAbortOnError
        KEEP USART_DMAError
        KEEP USART_DMAReceiveCplt
        KEEP USART_DMARxAbortCallback
        KEEP USART_DMARxHalfCplt
        KEEP USART_DMATransmitCplt
        KEEP USART_DMATxAbortCallback
        KEEP USART_DMATxHalfCplt
        KEEP USART_EndTransfer
        KEEP USART_EndTransmit_IT
        KEEP USART_Receive_IT
        KEEP USART_SetConfig
        KEEP USART_TransmitReceive_IT
        KEEP USART_Transmit_IT
        KEEP USART_WaitOnFlagUntilTimeout

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
