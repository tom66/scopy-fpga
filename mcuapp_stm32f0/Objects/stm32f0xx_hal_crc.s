; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -o.\objects\stm32f0xx_hal_crc.o --depend=.\objects\stm32f0xx_hal_crc.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE\Device\STM32F071VBTx -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0 -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32F0xx\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc\Legacy -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F071xB --omf_browse=.\objects\stm32f0xx_hal_crc.crf C:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Src\stm32f0xx_hal_crc.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.CRC_Handle_16||, CODE, READONLY, ALIGN=1

CRC_Handle_16 PROC
        PUSH     {r4,r5,lr}
        MOV      r3,r0
        MOV      r4,r1
        MOVS     r1,#0
        NOP      
        B        |L1.34|
|L1.12|
        LSLS     r0,r1,#2
        LDRH     r0,[r4,r0]
        LSLS     r0,r0,#16
        LSLS     r5,r1,#1
        ADDS     r5,r5,#1
        LSLS     r5,r5,#1
        LDRH     r5,[r4,r5]
        ORRS     r0,r0,r5
        LDR      r5,[r3,#0]
        STR      r0,[r5,#0]
        ADDS     r1,r1,#1
|L1.34|
        LSRS     r0,r2,#1
        CMP      r0,r1
        BHI      |L1.12|
        LSLS     r0,r2,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L1.56|
        LSLS     r0,r1,#2
        LDRH     r0,[r4,r0]
        LDR      r5,[r3,#0]
        STRH     r0,[r5,#0]
|L1.56|
        LDR      r0,[r3,#0]
        LDR      r0,[r0,#0]
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.CRC_Handle_8||, CODE, READONLY, ALIGN=1

CRC_Handle_8 PROC
        PUSH     {r4,r5,lr}
        MOV      r4,r0
        MOV      r3,r1
        MOVS     r1,#0
        NOP      
        B        |L2.52|
|L2.12|
        LSLS     r0,r1,#2
        LDRB     r0,[r3,r0]
        LSLS     r0,r0,#24
        LSLS     r5,r1,#2
        ADDS     r5,r5,#1
        LDRB     r5,[r3,r5]
        LSLS     r5,r5,#16
        ORRS     r0,r0,r5
        LSLS     r5,r1,#2
        ADDS     r5,r5,#2
        LDRB     r5,[r3,r5]
        LSLS     r5,r5,#8
        ORRS     r0,r0,r5
        LSLS     r5,r1,#2
        ADDS     r5,r5,#3
        LDRB     r5,[r3,r5]
        ORRS     r0,r0,r5
        LDR      r5,[r4,#0]
        STR      r0,[r5,#0]
        ADDS     r1,r1,#1
|L2.52|
        LSRS     r0,r2,#2
        CMP      r0,r1
        BHI      |L2.12|
        LSLS     r0,r2,#30
        LSRS     r0,r0,#30
        CMP      r0,#0
        BEQ      |L2.144|
        LSLS     r0,r2,#30
        LSRS     r0,r0,#30
        CMP      r0,#1
        BNE      |L2.82|
        LSLS     r0,r1,#2
        LDRB     r0,[r3,r0]
        LDR      r5,[r4,#0]
        STRB     r0,[r5,#0]
|L2.82|
        LSLS     r0,r2,#30
        LSRS     r0,r0,#30
        CMP      r0,#2
        BNE      |L2.108|
        LSLS     r0,r1,#2
        LDRB     r0,[r3,r0]
        LSLS     r0,r0,#8
        LSLS     r5,r1,#2
        ADDS     r5,r5,#1
        LDRB     r5,[r3,r5]
        ORRS     r0,r0,r5
        LDR      r5,[r4,#0]
        STRH     r0,[r5,#0]
|L2.108|
        LSLS     r0,r2,#30
        LSRS     r0,r0,#30
        CMP      r0,#3
        BNE      |L2.144|
        LSLS     r0,r1,#2
        LDRB     r0,[r3,r0]
        LSLS     r0,r0,#8
        LSLS     r5,r1,#2
        ADDS     r5,r5,#1
        LDRB     r5,[r3,r5]
        ORRS     r0,r0,r5
        LDR      r5,[r4,#0]
        STRH     r0,[r5,#0]
        LSLS     r0,r1,#2
        ADDS     r0,r0,#2
        LDRB     r0,[r3,r0]
        LDR      r5,[r4,#0]
        STRB     r0,[r5,#0]
|L2.144|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.HAL_CRC_Accumulate||, CODE, READONLY, ALIGN=1

HAL_CRC_Accumulate PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r7,r2
        MOVS     r5,#0
        MOVS     r0,#0
        STR      r0,[sp,#0]
        NOP      
        LDRB     r0,[r4,#0x1c]
        CMP      r0,#1
        BNE      |L3.26|
        MOVS     r0,#2
|L3.24|
        POP      {r3-r7,pc}
|L3.26|
        MOVS     r0,#1
        STRB     r0,[r4,#0x1c]
        NOP      
        MOVS     r0,#2
        STRB     r0,[r4,#0x1d]
        LDR      r0,[r4,#0x20]
        CMP      r0,#1
        BEQ      |L3.76|
        CMP      r0,#2
        BEQ      |L3.90|
        CMP      r0,#3
        BNE      |L3.104|
        MOVS     r5,#0
        B        |L3.64|
|L3.54|
        LSLS     r0,r5,#2
        LDR      r0,[r6,r0]
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        ADDS     r5,r5,#1
|L3.64|
        CMP      r5,r7
        BCC      |L3.54|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        STR      r0,[sp,#0]
        B        |L3.106|
|L3.76|
        MOV      r2,r7
        MOV      r1,r6
        MOV      r0,r4
        BL       CRC_Handle_8
        STR      r0,[sp,#0]
        B        |L3.106|
|L3.90|
        MOV      r2,r7
        MOV      r1,r6
        MOV      r0,r4
        BL       CRC_Handle_16
        STR      r0,[sp,#0]
        B        |L3.106|
|L3.104|
        NOP      
|L3.106|
        NOP      
        MOVS     r0,#1
        STRB     r0,[r4,#0x1d]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x1c]
        NOP      
        LDR      r0,[sp,#0]
        B        |L3.24|
        ENDP


        AREA ||i.HAL_CRC_Calculate||, CODE, READONLY, ALIGN=1

HAL_CRC_Calculate PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r7,r2
        MOVS     r5,#0
        MOVS     r0,#0
        STR      r0,[sp,#0]
        NOP      
        LDRB     r0,[r4,#0x1c]
        CMP      r0,#1
        BNE      |L4.26|
        MOVS     r0,#2
|L4.24|
        POP      {r3-r7,pc}
|L4.26|
        MOVS     r0,#1
        STRB     r0,[r4,#0x1c]
        NOP      
        MOVS     r0,#2
        STRB     r0,[r4,#0x1d]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x20]
        CMP      r0,#1
        BEQ      |L4.88|
        CMP      r0,#2
        BEQ      |L4.102|
        CMP      r0,#3
        BNE      |L4.116|
        MOVS     r5,#0
        B        |L4.76|
|L4.66|
        LSLS     r0,r5,#2
        LDR      r0,[r6,r0]
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        ADDS     r5,r5,#1
|L4.76|
        CMP      r5,r7
        BCC      |L4.66|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        STR      r0,[sp,#0]
        B        |L4.118|
|L4.88|
        MOV      r2,r7
        MOV      r1,r6
        MOV      r0,r4
        BL       CRC_Handle_8
        STR      r0,[sp,#0]
        B        |L4.118|
|L4.102|
        MOV      r2,r7
        MOV      r1,r6
        MOV      r0,r4
        BL       CRC_Handle_16
        STR      r0,[sp,#0]
        B        |L4.118|
|L4.116|
        NOP      
|L4.118|
        NOP      
        MOVS     r0,#1
        STRB     r0,[r4,#0x1d]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x1c]
        NOP      
        LDR      r0,[sp,#0]
        B        |L4.24|
        ENDP


        AREA ||i.HAL_CRC_DeInit||, CODE, READONLY, ALIGN=1

HAL_CRC_DeInit PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CMP      r4,#0
        BNE      |L5.12|
        MOVS     r0,#1
|L5.10|
        POP      {r4,pc}
|L5.12|
        LDRB     r0,[r4,#0x1d]
        CMP      r0,#2
        BNE      |L5.20|
        B        |L5.10|
|L5.20|
        MOVS     r0,#2
        STRB     r0,[r4,#0x1d]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#4]
        MOVS     r0,#0
        LDR      r1,[r4,#0]
        STRB     r0,[r1,#4]
        MOV      r0,r4
        BL       HAL_CRC_MspDeInit
        MOVS     r0,#0
        STRB     r0,[r4,#0x1d]
        NOP      
        STRB     r0,[r4,#0x1c]
        NOP      
        NOP      
        B        |L5.10|
        ENDP


        AREA ||i.HAL_CRC_GetState||, CODE, READONLY, ALIGN=1

HAL_CRC_GetState PROC
        MOV      r1,r0
        LDRB     r0,[r1,#0x1d]
        BX       lr
        ENDP


        AREA ||i.HAL_CRC_Init||, CODE, READONLY, ALIGN=1

HAL_CRC_Init PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CMP      r4,#0
        BNE      |L7.12|
        MOVS     r0,#1
|L7.10|
        POP      {r4,pc}
|L7.12|
        LDRB     r0,[r4,#0x1d]
        CMP      r0,#0
        BNE      |L7.26|
        STRB     r0,[r4,#0x1c]
        MOV      r0,r4
        BL       HAL_CRC_MspInit
|L7.26|
        MOVS     r0,#2
        STRB     r0,[r4,#0x1d]
        MOV      r0,r4
        BL       HAL_CRCEx_Init
        CMP      r0,#0
        BEQ      |L7.44|
        MOVS     r0,#1
        B        |L7.10|
|L7.44|
        LDRB     r0,[r4,#5]
        CMP      r0,#0
        BNE      |L7.58|
        SUBS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x10]
        B        |L7.64|
|L7.58|
        LDR      r1,[r4,#0]
        LDR      r0,[r4,#0x10]
        STR      r0,[r1,#0x10]
|L7.64|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x60
        BICS     r0,r0,r1
        LDR      r1,[r4,#0x14]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        BICS     r0,r0,r1
        LDR      r1,[r4,#0x18]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r0,#1
        STRB     r0,[r4,#0x1d]
        MOVS     r0,#0
        B        |L7.10|
        ENDP


        AREA ||i.HAL_CRC_MspDeInit||, CODE, READONLY, ALIGN=1

HAL_CRC_MspDeInit PROC
        BX       lr
        ENDP


        AREA ||i.HAL_CRC_MspInit||, CODE, READONLY, ALIGN=1

HAL_CRC_MspInit PROC
        BX       lr
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F0xx_DFP\\2.0.0\\Drivers\\STM32F0xx_HAL_Driver\\Src\\stm32f0xx_hal_crc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f0xx_hal_crc_c_14c421d9____REV16|
#line 463 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.4.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___19_stm32f0xx_hal_crc_c_14c421d9____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f0xx_hal_crc_c_14c421d9____REVSH|
#line 478
|__asm___19_stm32f0xx_hal_crc_c_14c421d9____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT HAL_CRC_Accumulate [CODE]
        EXPORT HAL_CRC_Calculate [CODE]
        EXPORT HAL_CRC_DeInit [CODE]
        EXPORT HAL_CRC_GetState [CODE]
        EXPORT HAL_CRC_Init [CODE]
        EXPORT HAL_CRC_MspDeInit [CODE,WEAK]
        EXPORT HAL_CRC_MspInit [CODE,WEAK]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT HAL_CRCEx_Init [CODE]

        KEEP CRC_Handle_16
        KEEP CRC_Handle_8

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
