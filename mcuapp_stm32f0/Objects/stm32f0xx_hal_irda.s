; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -o.\objects\stm32f0xx_hal_irda.o --depend=.\objects\stm32f0xx_hal_irda.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE\Device\STM32F071VBTx -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0 -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32F0xx\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc\Legacy -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F071xB --omf_browse=.\objects\stm32f0xx_hal_irda.crf C:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Src\stm32f0xx_hal_irda.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.HAL_IRDA_Abort||, CODE, READONLY, ALIGN=1

HAL_IRDA_Abort PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,r1,#0xe1
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L1.70|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x2c]
        CMP      r0,#0
        BEQ      |L1.70|
        MOVS     r0,#0
        LDR      r1,[r4,#0x2c]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x2c]
        BL       HAL_DMA_Abort
|L1.70|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L1.110|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x30]
        CMP      r0,#0
        BEQ      |L1.110|
        MOVS     r0,#0
        LDR      r1,[r4,#0x30]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x30]
        BL       HAL_DMA_Abort
|L1.110|
        MOVS     r0,#0
        STRH     r0,[r4,#0x1e]
        STRH     r0,[r4,#0x26]
        MOVS     r0,#0xf
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#0x20
        MOVS     r0,#0x35
        STRB     r1,[r0,r4]
        MOVS     r0,#0x36
        STRB     r1,[r0,r4]
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        POP      {r4,pc}
        ENDP


        AREA ||i.HAL_IRDA_AbortCpltCallback||, CODE, READONLY, ALIGN=1

HAL_IRDA_AbortCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_IRDA_AbortReceive||, CODE, READONLY, ALIGN=1

HAL_IRDA_AbortReceive PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,r1,#0x21
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L3.70|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x30]
        CMP      r0,#0
        BEQ      |L3.70|
        MOVS     r0,#0
        LDR      r1,[r4,#0x30]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x30]
        BL       HAL_DMA_Abort
|L3.70|
        MOVS     r0,#0
        STRH     r0,[r4,#0x26]
        MOVS     r0,#0xf
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#0x20
        MOVS     r0,#0x36
        STRB     r1,[r0,r4]
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.HAL_IRDA_AbortReceiveCpltCallback||, CODE, READONLY, ALIGN=1

HAL_IRDA_AbortReceiveCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_IRDA_AbortReceive_IT||, CODE, READONLY, ALIGN=2

HAL_IRDA_AbortReceive_IT PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,r1,#0x21
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L5.106|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x30]
        CMP      r0,#0
        BEQ      |L5.82|
        LDR      r0,|L5.132|
        LDR      r1,[r4,#0x30]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x30]
        BL       HAL_DMA_Abort_IT
        CMP      r0,#0
        BEQ      |L5.128|
        LDR      r0,[r4,#0x30]
        LDR      r1,[r0,#0x34]
        BLX      r1
        B        |L5.128|
|L5.82|
        MOVS     r0,#0
        STRH     r0,[r4,#0x26]
        MOVS     r0,#0xf
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#0x20
        MOVS     r0,#0x36
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_IRDA_AbortReceiveCpltCallback
        B        |L5.128|
|L5.106|
        MOVS     r0,#0
        STRH     r0,[r4,#0x26]
        MOVS     r0,#0xf
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#0x20
        MOVS     r0,#0x36
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_IRDA_AbortReceiveCpltCallback
|L5.128|
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP

|L5.132|
        DCD      IRDA_DMARxOnlyAbortCallback

        AREA ||i.HAL_IRDA_AbortTransmit||, CODE, READONLY, ALIGN=1

HAL_IRDA_AbortTransmit PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xc0
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L6.56|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x2c]
        CMP      r0,#0
        BEQ      |L6.56|
        MOVS     r0,#0
        LDR      r1,[r4,#0x2c]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x2c]
        BL       HAL_DMA_Abort
|L6.56|
        MOVS     r0,#0
        STRH     r0,[r4,#0x1e]
        MOVS     r1,#0x20
        MOVS     r0,#0x35
        STRB     r1,[r0,r4]
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.HAL_IRDA_AbortTransmitCpltCallback||, CODE, READONLY, ALIGN=1

HAL_IRDA_AbortTransmitCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_IRDA_AbortTransmit_IT||, CODE, READONLY, ALIGN=2

HAL_IRDA_AbortTransmit_IT PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xc0
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L8.86|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x2c]
        CMP      r0,#0
        BEQ      |L8.68|
        LDR      r0,|L8.108|
        LDR      r1,[r4,#0x2c]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x2c]
        BL       HAL_DMA_Abort_IT
        CMP      r0,#0
        BEQ      |L8.102|
        LDR      r0,[r4,#0x2c]
        LDR      r1,[r0,#0x34]
        BLX      r1
        B        |L8.102|
|L8.68|
        MOVS     r0,#0
        STRH     r0,[r4,#0x1e]
        MOVS     r1,#0x20
        MOVS     r0,#0x35
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_IRDA_AbortTransmitCpltCallback
        B        |L8.102|
|L8.86|
        MOVS     r0,#0
        STRH     r0,[r4,#0x1e]
        MOVS     r1,#0x20
        MOVS     r0,#0x35
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_IRDA_AbortTransmitCpltCallback
|L8.102|
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L8.108|
        DCD      IRDA_DMATxOnlyAbortCallback

        AREA ||i.HAL_IRDA_Abort_IT||, CODE, READONLY, ALIGN=2

HAL_IRDA_Abort_IT PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r5,#1
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,r1,#0xe1
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r5
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x2c]
        CMP      r0,#0
        BEQ      |L9.62|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L9.56|
        LDR      r0,|L9.232|
        LDR      r1,[r4,#0x2c]
        STR      r0,[r1,#0x34]
        B        |L9.62|
|L9.56|
        MOVS     r0,#0
        LDR      r1,[r4,#0x2c]
        STR      r0,[r1,#0x34]
|L9.62|
        LDR      r0,[r4,#0x30]
        CMP      r0,#0
        BEQ      |L9.94|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L9.88|
        LDR      r0,|L9.236|
        LDR      r1,[r4,#0x30]
        STR      r0,[r1,#0x34]
        B        |L9.94|
|L9.88|
        MOVS     r0,#0
        LDR      r1,[r4,#0x30]
        STR      r0,[r1,#0x34]
|L9.94|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L9.142|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x2c]
        CMP      r0,#0
        BEQ      |L9.142|
        LDR      r0,[r4,#0x2c]
        BL       HAL_DMA_Abort_IT
        CMP      r0,#0
        BEQ      |L9.140|
        MOVS     r0,#0
        LDR      r1,[r4,#0x2c]
        STR      r0,[r1,#0x34]
        B        |L9.142|
|L9.140|
        MOVS     r5,#0
|L9.142|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L9.192|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x30]
        CMP      r0,#0
        BEQ      |L9.192|
        LDR      r0,[r4,#0x30]
        BL       HAL_DMA_Abort_IT
        CMP      r0,#0
        BEQ      |L9.190|
        MOVS     r0,#0
        LDR      r1,[r4,#0x30]
        STR      r0,[r1,#0x34]
        MOVS     r5,#1
        B        |L9.192|
|L9.190|
        MOVS     r5,#0
|L9.192|
        CMP      r5,#1
        BNE      |L9.226|
        MOVS     r0,#0
        STRH     r0,[r4,#0x1e]
        STRH     r0,[r4,#0x26]
        STR      r0,[r4,#0x38]
        MOVS     r0,#0xf
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#0x20
        MOVS     r0,#0x35
        STRB     r1,[r0,r4]
        MOVS     r0,#0x36
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_IRDA_AbortCpltCallback
|L9.226|
        MOVS     r0,#0
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L9.232|
        DCD      IRDA_DMATxAbortCallback
|L9.236|
        DCD      IRDA_DMARxAbortCallback

        AREA ||i.HAL_IRDA_DMAPause||, CODE, READONLY, ALIGN=1

HAL_IRDA_DMAPause PROC
        MOV      r1,r0
        NOP      
        MOVS     r0,#0x34
        LDRB     r0,[r0,r1]
        CMP      r0,#1
        BNE      |L10.16|
        MOVS     r0,#2
|L10.14|
        BX       lr
|L10.16|
        MOVS     r2,#1
        MOVS     r0,#0x34
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r0,#0x35
        LDRB     r0,[r0,r1]
        CMP      r0,#0x21
        BNE      |L10.54|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        MOVS     r2,#0x80
        ANDS     r0,r0,r2
        CMP      r0,#0
        BEQ      |L10.54|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
|L10.54|
        MOVS     r0,#0x36
        LDRB     r0,[r0,r1]
        CMP      r0,#0x22
        BNE      |L10.110|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        MOVS     r2,#0x40
        ANDS     r0,r0,r2
        CMP      r0,#0
        BEQ      |L10.110|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        LSLS     r2,r2,#2
        BICS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        MOVS     r2,#0x40
        BICS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
|L10.110|
        NOP      
        MOVS     r2,#0
        MOVS     r0,#0x34
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r0,#0
        B        |L10.14|
        ENDP


        AREA ||i.HAL_IRDA_DMAResume||, CODE, READONLY, ALIGN=1

HAL_IRDA_DMAResume PROC
        MOV      r1,r0
        NOP      
        MOVS     r0,#0x34
        LDRB     r0,[r0,r1]
        CMP      r0,#1
        BNE      |L11.16|
        MOVS     r0,#2
|L11.14|
        BX       lr
|L11.16|
        MOVS     r2,#1
        MOVS     r0,#0x34
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r0,#0x35
        LDRB     r0,[r0,r1]
        CMP      r0,#0x21
        BNE      |L11.44|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        MOVS     r2,#0x80
        ORRS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
|L11.44|
        MOVS     r0,#0x36
        LDRB     r0,[r0,r1]
        CMP      r0,#0x22
        BNE      |L11.96|
        MOVS     r0,#8
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0x20]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        MOVS     r2,#0xff
        ADDS     r2,#1
        ORRS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        MOVS     r2,#1
        ORRS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        MOVS     r2,#0x40
        ORRS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
|L11.96|
        NOP      
        MOVS     r2,#0
        MOVS     r0,#0x34
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r0,#0
        B        |L11.14|
        ENDP


        AREA ||i.HAL_IRDA_DMAStop||, CODE, READONLY, ALIGN=1

HAL_IRDA_DMAStop PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOVS     r0,#0x35
        LDRB     r0,[r0,r4]
        CMP      r0,#0x21
        BNE      |L12.52|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L12.52|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x2c]
        CMP      r0,#0
        BEQ      |L12.46|
        LDR      r0,[r4,#0x2c]
        BL       HAL_DMA_Abort
|L12.46|
        MOV      r0,r4
        BL       IRDA_EndTxTransfer
|L12.52|
        MOVS     r0,#0x36
        LDRB     r0,[r0,r4]
        CMP      r0,#0x22
        BNE      |L12.100|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L12.100|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x30]
        CMP      r0,#0
        BEQ      |L12.94|
        LDR      r0,[r4,#0x30]
        BL       HAL_DMA_Abort
|L12.94|
        MOV      r0,r4
        BL       IRDA_EndRxTransfer
|L12.100|
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.HAL_IRDA_DeInit||, CODE, READONLY, ALIGN=1

HAL_IRDA_DeInit PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CMP      r4,#0
        BNE      |L13.12|
        MOVS     r0,#1
|L13.10|
        POP      {r4,pc}
|L13.12|
        MOVS     r1,#0x24
        MOVS     r0,#0x35
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_IRDA_MspDeInit
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        MOVS     r1,#0
        MOVS     r0,#0x35
        STRB     r1,[r0,r4]
        MOVS     r0,#0x36
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0x34
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        B        |L13.10|
        ENDP


        AREA ||i.HAL_IRDA_ErrorCallback||, CODE, READONLY, ALIGN=1

HAL_IRDA_ErrorCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_IRDA_GetError||, CODE, READONLY, ALIGN=1

HAL_IRDA_GetError PROC
        MOV      r1,r0
        LDR      r0,[r1,#0x38]
        BX       lr
        ENDP


        AREA ||i.HAL_IRDA_GetState||, CODE, READONLY, ALIGN=1

HAL_IRDA_GetState PROC
        MOV      r1,r0
        MOVS     r2,#0
        MOVS     r3,#0
        MOVS     r0,#0x35
        LDRB     r2,[r0,r1]
        MOVS     r0,#0x36
        LDRB     r3,[r0,r1]
        MOV      r0,r2
        ORRS     r0,r0,r3
        BX       lr
        ENDP


        AREA ||i.HAL_IRDA_IRQHandler||, CODE, READONLY, ALIGN=2

HAL_IRDA_IRQHandler PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r5,[r0,#0x1c]
        LDR      r0,[r4,#0]
        LDR      r6,[r0,#0]
        LSLS     r0,r5,#28
        LSRS     r0,r0,#28
        STR      r0,[sp,#0]
        LDR      r0,[sp,#0]
        CMP      r0,#0
        BNE      |L17.48|
        MOVS     r0,#0x20
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L17.48|
        MOVS     r0,#0x20
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L17.48|
        MOV      r0,r4
        BL       IRDA_Receive_IT
|L17.46|
        POP      {r3-r7,pc}
|L17.48|
        LDR      r0,[r4,#0]
        LDR      r7,[r0,#8]
        LDR      r0,[sp,#0]
        CMP      r0,#0
|L17.56|
        BEQ      |L17.312|
        LSLS     r0,r7,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BNE      |L17.76|
        MOVS     r0,#0xff
        ADDS     r0,r0,#0x21
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L17.56|
|L17.76|
        LSLS     r0,r5,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L17.108|
        MOVS     r0,#0xff
        ADDS     r0,#1
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L17.108|
        MOVS     r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        LDR      r0,[r4,#0x38]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x38]
|L17.108|
        MOVS     r0,#2
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L17.138|
        LSLS     r0,r7,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L17.138|
        MOVS     r0,#2
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        LDR      r0,[r4,#0x38]
        MOVS     r1,#4
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x38]
|L17.138|
        MOVS     r0,#4
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L17.168|
        LSLS     r0,r7,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L17.168|
        MOVS     r0,#4
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        LDR      r0,[r4,#0x38]
        MOVS     r1,#2
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x38]
|L17.168|
        MOVS     r0,#8
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L17.206|
        MOVS     r0,#0x20
        ANDS     r0,r0,r6
        CMP      r0,#0
        BNE      |L17.192|
        LSLS     r0,r7,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L17.206|
|L17.192|
        MOVS     r0,#8
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        LDR      r0,[r4,#0x38]
        MOVS     r1,#8
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x38]
|L17.206|
        LDR      r0,[r4,#0x38]
        CMP      r0,#0
        BEQ      |L17.344|
        MOVS     r0,#0x20
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L17.234|
        MOVS     r0,#0x20
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L17.234|
        MOV      r0,r4
        BL       IRDA_Receive_IT
|L17.234|
        LDR      r0,[r4,#0x38]
        MOVS     r1,#8
        ANDS     r0,r0,r1
        CMP      r0,#0
        BNE      |L17.256|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L17.334|
|L17.256|
        MOV      r0,r4
        BL       IRDA_EndRxTransfer
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L17.326|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x30]
        CMP      r0,#0
        BEQ      |L17.318|
        LDR      r0,|L17.400|
        LDR      r1,[r4,#0x30]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x30]
        BL       HAL_DMA_Abort_IT
        CMP      r0,#0
        BEQ      |L17.344|
        LDR      r0,[r4,#0x30]
        LDR      r1,[r0,#0x34]
        B        |L17.314|
|L17.312|
        B        |L17.346|
|L17.314|
        BLX      r1
        B        |L17.344|
|L17.318|
        MOV      r0,r4
        BL       HAL_IRDA_ErrorCallback
        B        |L17.344|
|L17.326|
        MOV      r0,r4
        BL       HAL_IRDA_ErrorCallback
        B        |L17.344|
|L17.334|
        MOV      r0,r4
        BL       HAL_IRDA_ErrorCallback
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
|L17.344|
        B        |L17.46|
|L17.346|
        MOVS     r0,#0x80
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L17.370|
        MOVS     r0,#0x80
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L17.370|
        MOV      r0,r4
        BL       IRDA_Transmit_IT
        B        |L17.46|
|L17.370|
        MOVS     r0,#0x40
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L17.394|
        MOVS     r0,#0x40
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L17.394|
        MOV      r0,r4
        BL       IRDA_EndTransmit_IT
        B        |L17.46|
|L17.394|
        NOP      
        B        |L17.46|
        ENDP

        DCW      0x0000
|L17.400|
        DCD      IRDA_DMAAbortOnError

        AREA ||i.HAL_IRDA_Init||, CODE, READONLY, ALIGN=1

HAL_IRDA_Init PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CMP      r4,#0
        BNE      |L18.12|
        MOVS     r0,#1
|L18.10|
        POP      {r4,pc}
|L18.12|
        MOVS     r0,#0x35
        LDRB     r0,[r0,r4]
        CMP      r0,#0
        BNE      |L18.32|
        MOVS     r1,#0
        MOVS     r0,#0x34
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_IRDA_MspInit
|L18.32|
        MOVS     r1,#0x24
        MOVS     r0,#0x35
        STRB     r1,[r0,r4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       IRDA_SetConfig
        CMP      r0,#1
        BNE      |L18.62|
        B        |L18.10|
|L18.62|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        MOVS     r1,#0xf
        LSLS     r1,r1,#11
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x28
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#2
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       IRDA_CheckIdleState
        B        |L18.10|
        ENDP


        AREA ||i.HAL_IRDA_MspDeInit||, CODE, READONLY, ALIGN=1

HAL_IRDA_MspDeInit PROC
        BX       lr
        ENDP


        AREA ||i.HAL_IRDA_MspInit||, CODE, READONLY, ALIGN=1

HAL_IRDA_MspInit PROC
        BX       lr
        ENDP


        AREA ||i.HAL_IRDA_Receive||, CODE, READONLY, ALIGN=2

HAL_IRDA_Receive PROC
        PUSH     {r0-r7,lr}
        SUB      sp,sp,#0xc
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOVS     r0,#0
        STR      r0,[sp,#4]
        MOVS     r0,#0x36
        LDRB     r0,[r0,r4]
        CMP      r0,#0x20
        BNE      |L21.256|
        CMP      r5,#0
        BEQ      |L21.30|
        CMP      r6,#0
        BNE      |L21.36|
|L21.30|
        MOVS     r0,#1
|L21.32|
        ADD      sp,sp,#0x1c
        POP      {r4-r7,pc}
|L21.36|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L21.64|
        LDR      r0,[r4,#0xc]
        CMP      r0,#0
        BNE      |L21.64|
        LSLS     r0,r5,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L21.64|
        MOVS     r0,#1
        B        |L21.32|
|L21.64|
        NOP      
        MOVS     r0,#0x34
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L21.78|
        MOVS     r0,#2
        B        |L21.32|
|L21.78|
        MOVS     r1,#1
        MOVS     r0,#0x34
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        MOVS     r1,#0x22
        MOVS     r0,#0x36
        STRB     r1,[r0,r4]
        BL       HAL_GetTick
        STR      r0,[sp,#4]
        STRH     r6,[r4,#0x24]
        STRH     r6,[r4,#0x26]
        NOP      
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L21.136|
        LDR      r0,[r4,#0xc]
        CMP      r0,#0
        BNE      |L21.130|
        LDR      r0,|L21.304|
        STRH     r0,[r4,#0x28]
        B        |L21.186|
|L21.130|
        MOVS     r0,#0xff
        STRH     r0,[r4,#0x28]
        B        |L21.186|
|L21.136|
        LDR      r0,[r4,#8]
        CMP      r0,#0
        BNE      |L21.160|
        LDR      r0,[r4,#0xc]
        CMP      r0,#0
        BNE      |L21.154|
        MOVS     r0,#0xff
        STRH     r0,[r4,#0x28]
        B        |L21.186|
|L21.154|
        MOVS     r0,#0x7f
        STRH     r0,[r4,#0x28]
        B        |L21.186|
|L21.160|
        MOVS     r1,#1
        LSLS     r1,r1,#28
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L21.186|
        LDR      r0,[r4,#0xc]
        CMP      r0,#0
        BNE      |L21.182|
        MOVS     r0,#0x7f
        STRH     r0,[r4,#0x28]
        B        |L21.186|
|L21.182|
        MOVS     r0,#0x3f
        STRH     r0,[r4,#0x28]
|L21.186|
        NOP      
        LDRH     r0,[r4,#0x28]
        STR      r0,[sp,#8]
        B        |L21.272|
|L21.194|
        LDRH     r0,[r4,#0x26]
        SUBS     r0,r0,#1
        STRH     r0,[r4,#0x26]
        LDR      r0,[sp,#0x18]
        STR      r0,[sp,#0]
        MOVS     r2,#0
        MOVS     r1,#0x20
        MOV      r0,r4
        LDR      r3,[sp,#4]
        BL       IRDA_WaitOnFlagUntilTimeout
        CMP      r0,#0
        BEQ      |L21.224|
        MOVS     r0,#3
        B        |L21.32|
|L21.224|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L21.258|
        LDR      r0,[r4,#0xc]
        CMP      r0,#0
        BNE      |L21.258|
        MOV      r7,r5
        LDR      r0,[r4,#0]
        LDRH     r0,[r0,#0x24]
        LDR      r1,[sp,#8]
        ANDS     r0,r0,r1
        STRH     r0,[r7,#0]
        ADDS     r5,r5,#2
        B        |L21.272|
|L21.256|
        B        |L21.298|
|L21.258|
        LDR      r0,[r4,#0]
        LDRH     r0,[r0,#0x24]
        LDR      r1,[sp,#8]
        UXTB     r1,r1
        ANDS     r0,r0,r1
        STRB     r0,[r5,#0]
        ADDS     r5,r5,#1
|L21.272|
        LDRH     r0,[r4,#0x26]
        CMP      r0,#0
        BNE      |L21.194|
        MOVS     r1,#0x20
        MOVS     r0,#0x36
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x34
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        B        |L21.32|
|L21.298|
        MOVS     r0,#2
        B        |L21.32|
        ENDP

        DCW      0x0000
|L21.304|
        DCD      0x000001ff

        AREA ||i.HAL_IRDA_Receive_DMA||, CODE, READONLY, ALIGN=2

HAL_IRDA_Receive_DMA PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOVS     r0,#0x36
        LDRB     r0,[r0,r4]
        CMP      r0,#0x20
        BNE      |L22.184|
        CMP      r5,#0
        BEQ      |L22.24|
        CMP      r6,#0
        BNE      |L22.28|
|L22.24|
        MOVS     r0,#1
|L22.26|
        POP      {r4-r6,pc}
|L22.28|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L22.56|
        LDR      r0,[r4,#0xc]
        CMP      r0,#0
        BNE      |L22.56|
        LSLS     r0,r5,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L22.56|
        MOVS     r0,#1
        B        |L22.26|
|L22.56|
        NOP      
        MOVS     r0,#0x34
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L22.70|
        MOVS     r0,#2
        B        |L22.26|
|L22.70|
        MOVS     r1,#1
        MOVS     r0,#0x34
        STRB     r1,[r0,r4]
        NOP      
        STR      r5,[r4,#0x20]
        STRH     r6,[r4,#0x24]
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        MOVS     r1,#0x22
        MOVS     r0,#0x36
        STRB     r1,[r0,r4]
        LDR      r0,|L22.188|
        LDR      r1,[r4,#0x30]
        STR      r0,[r1,#0x28]
        LDR      r0,|L22.192|
        LDR      r1,[r4,#0x30]
        STR      r0,[r1,#0x2c]
        LDR      r0,|L22.196|
        LDR      r1,[r4,#0x30]
        STR      r0,[r1,#0x30]
        MOVS     r0,#0
        LDR      r1,[r4,#0x30]
        STR      r0,[r1,#0x34]
        LDR      r3,[r4,#0]
        MOV      r1,r3
        ADDS     r1,r1,#0x24
        MOV      r3,r6
        LDR      r2,[r4,#0x20]
        LDR      r0,[r4,#0x30]
        BL       HAL_DMA_Start_IT
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x34
        STRB     r1,[r0,r4]
        NOP      
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r0,#0
        B        |L22.26|
|L22.184|
        MOVS     r0,#2
        B        |L22.26|
        ENDP

|L22.188|
        DCD      IRDA_DMAReceiveCplt
|L22.192|
        DCD      IRDA_DMAReceiveHalfCplt
|L22.196|
        DCD      IRDA_DMAError

        AREA ||i.HAL_IRDA_Receive_IT||, CODE, READONLY, ALIGN=2

HAL_IRDA_Receive_IT PROC
        PUSH     {r4,lr}
        MOV      r3,r0
        MOVS     r0,#0x36
        LDRB     r0,[r0,r3]
        CMP      r0,#0x20
        BNE      |L23.210|
        CMP      r1,#0
        BEQ      |L23.20|
        CMP      r2,#0
        BNE      |L23.24|
|L23.20|
        MOVS     r0,#1
|L23.22|
        POP      {r4,pc}
|L23.24|
        MOVS     r4,#1
        LSLS     r4,r4,#12
        LDR      r0,[r3,#8]
        CMP      r0,r4
        BNE      |L23.52|
        LDR      r0,[r3,#0xc]
        CMP      r0,#0
        BNE      |L23.52|
        LSLS     r0,r1,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L23.52|
        MOVS     r0,#1
        B        |L23.22|
|L23.52|
        NOP      
        MOVS     r0,#0x34
        LDRB     r0,[r0,r3]
        CMP      r0,#1
        BNE      |L23.66|
        MOVS     r0,#2
        B        |L23.22|
|L23.66|
        MOVS     r4,#1
        MOVS     r0,#0x34
        STRB     r4,[r0,r3]
        NOP      
        STR      r1,[r3,#0x20]
        STRH     r2,[r3,#0x24]
        STRH     r2,[r3,#0x26]
        NOP      
        LSLS     r4,r4,#12
        LDR      r0,[r3,#8]
        CMP      r0,r4
        BNE      |L23.108|
        LDR      r0,[r3,#0xc]
        CMP      r0,#0
        BNE      |L23.102|
        LDR      r0,|L23.216|
        STRH     r0,[r3,#0x28]
        B        |L23.158|
|L23.102|
        MOVS     r0,#0xff
        STRH     r0,[r3,#0x28]
        B        |L23.158|
|L23.108|
        LDR      r0,[r3,#8]
        CMP      r0,#0
        BNE      |L23.132|
        LDR      r0,[r3,#0xc]
        CMP      r0,#0
        BNE      |L23.126|
        MOVS     r0,#0xff
        STRH     r0,[r3,#0x28]
        B        |L23.158|
|L23.126|
        MOVS     r0,#0x7f
        STRH     r0,[r3,#0x28]
        B        |L23.158|
|L23.132|
        MOVS     r4,#1
        LSLS     r4,r4,#28
        LDR      r0,[r3,#8]
        CMP      r0,r4
        BNE      |L23.158|
        LDR      r0,[r3,#0xc]
        CMP      r0,#0
        BNE      |L23.154|
        MOVS     r0,#0x7f
        STRH     r0,[r3,#0x28]
        B        |L23.158|
|L23.154|
        MOVS     r0,#0x3f
        STRH     r0,[r3,#0x28]
|L23.158|
        NOP      
        MOVS     r0,#0
        STR      r0,[r3,#0x38]
        MOVS     r4,#0x22
        MOVS     r0,#0x36
        STRB     r4,[r0,r3]
        NOP      
        MOVS     r4,#0
        MOVS     r0,#0x34
        STRB     r4,[r0,r3]
        NOP      
        LDR      r0,[r3,#0]
        LDR      r0,[r0,#0]
        MOVS     r4,#0xff
        ADDS     r4,r4,#0x21
        ORRS     r0,r0,r4
        LDR      r4,[r3,#0]
        STR      r0,[r4,#0]
        LDR      r0,[r3,#0]
        LDR      r0,[r0,#8]
        MOVS     r4,#1
        ORRS     r0,r0,r4
        LDR      r4,[r3,#0]
        STR      r0,[r4,#8]
        MOVS     r0,#0
        B        |L23.22|
|L23.210|
        MOVS     r0,#2
        B        |L23.22|
        ENDP

        DCW      0x0000
|L23.216|
        DCD      0x000001ff

        AREA ||i.HAL_IRDA_RxCpltCallback||, CODE, READONLY, ALIGN=1

HAL_IRDA_RxCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_IRDA_RxHalfCpltCallback||, CODE, READONLY, ALIGN=1

HAL_IRDA_RxHalfCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_IRDA_Transmit||, CODE, READONLY, ALIGN=1

HAL_IRDA_Transmit PROC
        PUSH     {r1-r7,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r7,r3
        MOVS     r0,#0
        STR      r0,[sp,#4]
        MOVS     r0,#0x35
        LDRB     r0,[r0,r4]
        CMP      r0,#0x20
        BNE      |L26.224|
        CMP      r5,#0
        BEQ      |L26.30|
        CMP      r6,#0
        BNE      |L26.34|
|L26.30|
        MOVS     r0,#1
|L26.32|
        POP      {r1-r7,pc}
|L26.34|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L26.62|
        LDR      r0,[r4,#0xc]
        CMP      r0,#0
        BNE      |L26.62|
        LSLS     r0,r5,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L26.62|
        MOVS     r0,#1
        B        |L26.32|
|L26.62|
        NOP      
        MOVS     r0,#0x34
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L26.76|
        MOVS     r0,#2
        B        |L26.32|
|L26.76|
        MOVS     r1,#1
        MOVS     r0,#0x34
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        MOVS     r1,#0x21
        MOVS     r0,#0x35
        STRB     r1,[r0,r4]
        BL       HAL_GetTick
        STR      r0,[sp,#4]
        STRH     r6,[r4,#0x1c]
        STRH     r6,[r4,#0x1e]
        B        |L26.176|
|L26.106|
        LDRH     r0,[r4,#0x1e]
        SUBS     r0,r0,#1
        STRH     r0,[r4,#0x1e]
        STR      r7,[sp,#0]
        MOVS     r2,#0
        MOVS     r1,#0x80
        MOV      r0,r4
        LDR      r3,[sp,#4]
        BL       IRDA_WaitOnFlagUntilTimeout
        CMP      r0,#0
        BEQ      |L26.134|
        MOVS     r0,#3
        B        |L26.32|
|L26.134|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L26.168|
        LDR      r0,[r4,#0xc]
        CMP      r0,#0
        BNE      |L26.168|
        STR      r5,[sp,#8]
        LDR      r5,[sp,#8]
        LDRH     r0,[r5,#0]
        LSLS     r0,r0,#23
        LSRS     r0,r0,#23
        LDR      r1,[r4,#0]
        STRH     r0,[r1,#0x28]
        ADDS     r5,r5,#2
        B        |L26.176|
|L26.168|
        LDRB     r0,[r5,#0]
        ADDS     r5,r5,#1
        LDR      r1,[r4,#0]
        STRH     r0,[r1,#0x28]
|L26.176|
        LDRH     r0,[r4,#0x1e]
        CMP      r0,#0
        BNE      |L26.106|
        STR      r7,[sp,#0]
        MOVS     r2,#0
        MOVS     r1,#0x40
        MOV      r0,r4
        LDR      r3,[sp,#4]
        BL       IRDA_WaitOnFlagUntilTimeout
        CMP      r0,#0
        BEQ      |L26.204|
        MOVS     r0,#3
        B        |L26.32|
|L26.204|
        MOVS     r1,#0x20
        MOVS     r0,#0x35
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x34
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        B        |L26.32|
|L26.224|
        MOVS     r0,#2
        B        |L26.32|
        ENDP


        AREA ||i.HAL_IRDA_Transmit_DMA||, CODE, READONLY, ALIGN=2

HAL_IRDA_Transmit_DMA PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r5,r2
        MOVS     r0,#0x35
        LDRB     r0,[r0,r4]
        CMP      r0,#0x20
        BNE      |L27.166|
        CMP      r6,#0
        BEQ      |L27.24|
        CMP      r5,#0
        BNE      |L27.28|
|L27.24|
        MOVS     r0,#1
|L27.26|
        POP      {r4-r6,pc}
|L27.28|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L27.56|
        LDR      r0,[r4,#0xc]
        CMP      r0,#0
        BNE      |L27.56|
        LSLS     r0,r6,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L27.56|
        MOVS     r0,#1
        B        |L27.26|
|L27.56|
        NOP      
        MOVS     r0,#0x34
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L27.70|
        MOVS     r0,#2
        B        |L27.26|
|L27.70|
        MOVS     r1,#1
        MOVS     r0,#0x34
        STRB     r1,[r0,r4]
        NOP      
        STR      r6,[r4,#0x18]
        STRH     r5,[r4,#0x1c]
        STRH     r5,[r4,#0x1e]
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        MOVS     r1,#0x21
        MOVS     r0,#0x35
        STRB     r1,[r0,r4]
        LDR      r0,|L27.172|
        LDR      r1,[r4,#0x2c]
        STR      r0,[r1,#0x28]
        LDR      r0,|L27.176|
        LDR      r1,[r4,#0x2c]
        STR      r0,[r1,#0x2c]
        LDR      r0,|L27.180|
        LDR      r1,[r4,#0x2c]
        STR      r0,[r1,#0x30]
        MOVS     r0,#0
        LDR      r1,[r4,#0x2c]
        STR      r0,[r1,#0x34]
        LDR      r3,[r4,#0]
        MOV      r2,r3
        ADDS     r2,r2,#0x28
        MOV      r3,r5
        LDR      r1,[r4,#0x18]
        LDR      r0,[r4,#0x2c]
        BL       HAL_DMA_Start_IT
        MOVS     r0,#0x40
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x34
        STRB     r1,[r0,r4]
        NOP      
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r0,#0
        B        |L27.26|
|L27.166|
        MOVS     r0,#2
        B        |L27.26|
        ENDP

        DCW      0x0000
|L27.172|
        DCD      IRDA_DMATransmitCplt
|L27.176|
        DCD      IRDA_DMATransmitHalfCplt
|L27.180|
        DCD      IRDA_DMAError

        AREA ||i.HAL_IRDA_Transmit_IT||, CODE, READONLY, ALIGN=1

HAL_IRDA_Transmit_IT PROC
        PUSH     {r4,lr}
        MOV      r3,r0
        MOVS     r0,#0x35
        LDRB     r0,[r0,r3]
        CMP      r0,#0x20
        BNE      |L28.116|
        CMP      r1,#0
        BEQ      |L28.20|
        CMP      r2,#0
        BNE      |L28.24|
|L28.20|
        MOVS     r0,#1
|L28.22|
        POP      {r4,pc}
|L28.24|
        MOVS     r4,#1
        LSLS     r4,r4,#12
        LDR      r0,[r3,#8]
        CMP      r0,r4
        BNE      |L28.52|
        LDR      r0,[r3,#0xc]
        CMP      r0,#0
        BNE      |L28.52|
        LSLS     r0,r1,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L28.52|
        MOVS     r0,#1
        B        |L28.22|
|L28.52|
        NOP      
        MOVS     r0,#0x34
        LDRB     r0,[r0,r3]
        CMP      r0,#1
        BNE      |L28.66|
        MOVS     r0,#2
        B        |L28.22|
|L28.66|
        MOVS     r4,#1
        MOVS     r0,#0x34
        STRB     r4,[r0,r3]
        NOP      
        STR      r1,[r3,#0x18]
        STRH     r2,[r3,#0x1c]
        STRH     r2,[r3,#0x1e]
        MOVS     r0,#0
        STR      r0,[r3,#0x38]
        MOVS     r4,#0x21
        MOVS     r0,#0x35
        STRB     r4,[r0,r3]
        NOP      
        MOVS     r4,#0
        MOVS     r0,#0x34
        STRB     r4,[r0,r3]
        NOP      
        LDR      r0,[r3,#0]
        LDR      r0,[r0,#0]
        MOVS     r4,#0x80
        ORRS     r0,r0,r4
        LDR      r4,[r3,#0]
        STR      r0,[r4,#0]
        MOVS     r0,#0
        B        |L28.22|
|L28.116|
        MOVS     r0,#2
        B        |L28.22|
        ENDP


        AREA ||i.HAL_IRDA_TxCpltCallback||, CODE, READONLY, ALIGN=1

HAL_IRDA_TxCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_IRDA_TxHalfCpltCallback||, CODE, READONLY, ALIGN=1

HAL_IRDA_TxHalfCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.IRDA_CheckIdleState||, CODE, READONLY, ALIGN=2

IRDA_CheckIdleState PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOVS     r5,#0
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        BL       HAL_GetTick
        MOV      r5,r0
        LDR      r1,|L31.132|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BEQ      |L31.32|
        LDR      r1,|L31.136|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L31.108|
|L31.32|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#8
        ANDS     r0,r0,r1
        CMP      r0,#8
        BNE      |L31.70|
        MOVS     r0,#0x7d
        LSLS     r0,r0,#3
        MOV      r3,r5
        MOVS     r2,#0
        LSLS     r1,r1,#18
        STR      r0,[sp,#0]
        MOV      r0,r4
        BL       IRDA_WaitOnFlagUntilTimeout
        CMP      r0,#0
        BEQ      |L31.70|
        MOVS     r0,#3
|L31.68|
        POP      {r3-r5,pc}
|L31.70|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#4
        ANDS     r0,r0,r1
        CMP      r0,#4
        BNE      |L31.108|
        MOVS     r0,#0x7d
        LSLS     r0,r0,#3
        MOV      r3,r5
        MOVS     r2,#0
        LSLS     r1,r1,#20
        STR      r0,[sp,#0]
        MOV      r0,r4
        BL       IRDA_WaitOnFlagUntilTimeout
        CMP      r0,#0
        BEQ      |L31.108|
        MOVS     r0,#3
        B        |L31.68|
|L31.108|
        MOVS     r1,#0x20
        MOVS     r0,#0x35
        STRB     r1,[r0,r4]
        MOVS     r0,#0x36
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x34
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        B        |L31.68|
        ENDP

|L31.132|
        DCD      0x40013800
|L31.136|
        DCD      0x40004400

        AREA ||i.IRDA_DMAAbortOnError||, CODE, READONLY, ALIGN=1

IRDA_DMAAbortOnError PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        MOVS     r0,#0
        STRH     r0,[r4,#0x26]
        STRH     r0,[r4,#0x1e]
        MOV      r0,r4
        BL       HAL_IRDA_ErrorCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.IRDA_DMAError||, CODE, READONLY, ALIGN=1

IRDA_DMAError PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        MOVS     r0,#0x35
        LDRB     r0,[r0,r4]
        CMP      r0,#0x21
        BNE      |L33.36|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L33.36|
        MOVS     r0,#0
        STRH     r0,[r4,#0x1e]
        MOV      r0,r4
        BL       IRDA_EndTxTransfer
|L33.36|
        MOVS     r0,#0x36
        LDRB     r0,[r0,r4]
        CMP      r0,#0x22
        BNE      |L33.66|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L33.66|
        MOVS     r0,#0
        STRH     r0,[r4,#0x26]
        MOV      r0,r4
        BL       IRDA_EndRxTransfer
|L33.66|
        LDR      r0,[r4,#0x38]
        MOVS     r1,#0x10
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x38]
        MOV      r0,r4
        BL       HAL_IRDA_ErrorCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.IRDA_DMAReceiveCplt||, CODE, READONLY, ALIGN=1

IRDA_DMAReceiveCplt PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        LDR      r0,[r5,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0x20
        ANDS     r0,r0,r1
        CMP      r0,#0
        BNE      |L34.62|
        STRH     r0,[r4,#0x26]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSLS     r1,r1,#3
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r1,#0x20
        MOVS     r0,#0x36
        STRB     r1,[r0,r4]
|L34.62|
        MOV      r0,r4
        BL       HAL_IRDA_RxCpltCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.IRDA_DMAReceiveHalfCplt||, CODE, READONLY, ALIGN=1

IRDA_DMAReceiveHalfCplt PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r5,[r4,#0x24]
        MOV      r0,r5
        BL       HAL_IRDA_RxHalfCpltCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.IRDA_DMARxAbortCallback||, CODE, READONLY, ALIGN=1

IRDA_DMARxAbortCallback PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        MOVS     r0,#0
        LDR      r1,[r4,#0x30]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x2c]
        CMP      r0,#0
        BEQ      |L36.28|
        LDR      r0,[r4,#0x2c]
        LDR      r0,[r0,#0x34]
        CMP      r0,#0
        BEQ      |L36.28|
|L36.26|
        POP      {r4-r6,pc}
|L36.28|
        MOVS     r0,#0
        STRH     r0,[r4,#0x1e]
        STRH     r0,[r4,#0x26]
        STR      r0,[r4,#0x38]
        MOVS     r0,#0xf
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#0x20
        MOVS     r0,#0x35
        STRB     r1,[r0,r4]
        MOVS     r0,#0x36
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_IRDA_AbortCpltCallback
        NOP      
        B        |L36.26|
        ENDP


        AREA ||i.IRDA_DMARxOnlyAbortCallback||, CODE, READONLY, ALIGN=1

IRDA_DMARxOnlyAbortCallback PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        MOVS     r0,#0
        STRH     r0,[r4,#0x26]
        MOVS     r0,#0xf
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#0x20
        MOVS     r0,#0x36
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_IRDA_AbortReceiveCpltCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.IRDA_DMATransmitCplt||, CODE, READONLY, ALIGN=1

IRDA_DMATransmitCplt PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        LDR      r0,[r5,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0x20
        ANDS     r0,r0,r1
        CMP      r0,#0
        BNE      |L38.46|
        STRH     r0,[r4,#0x1e]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0x40
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        B        |L38.52|
|L38.46|
        MOV      r0,r4
        BL       HAL_IRDA_TxCpltCallback
|L38.52|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.IRDA_DMATransmitHalfCplt||, CODE, READONLY, ALIGN=1

IRDA_DMATransmitHalfCplt PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r5,[r4,#0x24]
        MOV      r0,r5
        BL       HAL_IRDA_TxHalfCpltCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.IRDA_DMATxAbortCallback||, CODE, READONLY, ALIGN=1

IRDA_DMATxAbortCallback PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        MOVS     r0,#0
        LDR      r1,[r4,#0x2c]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x30]
        CMP      r0,#0
        BEQ      |L40.28|
        LDR      r0,[r4,#0x30]
        LDR      r0,[r0,#0x34]
        CMP      r0,#0
        BEQ      |L40.28|
|L40.26|
        POP      {r4-r6,pc}
|L40.28|
        MOVS     r0,#0
        STRH     r0,[r4,#0x1e]
        STRH     r0,[r4,#0x26]
        STR      r0,[r4,#0x38]
        MOVS     r0,#0xf
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#0x20
        MOVS     r0,#0x35
        STRB     r1,[r0,r4]
        MOVS     r0,#0x36
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_IRDA_AbortCpltCallback
        NOP      
        B        |L40.26|
        ENDP


        AREA ||i.IRDA_DMATxOnlyAbortCallback||, CODE, READONLY, ALIGN=1

IRDA_DMATxOnlyAbortCallback PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        MOVS     r0,#0
        STRH     r0,[r4,#0x1e]
        MOVS     r1,#0x20
        MOVS     r0,#0x35
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_IRDA_AbortTransmitCpltCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.IRDA_EndRxTransfer||, CODE, READONLY, ALIGN=1

IRDA_EndRxTransfer PROC
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#0]
        MOVS     r2,#0xff
        ADDS     r2,r2,#0x21
        BICS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#0]
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#8]
        LSRS     r1,r1,#1
        LSLS     r1,r1,#1
        LDR      r2,[r0,#0]
        STR      r1,[r2,#8]
        MOVS     r2,#0x20
        MOVS     r1,#0x36
        STRB     r2,[r1,r0]
        BX       lr
        ENDP


        AREA ||i.IRDA_EndTransmit_IT||, CODE, READONLY, ALIGN=1

IRDA_EndTransmit_IT PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0x40
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOVS     r1,#0x20
        MOVS     r0,#0x35
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_IRDA_TxCpltCallback
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.IRDA_EndTxTransfer||, CODE, READONLY, ALIGN=1

IRDA_EndTxTransfer PROC
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#0]
        MOVS     r2,#0xc0
        BICS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#0]
        MOVS     r2,#0x20
        MOVS     r1,#0x35
        STRB     r2,[r1,r0]
        BX       lr
        ENDP


        AREA ||i.IRDA_Receive_IT||, CODE, READONLY, ALIGN=1

IRDA_Receive_IT PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        LDRH     r7,[r4,#0x28]
        MOVS     r0,#0x36
        LDRB     r0,[r0,r4]
        CMP      r0,#0x22
        BNE      |L45.120|
        LDR      r0,[r4,#0]
        LDRH     r5,[r0,#0x24]
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L45.50|
        LDR      r0,[r4,#0xc]
        CMP      r0,#0
        BNE      |L45.50|
        LDR      r6,[r4,#0x20]
        MOV      r0,r5
        ANDS     r0,r0,r7
        STRH     r0,[r6,#0]
        LDR      r0,[r4,#0x20]
        ADDS     r0,r0,#2
        STR      r0,[r4,#0x20]
        B        |L45.62|
|L45.50|
        UXTB     r0,r7
        ANDS     r0,r0,r5
        LDR      r2,[r4,#0x20]
        ADDS     r1,r2,#1
        STR      r1,[r4,#0x20]
        STRB     r0,[r2,#0]
|L45.62|
        LDRH     r0,[r4,#0x26]
        SUBS     r0,r0,#1
        UXTH     r0,r0
        STRH     r0,[r4,#0x26]
        CMP      r0,#0
        BNE      |L45.116|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,r1,#0x21
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r1,#0x20
        MOVS     r0,#0x36
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_IRDA_RxCpltCallback
        MOVS     r0,#0
|L45.114|
        POP      {r3-r7,pc}
|L45.116|
        MOVS     r0,#0
        B        |L45.114|
|L45.120|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x18]
        MOVS     r1,#8
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x18]
        MOVS     r0,#2
        B        |L45.114|
        ENDP


        AREA ||i.IRDA_SetConfig||, CODE, READONLY, ALIGN=2

IRDA_SetConfig PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        MOVS     r5,#0
        MOVS     r6,#0x10
        MOVS     r0,#0
        STR      r0,[sp,#0]
        LDR      r1,[r4,#0xc]
        LDR      r0,[r4,#8]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0x10]
        ORRS     r0,r0,r1
        MOV      r5,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LDR      r1,|L46.352|
        ANDS     r0,r0,r1
        ORRS     r0,r0,r5
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#4
        BICS     r0,r0,r1
        LDRH     r1,[r4,#0x16]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x10]
        LSRS     r0,r0,#8
        LSLS     r0,r0,#8
        LDRB     r1,[r4,#0x14]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x10]
        NOP      
        LDR      r1,|L46.356|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L46.128|
        LDR      r0,|L46.360|
        LDR      r0,[r0,#0x30]
        LSLS     r0,r0,#30
        LSRS     r0,r0,#30
        CMP      r0,#0
        BEQ      |L46.106|
        CMP      r0,#1
        BEQ      |L46.114|
        CMP      r0,#2
        BEQ      |L46.118|
        CMP      r0,#3
        BNE      |L46.122|
        B        |L46.110|
|L46.106|
        MOVS     r6,#0
        B        |L46.126|
|L46.110|
        MOVS     r6,#2
        B        |L46.126|
|L46.114|
        MOVS     r6,#4
        B        |L46.126|
|L46.118|
        MOVS     r6,#8
        B        |L46.126|
|L46.122|
        MOVS     r6,#0x10
        NOP      
|L46.126|
        B        |L46.216|
|L46.128|
        LDR      r1,|L46.364|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L46.190|
        LDR      r0,|L46.360|
        LDR      r0,[r0,#0x30]
        MOVS     r1,#3
        LSLS     r1,r1,#16
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L46.168|
        MOVS     r1,#1
        LSLS     r1,r1,#16
        SUBS     r0,r0,r1
        BEQ      |L46.176|
        SUBS     r0,r0,r1
        BEQ      |L46.180|
        SUBS     r0,r0,r1
        BNE      |L46.184|
        B        |L46.172|
|L46.168|
        MOVS     r6,#0
        B        |L46.188|
|L46.172|
        MOVS     r6,#2
        B        |L46.188|
|L46.176|
        MOVS     r6,#4
        B        |L46.188|
|L46.180|
        MOVS     r6,#8
        B        |L46.188|
|L46.184|
        MOVS     r6,#0x10
        NOP      
|L46.188|
        B        |L46.216|
|L46.190|
        LDR      r1,|L46.368|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L46.202|
        MOVS     r6,#0
        B        |L46.216|
|L46.202|
        LDR      r1,|L46.372|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L46.214|
        MOVS     r6,#0
        B        |L46.216|
|L46.214|
        MOVS     r6,#0x10
|L46.216|
        NOP      
        CMP      r6,#4
        BEQ      |L46.290|
        BGT      |L46.234|
        CMP      r6,#0
        BEQ      |L46.244|
        CMP      r6,#2
        BNE      |L46.338|
        B        |L46.270|
|L46.234|
        CMP      r6,#8
        BEQ      |L46.316|
        CMP      r6,#0x10
        BNE      |L46.338|
        B        |L46.340|
|L46.244|
        BL       HAL_RCC_GetPCLK1Freq
        LDR      r1,[r4,#4]
        LSRS     r1,r1,#1
        ADDS     r7,r0,r1
        MOV      r0,r7
        LDR      r1,[r4,#4]
        BL       __aeabi_uidivmod
        UXTH     r0,r0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0xc]
        B        |L46.346|
|L46.270|
        LDR      r1,[r4,#4]
        LSRS     r2,r1,#1
        LDR      r3,|L46.376|
        ADDS     r0,r2,r3
        BL       __aeabi_uidivmod
        UXTH     r0,r0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0xc]
        B        |L46.346|
|L46.290|
        BL       HAL_RCC_GetSysClockFreq
        LDR      r1,[r4,#4]
        LSRS     r1,r1,#1
        ADDS     r7,r0,r1
        MOV      r0,r7
        LDR      r1,[r4,#4]
        BL       __aeabi_uidivmod
        UXTH     r0,r0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0xc]
        B        |L46.346|
|L46.316|
        LDR      r1,[r4,#4]
        LSRS     r2,r1,#1
        MOVS     r3,#1
        LSLS     r3,r3,#15
        ADDS     r0,r2,r3
        BL       __aeabi_uidivmod
        UXTH     r0,r0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0xc]
        B        |L46.346|
|L46.338|
        NOP      
|L46.340|
        MOVS     r0,#1
        STR      r0,[sp,#0]
        NOP      
|L46.346|
        NOP      
        LDR      r0,[sp,#0]
        POP      {r3-r7,pc}
        ENDP

|L46.352|
        DCD      0xefffe9f3
|L46.356|
        DCD      0x40013800
|L46.360|
        DCD      0x40021000
|L46.364|
        DCD      0x40004400
|L46.368|
        DCD      0x40004800
|L46.372|
        DCD      0x40004c00
|L46.376|
        DCD      0x007a1200

        AREA ||i.IRDA_Transmit_IT||, CODE, READONLY, ALIGN=1

IRDA_Transmit_IT PROC
        MOV      r1,r0
        MOVS     r0,#0x35
        LDRB     r0,[r0,r1]
        CMP      r0,#0x21
        BNE      |L47.102|
        LDRH     r0,[r1,#0x1e]
        CMP      r0,#0
        BNE      |L47.44|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        MOVS     r3,#0x80
        BICS     r0,r0,r3
        LDR      r3,[r1,#0]
        STR      r0,[r3,#0]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        MOVS     r3,#0x40
        ORRS     r0,r0,r3
        LDR      r3,[r1,#0]
        STR      r0,[r3,#0]
        MOVS     r0,#0
|L47.42|
        BX       lr
|L47.44|
        MOVS     r3,#1
        LSLS     r3,r3,#12
        LDR      r0,[r1,#8]
        CMP      r0,r3
        BNE      |L47.80|
        LDR      r0,[r1,#0xc]
        CMP      r0,#0
        BNE      |L47.80|
        LDR      r2,[r1,#0x18]
        LDRH     r0,[r2,#0]
        LSLS     r0,r0,#23
        LSRS     r0,r0,#23
        LDR      r3,[r1,#0]
        STRH     r0,[r3,#0x28]
        LDR      r0,[r1,#0x18]
        ADDS     r0,r0,#2
        STR      r0,[r1,#0x18]
        B        |L47.92|
|L47.80|
        LDR      r3,[r1,#0x18]
        ADDS     r0,r3,#1
        STR      r0,[r1,#0x18]
        LDRB     r0,[r3,#0]
        LDR      r3,[r1,#0]
        STRH     r0,[r3,#0x28]
|L47.92|
        LDRH     r0,[r1,#0x1e]
        SUBS     r0,r0,#1
        STRH     r0,[r1,#0x1e]
        MOVS     r0,#0
        B        |L47.42|
|L47.102|
        MOVS     r0,#2
        B        |L47.42|
        ENDP


        AREA ||i.IRDA_WaitOnFlagUntilTimeout||, CODE, READONLY, ALIGN=1

IRDA_WaitOnFlagUntilTimeout PROC
        PUSH     {r0-r7,lr}
        SUB      sp,sp,#4
        MOV      r4,r0
        MOV      r5,r1
        MOV      r7,r2
        LDR      r6,[sp,#0x28]
        B        |L48.88|
|L48.14|
        ADDS     r0,r6,#1
        CMP      r0,#0
        BEQ      |L48.88|
        CMP      r6,#0
        BEQ      |L48.36|
        BL       HAL_GetTick
        LDR      r1,[sp,#0x10]
        SUBS     r0,r0,r1
        CMP      r0,r6
        BLS      |L48.88|
|L48.36|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,r1,#0xa1
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r1,#0x20
        MOVS     r0,#0x35
        STRB     r1,[r0,r4]
        MOVS     r0,#0x36
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x34
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#3
|L48.84|
        ADD      sp,sp,#0x14
        POP      {r4-r7,pc}
|L48.88|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x1c]
        ANDS     r0,r0,r5
        CMP      r0,r5
        BNE      |L48.102|
        MOVS     r0,#1
        B        |L48.104|
|L48.102|
        MOVS     r0,#0
|L48.104|
        CMP      r0,r7
        BEQ      |L48.14|
        MOVS     r0,#0
        B        |L48.84|
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F0xx_DFP\\2.0.0\\Drivers\\STM32F0xx_HAL_Driver\\Src\\stm32f0xx_hal_irda.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___20_stm32f0xx_hal_irda_c_3b42ac3e____REV16|
#line 463 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.4.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___20_stm32f0xx_hal_irda_c_3b42ac3e____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___20_stm32f0xx_hal_irda_c_3b42ac3e____REVSH|
#line 478
|__asm___20_stm32f0xx_hal_irda_c_3b42ac3e____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT HAL_IRDA_Abort [CODE]
        EXPORT HAL_IRDA_AbortCpltCallback [CODE,WEAK]
        EXPORT HAL_IRDA_AbortReceive [CODE]
        EXPORT HAL_IRDA_AbortReceiveCpltCallback [CODE,WEAK]
        EXPORT HAL_IRDA_AbortReceive_IT [CODE]
        EXPORT HAL_IRDA_AbortTransmit [CODE]
        EXPORT HAL_IRDA_AbortTransmitCpltCallback [CODE,WEAK]
        EXPORT HAL_IRDA_AbortTransmit_IT [CODE]
        EXPORT HAL_IRDA_Abort_IT [CODE]
        EXPORT HAL_IRDA_DMAPause [CODE]
        EXPORT HAL_IRDA_DMAResume [CODE]
        EXPORT HAL_IRDA_DMAStop [CODE]
        EXPORT HAL_IRDA_DeInit [CODE]
        EXPORT HAL_IRDA_ErrorCallback [CODE,WEAK]
        EXPORT HAL_IRDA_GetError [CODE]
        EXPORT HAL_IRDA_GetState [CODE]
        EXPORT HAL_IRDA_IRQHandler [CODE]
        EXPORT HAL_IRDA_Init [CODE]
        EXPORT HAL_IRDA_MspDeInit [CODE,WEAK]
        EXPORT HAL_IRDA_MspInit [CODE,WEAK]
        EXPORT HAL_IRDA_Receive [CODE]
        EXPORT HAL_IRDA_Receive_DMA [CODE]
        EXPORT HAL_IRDA_Receive_IT [CODE]
        EXPORT HAL_IRDA_RxCpltCallback [CODE,WEAK]
        EXPORT HAL_IRDA_RxHalfCpltCallback [CODE,WEAK]
        EXPORT HAL_IRDA_Transmit [CODE]
        EXPORT HAL_IRDA_Transmit_DMA [CODE]
        EXPORT HAL_IRDA_Transmit_IT [CODE]
        EXPORT HAL_IRDA_TxCpltCallback [CODE,WEAK]
        EXPORT HAL_IRDA_TxHalfCpltCallback [CODE,WEAK]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT HAL_GetTick [CODE]
        IMPORT HAL_RCC_GetPCLK1Freq [CODE]
        IMPORT __aeabi_uidivmod [CODE]
        IMPORT HAL_RCC_GetSysClockFreq [CODE]
        IMPORT HAL_DMA_Start_IT [CODE]
        IMPORT HAL_DMA_Abort [CODE]
        IMPORT HAL_DMA_Abort_IT [CODE]

        KEEP IRDA_CheckIdleState
        KEEP IRDA_DMAAbortOnError
        KEEP IRDA_DMAError
        KEEP IRDA_DMAReceiveCplt
        KEEP IRDA_DMAReceiveHalfCplt
        KEEP IRDA_DMARxAbortCallback
        KEEP IRDA_DMARxOnlyAbortCallback
        KEEP IRDA_DMATransmitCplt
        KEEP IRDA_DMATransmitHalfCplt
        KEEP IRDA_DMATxAbortCallback
        KEEP IRDA_DMATxOnlyAbortCallback
        KEEP IRDA_EndRxTransfer
        KEEP IRDA_EndTransmit_IT
        KEEP IRDA_EndTxTransfer
        KEEP IRDA_Receive_IT
        KEEP IRDA_SetConfig
        KEEP IRDA_Transmit_IT
        KEEP IRDA_WaitOnFlagUntilTimeout

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
