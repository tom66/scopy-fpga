; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -o.\objects\zynq_spi.o --depend=.\objects\zynq_spi.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE\Device\STM32F071VBTx -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0 -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32F0xx\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc\Legacy -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F071xB --omf_browse=.\objects\zynq_spi.crf zynq_spi.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.scmd_zynq_spi_test||, CODE, READONLY, ALIGN=2

scmd_zynq_spi_test PROC
        PUSH     {r0-r6,lr}
        MOVS     r4,#0
        LDR      r0,|L1.144|
        LDR      r0,[r0,#0]  ; sys_state
        LSLS     r0,r0,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BNE      |L1.24|
        ADR      r0,|L1.148|
        BL       uart_putsraw
|L1.22|
        POP      {r0-r6,pc}
|L1.24|
        MOVS     r0,#1
        LSLS     r0,r0,#15
        MOVS     r1,#9
        LSLS     r1,r1,#27
        STR      r0,[r1,#0x18]
        ADR      r3,|L1.172|
        LDM      r3,{r0-r3}
        STR      r3,[sp,#0xc]
        MOV      r3,sp
        STM      r3!,{r0-r2}
        ADR      r0,|L1.188|
        BL       uart_putsraw
        BL       uart_flush
        B        |L1.130|
|L1.56|
        MOVS     r5,#0
        MOVS     r6,#0
        B        |L1.110|
|L1.62|
        MOV      r2,sp
        MOVS     r1,#0xd
        MOVS     r0,#0x10
        BL       zynq_command_transmit
        MOV      r0,sp
        STRB     r4,[r0,#0]
        STRB     r4,[r0,#1]
        CMP      r5,#0
        BEQ      |L1.94|
        MOVS     r2,#1
        MOV      r1,r2
        LDR      r0,|L1.236|
        BL       HAL_GPIO_WritePin
        B        |L1.104|
|L1.94|
        MOVS     r2,#0
        MOVS     r1,#1
        LDR      r0,|L1.236|
        BL       HAL_GPIO_WritePin
|L1.104|
        MVNS     r5,r5
        ADDS     r4,r4,#1
        ADDS     r6,r6,#1
|L1.110|
        CMP      r6,#0xb4
        BLT      |L1.62|
        MOVS     r0,#0xa
        BL       systick_wait
        BL       uart_char_is_available
        CMP      r0,#0
        BEQ      |L1.130|
        B        |L1.132|
|L1.130|
        B        |L1.56|
|L1.132|
        NOP      
        ADR      r0,|L1.240|
        BL       uart_putsraw
        NOP      
        B        |L1.22|
        ENDP

|L1.144|
        DCD      sys_state
|L1.148|
        DCB      "Zynq not powered on!\r\n",0
        DCB      0
|L1.172|
        DCB      0
        DCB      0
        DCB      127,255,0
        DCB      0
        DCB      127,255,1,0
        DCB      0
        DCB      0
        DCB      128,0
        DCB      0
        DCB      0
|L1.188|
        DCB      "Starting Zynq SPI test, press a key to abort\r\n",0
        DCB      0
|L1.236|
        DCD      0x48000800
|L1.240|
        DCB      "Ends\r\n",0
        DCB      0

        AREA ||i.zynq_command_transmit||, CODE, READONLY, ALIGN=2

zynq_command_transmit PROC
        PUSH     {r0-r2,r4-r7,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOV      r3,r1
        LDR      r5,|L2.200|
        MOVS     r0,#0
        STR      r0,[sp,#4]
        STR      r0,[sp,#8]
        STR      r0,[sp,#0xc]
        STR      r0,[sp,#0x10]
        ADD      r0,sp,#4
        STR      r0,[sp,#0]
        MOV      r0,sp
        STRB     r4,[r0,#4]
        MOVS     r2,#0
        B        |L2.44|
|L2.32|
        LDR      r0,[sp,#0x1c]
        LDRB     r1,[r0,r2]
        ADD      r6,sp,#4
        ADDS     r0,r2,#1
        STRB     r1,[r6,r0]
        ADDS     r2,r2,#1
|L2.44|
        CMP      r2,r3
        BLT      |L2.32|
        MOVS     r0,#1
        LSLS     r0,r0,#15
        MOVS     r1,#9
        LSLS     r1,r1,#27
        STR      r0,[r1,#0x28]
        ADDS     r1,r3,#1
        LDR      r0,[sp,#0]
        B        |L2.110|
|L2.64|
        LDR      r6,|L2.204|
        LDR      r6,[r6,#0]  ; zynq_spi
        LDR      r6,[r6,#8]
        MOVS     r7,#1
        LSLS     r7,r7,#12
        ANDS     r6,r6,r7
        CMP      r6,#0
        BNE      |L2.110|
        CMP      r1,#2
        BCC      |L2.98|
        LDRH     r6,[r0,#0]
        LDR      r7,|L2.204|
        LDR      r7,[r7,#0]  ; zynq_spi
        STR      r6,[r7,#0xc]
        ADDS     r0,r0,#2
        SUBS     r1,r1,#2
        B        |L2.110|
|L2.98|
        LDRB     r6,[r0,#0]
        LDR      r7,|L2.204|
        LDR      r7,[r7,#0]  ; zynq_spi
        STRB     r6,[r7,#0xc]
        ADDS     r0,r0,#1
        SUBS     r1,r1,#1
|L2.110|
        CMP      r1,#0
        BNE      |L2.64|
        NOP      
        CPSID    i
        NOP      
|L2.120|
        LDR      r0,|L2.204|
        LDR      r0,[r0,#0]  ; zynq_spi
        LDR      r0,[r0,#8]
        MOVS     r1,#2
        ANDS     r0,r0,r1
        CMP      r0,#0
        BNE      |L2.142|
        MOV      r0,r5
        SUBS     r5,r5,#1
        CMP      r0,#0
        BNE      |L2.120|
|L2.142|
        LDR      r0,|L2.204|
        LDR      r0,[r0,#0]  ; zynq_spi
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#12
        ORRS     r0,r0,r1
        LDR      r1,|L2.204|
        LDR      r1,[r1,#0]  ; zynq_spi
        STR      r0,[r1,#0]
        NOP      
|L2.162|
        LDR      r0,|L2.204|
        LDR      r0,[r0,#0]  ; zynq_spi
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L2.184|
        MOV      r0,r5
        SUBS     r5,r5,#1
        CMP      r0,#0
        BNE      |L2.162|
|L2.184|
        CPSIE    i
        MOVS     r0,#1
        LSLS     r0,r0,#15
        MOVS     r1,#9
        LSLS     r1,r1,#27
        STR      r0,[r1,#0x18]
        ADD      sp,sp,#0x20
        POP      {r4-r7,pc}
        ENDP

|L2.200|
        DCD      0x00002710
|L2.204|
        DCD      zynq_spi

        AREA ||i.zynq_spi_init||, CODE, READONLY, ALIGN=2

zynq_spi_init PROC
        PUSH     {lr}
        SUB      sp,sp,#0x1c
        MOVS     r0,#8
        STR      r0,[sp,#8]
        MOVS     r0,#2
        STR      r0,[sp,#0xc]
        STR      r0,[sp,#0x10]
        MOVS     r0,#3
        STR      r0,[sp,#0x14]
        MOVS     r0,#0
        STR      r0,[sp,#0x18]
        ADD      r1,sp,#8
        LDR      r0,|L3.284|
        BL       HAL_GPIO_Init
        MOVS     r0,#0x10
        STR      r0,[sp,#8]
        MOVS     r0,#2
        STR      r0,[sp,#0xc]
        STR      r0,[sp,#0x10]
        MOVS     r0,#3
        STR      r0,[sp,#0x14]
        MOVS     r0,#0
        STR      r0,[sp,#0x18]
        ADD      r1,sp,#8
        LDR      r0,|L3.284|
        BL       HAL_GPIO_Init
        MOVS     r0,#0x20
        STR      r0,[sp,#8]
        MOVS     r0,#2
        STR      r0,[sp,#0xc]
        STR      r0,[sp,#0x10]
        MOVS     r0,#3
        STR      r0,[sp,#0x14]
        MOVS     r0,#0
        STR      r0,[sp,#0x18]
        ADD      r1,sp,#8
        LDR      r0,|L3.284|
        BL       HAL_GPIO_Init
        MOVS     r1,#1
        LSLS     r1,r1,#15
        MOVS     r0,#9
        LSLS     r0,r0,#27
        BL       gpio_set_output
        MOVS     r1,#1
        LSLS     r1,r1,#14
        LDR      r0,|L3.288|
        BL       gpio_set_input
        MOVS     r1,#1
        LSLS     r1,r1,#15
        LDR      r0,|L3.288|
        BL       gpio_set_input
        MOVS     r1,#1
        LSLS     r1,r1,#9
        LDR      r0,|L3.292|
        BL       gpio_set_input
        MOVS     r1,#1
        LSLS     r1,r1,#10
        LDR      r0,|L3.292|
        BL       gpio_set_input
        MOVS     r1,#4
        LDR      r0,|L3.296|
        BL       gpio_set_input
        MOVS     r1,#8
        LDR      r0,|L3.296|
        BL       gpio_set_input
        MOVS     r1,#0x10
        LDR      r0,|L3.296|
        BL       gpio_set_input
        LDR      r0,|L3.300|
        LDR      r1,|L3.304|
        STR      r0,[r1,#0]  ; zynq_spi
        MOVS     r0,#0xff
        ADDS     r0,#5
        STR      r0,[r1,#4]  ; zynq_spi
        MOVS     r1,#0
        LDR      r0,|L3.304|
        STR      r1,[r0,#8]
        MOVS     r1,#7
        LSLS     r1,r1,#8
        STR      r1,[r0,#0xc]
        MOVS     r1,#0
        STR      r1,[r0,#0x10]
        STR      r1,[r0,#0x14]
        MOVS     r1,#1
        LSLS     r1,r1,#9
        STR      r1,[r0,#0x18]
        MOVS     r1,#8
        STR      r1,[r0,#0x1c]
        MOVS     r1,#0
        STR      r1,[r0,#0x20]
        STR      r1,[r0,#0x24]
        MOVS     r1,#1
        LSLS     r1,r1,#13
        STR      r1,[r0,#0x28]
        MOVS     r1,#0x9b
        STR      r1,[r0,#0x2c]
        MOVS     r1,#1
        STR      r1,[r0,#0x30]
        MOVS     r1,#0
        STR      r1,[r0,#0x34]
        NOP      
        LDR      r0,|L3.308|
        LDR      r0,[r0,#0x18]
        MOVS     r1,#1
        LSLS     r1,r1,#12
        ORRS     r0,r0,r1
        LDR      r1,|L3.308|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ASRS     r1,r1,#18
        ANDS     r0,r0,r1
        STR      r0,[sp,#4]
        NOP      
        NOP      
        LDR      r0,|L3.304|
        BL       HAL_SPI_Init
        LDR      r0,|L3.304|
        LDR      r0,[r0,#0]  ; zynq_spi
        LDR      r0,[r0,#0]
        MOVS     r1,#0x40
        ORRS     r0,r0,r1
        LDR      r1,|L3.304|
        LDR      r1,[r1,#0]  ; zynq_spi
        STR      r0,[r1,#0]
        ADR      r0,|L3.312|
        BL       uart_putsraw
        ADD      sp,sp,#0x1c
        POP      {pc}
        ENDP

|L3.284|
        DCD      0x48000400
|L3.288|
        DCD      0x48000800
|L3.292|
        DCD      0x48001400
|L3.296|
        DCD      0x48001000
|L3.300|
        DCD      0x40013000
|L3.304|
        DCD      zynq_spi
|L3.308|
        DCD      0x40021000
|L3.312|
        DCB      "spi: initialised\r\n",0
        DCB      0

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

zynq_spi
        %        100

;*** Start embedded assembler ***

#line 1 "zynq_spi.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_zynq_spi_c_3cc141c2____REV16|
#line 463 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.4.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___10_zynq_spi_c_3cc141c2____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_zynq_spi_c_3cc141c2____REVSH|
#line 478
|__asm___10_zynq_spi_c_3cc141c2____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT scmd_zynq_spi_test [CODE]
        EXPORT zynq_command_transmit [CODE]
        EXPORT zynq_spi_init [CODE]
        EXPORT zynq_spi [DATA,SIZE=100]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT HAL_GPIO_Init [CODE]
        IMPORT gpio_set_output [CODE]
        IMPORT gpio_set_input [CODE]
        IMPORT HAL_SPI_Init [CODE]
        IMPORT uart_putsraw [CODE]
        IMPORT uart_flush [CODE]
        IMPORT HAL_GPIO_WritePin [CODE]
        IMPORT systick_wait [CODE]
        IMPORT uart_char_is_available [CODE]
        IMPORT sys_state [DATA]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
