; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -o.\objects\hal.o --depend=.\objects\hal.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE\Device\STM32F071VBTx -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0 -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32F0xx\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc\Legacy -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F071xB --omf_browse=.\objects\hal.crf hal.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.SysTick_Handler||, CODE, READONLY, ALIGN=2

SysTick_Handler PROC
        PUSH     {r4-r6,lr}
        LDR      r0,|L1.256|
        LDR      r2,[r0,#0]  ; ms_since_boot
        LDR      r0,[r0,#4]  ; ms_since_boot
        MOVS     r1,#0
        ADDS     r2,r2,#1
        ADCS     r0,r0,r1
        LDR      r1,|L1.256|
        STR      r2,[r1,#0]  ; ms_since_boot
        STR      r0,[r1,#4]  ; ms_since_boot
        LDR      r0,|L1.260|
        LDR      r0,[r0,#0]  ; ms_counter
        ADDS     r0,r0,#1
        LDR      r1,|L1.260|
        STR      r0,[r1,#0]  ; ms_counter
        MOVS     r1,#0
        LDR      r0,|L1.264|
        BL       HAL_ADC_PollForConversion
        CMP      r0,#0
        BNE      |L1.72|
        LDR      r0,|L1.264|
        BL       HAL_ADC_GetValue
        MOV      r5,r0
        LDR      r0,|L1.268|
        MULS     r0,r5,r0
        LSRS     r0,r0,#12
        ADDS     r0,r0,#0xff
        ADDS     r0,r0,#0xa
        LDR      r1,|L1.272|
        STR      r0,[r1,#0x18]  ; sys_state
        LDR      r0,|L1.264|
        BL       HAL_ADC_Start
        B        |L1.78|
|L1.72|
        MOVS     r0,#0
        LDR      r1,|L1.272|
        STR      r0,[r1,#0x18]  ; sys_state
|L1.78|
        LDR      r0,|L1.272|
        LDR      r0,[r0,#0x18]  ; sys_state
        LDR      r1,|L1.276|
        CMP      r0,r1
        BLS      |L1.102|
        LDR      r0,|L1.272|
        LDR      r0,[r0,#0]  ; sys_state
        MOVS     r1,#0xff
        ADDS     r1,#1
        BICS     r0,r0,r1
        LDR      r1,|L1.272|
        STR      r0,[r1,#0]  ; sys_state
|L1.102|
        LDR      r0,|L1.272|
        LDR      r0,[r0,#0x18]  ; sys_state
        LDR      r1,|L1.280|
        CMP      r0,r1
        BCC      |L1.122|
        LDR      r0,|L1.272|
        LDR      r0,[r0,#0x18]  ; sys_state
        LDR      r1,|L1.284|
        CMP      r0,r1
        BLS      |L1.164|
|L1.122|
        LDR      r0,|L1.272|
        LDR      r0,[r0,#0]  ; sys_state
        MOVS     r1,#0xff
        ADDS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,|L1.272|
        STR      r0,[r1,#0]  ; sys_state
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; sys_state
        LSLS     r0,r0,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L1.164|
        BL       pll_power_off
        BL       adc_power_off
        BL       raspi_rapid_power_off
        BL       zynq_rapid_power_off
|L1.164|
        LDR      r0,|L1.272|
        LDR      r0,[r0,#0]  ; sys_state
        MOVS     r1,#0xff
        ADDS     r1,#1
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L1.190|
        MOVS     r2,#1
        MOVS     r1,#2
        LDR      r0,|L1.288|
        BL       HAL_GPIO_WritePin
        B        |L1.200|
|L1.190|
        MOVS     r2,#0
        MOVS     r1,#2
        LDR      r0,|L1.288|
        BL       HAL_GPIO_WritePin
|L1.200|
        LDR      r1,|L1.256|
        LDR      r4,[r1,#0]  ; ms_since_boot
        LDR      r1,[r1,#4]  ; ms_since_boot
        LDR      r1,|L1.292|
        ANDS     r4,r4,r1
        CMP      r4,#0x7f
        BEQ      |L1.218|
        CMP      r4,#0xff
        BNE      |L1.230|
|L1.218|
        MOVS     r2,#1
        MOV      r1,r2
        LDR      r0,|L1.288|
        BL       HAL_GPIO_WritePin
        B        |L1.252|
|L1.230|
        CMP      r4,#0x82
        BEQ      |L1.242|
        MOVS     r0,#0xff
        ADDS     r0,#3
        CMP      r4,r0
        BNE      |L1.252|
|L1.242|
        MOVS     r2,#0
        MOVS     r1,#1
        LDR      r0,|L1.288|
        BL       HAL_GPIO_WritePin
|L1.252|
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L1.256|
        DCD      ms_since_boot
|L1.260|
        DCD      ms_counter
|L1.264|
        DCD      g_ADCHandle
|L1.268|
        DCD      0x00003ee1
|L1.272|
        DCD      sys_state
|L1.276|
        DCD      0x00002af8
|L1.280|
        DCD      0x0000251c
|L1.284|
        DCD      0x000039d0
|L1.288|
        DCD      0x48001400
|L1.292|
        DCD      0x000003ff

        AREA ||i.__NVIC_SetPriority||, CODE, READONLY, ALIGN=2

__NVIC_SetPriority PROC
        PUSH     {r4,lr}
        CMP      r0,#0
        BLT      |L2.58|
        LDR      r2,|L2.112|
        MOVS     r3,#3
        LSLS     r3,r3,#8
        ADDS     r2,r2,r3
        LSRS     r3,r0,#2
        LSLS     r3,r3,#2
        LDR      r2,[r2,r3]
        LSLS     r3,r0,#30
        LSRS     r4,r3,#27
        MOVS     r3,#0xff
        LSLS     r3,r3,r4
        BICS     r2,r2,r3
        LSLS     r3,r1,#30
        LSRS     r3,r3,#24
        LSLS     r4,r0,#30
        LSRS     r4,r4,#27
        LSLS     r3,r3,r4
        ORRS     r2,r2,r3
        LDR      r3,|L2.112|
        MOVS     r4,#3
        LSLS     r4,r4,#8
        ADDS     r3,r3,r4
        LSRS     r4,r0,#2
        LSLS     r4,r4,#2
        STR      r2,[r3,r4]
        B        |L2.108|
|L2.58|
        LDR      r2,|L2.116|
        LSLS     r3,r0,#28
        LSRS     r3,r3,#28
        SUBS     r3,r3,#8
        LSRS     r3,r3,#2
        LSLS     r3,r3,#2
        LDR      r2,[r2,r3]
        LSLS     r3,r0,#30
        LSRS     r4,r3,#27
        MOVS     r3,#0xff
        LSLS     r3,r3,r4
        BICS     r2,r2,r3
        LSLS     r3,r1,#30
        LSRS     r3,r3,#24
        LSLS     r4,r0,#30
        LSRS     r4,r4,#27
        LSLS     r3,r3,r4
        ORRS     r2,r2,r3
        LDR      r3,|L2.116|
        LSLS     r4,r0,#28
        LSRS     r4,r4,#28
        SUBS     r4,r4,#8
        LSRS     r4,r4,#2
        LSLS     r4,r4,#2
        STR      r2,[r3,r4]
|L2.108|
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L2.112|
        DCD      0xe000e100
|L2.116|
        DCD      0xe000ed1c

        AREA ||i.adc_power_off||, CODE, READONLY, ALIGN=2

adc_power_off PROC
        PUSH     {r4,lr}
        MOVS     r2,#0
        MOVS     r1,#1
        LSLS     r1,r1,#10
        LDR      r0,|L3.28|
        BL       HAL_GPIO_WritePin
        LDR      r0,|L3.32|
        LDR      r0,[r0,#0]  ; sys_state
        MOVS     r1,#8
        BICS     r0,r0,r1
        LDR      r1,|L3.32|
        STR      r0,[r1,#0]  ; sys_state
        POP      {r4,pc}
        ENDP

|L3.28|
        DCD      0x48000c00
|L3.32|
        DCD      sys_state

        AREA ||i.adc_power_on||, CODE, READONLY, ALIGN=2

adc_power_on PROC
        PUSH     {r4,lr}
        MOVS     r2,#1
        LSLS     r1,r2,#10
        LDR      r0,|L4.28|
        BL       HAL_GPIO_WritePin
        LDR      r0,|L4.32|
        LDR      r0,[r0,#0]  ; sys_state
        MOVS     r1,#8
        ORRS     r0,r0,r1
        LDR      r1,|L4.32|
        STR      r0,[r1,#0]  ; sys_state
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L4.28|
        DCD      0x48000c00
|L4.32|
        DCD      sys_state

        AREA ||i.arb_delay||, CODE, READONLY, ALIGN=1

arb_delay PROC
        PUSH     {r0,lr}
        B        |L5.12|
|L5.4|
        NOP      
        LDR      r0,[sp,#0]
        SUBS     r0,r0,#1
        STR      r0,[sp,#0]
|L5.12|
        LDR      r0,[sp,#0]
        CMP      r0,#0
        BNE      |L5.4|
        POP      {r3,pc}
        ENDP


        AREA ||i.gpio_prot_power_end||, CODE, READONLY, ALIGN=2

gpio_prot_power_end PROC
        MOVS     r0,#0
        LDR      r1,|L6.8|
        STR      r0,[r1,#0x1c]  ; sys_state
        BX       lr
        ENDP

|L6.8|
        DCD      sys_state

        AREA ||i.gpio_prot_power_rail_disable||, CODE, READONLY, ALIGN=1

gpio_prot_power_rail_disable PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        LDRH     r1,[r4,#8]
        MOVS     r2,#0
        LDR      r0,[r4,#4]
        BL       HAL_GPIO_WritePin
        CMP      r5,#0
        BLE      |L7.26|
        MOV      r0,r5
        BL       systick_wait
|L7.26|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.gpio_prot_power_rail_enable||, CODE, READONLY, ALIGN=2

gpio_prot_power_rail_enable PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        LDR      r0,|L8.76|
        LDR      r0,[r0,#0]  ; sys_state
        MOVS     r1,#3
        LSLS     r1,r1,#8
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L8.22|
|L8.20|
        POP      {r4-r6,pc}
|L8.22|
        LDRH     r1,[r4,#8]
        MOVS     r2,#1
        LDR      r0,[r4,#4]
        BL       HAL_GPIO_WritePin
        B        |L8.68|
|L8.34|
        MOVS     r0,#3
        BL       systick_wait
        SUBS     r5,r5,#3
        LDR      r0,|L8.76|
        LDR      r0,[r0,#0]  ; sys_state
        MOVS     r1,#3
        LSLS     r1,r1,#8
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L8.68|
        LDRH     r1,[r4,#8]
        MOVS     r2,#0
        LDR      r0,[r4,#4]
        BL       HAL_GPIO_WritePin
        B        |L8.20|
|L8.68|
        CMP      r5,#0
        BGT      |L8.34|
        NOP      
        B        |L8.20|
        ENDP

|L8.76|
        DCD      sys_state

        AREA ||i.gpio_prot_power_start||, CODE, READONLY, ALIGN=2

gpio_prot_power_start PROC
        MOVS     r0,#1
        LDR      r1,|L9.8|
        STR      r0,[r1,#0x1c]  ; sys_state
        BX       lr
        ENDP

|L9.8|
        DCD      sys_state

        AREA ||i.gpio_set_input||, CODE, READONLY, ALIGN=1

gpio_set_input PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r5,r0
        MOV      r4,r1
        STR      r4,[sp,#0]
        MOVS     r0,#0
        STR      r0,[sp,#4]
        MOV      r1,sp
        MOV      r0,r5
        BL       HAL_GPIO_Init
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.gpio_set_output||, CODE, READONLY, ALIGN=1

gpio_set_output PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r5,r0
        MOV      r4,r1
        STR      r4,[sp,#0]
        MOVS     r0,#1
        STR      r0,[sp,#4]
        MOVS     r0,#0
        STR      r0,[sp,#0xc]
        MOV      r1,sp
        MOV      r0,r5
        BL       HAL_GPIO_Init
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.hal_init||, CODE, READONLY, ALIGN=2

hal_init PROC
        PUSH     {r4,lr}
        SUB      sp,sp,#0x80
        NOP      
        LDR      r0,|L12.976|
        LDR      r0,[r0,#0x14]
        MOVS     r1,#1
        LSLS     r1,r1,#17
        ORRS     r0,r0,r1
        LDR      r1,|L12.976|
        STR      r0,[r1,#0x14]
        MOV      r0,r1
        LDR      r0,[r0,#0x14]
        MOVS     r1,#1
        LSLS     r1,r1,#17
        ANDS     r0,r0,r1
        STR      r0,[sp,#0]
        NOP      
        NOP      
        NOP      
        LDR      r0,|L12.976|
        LDR      r0,[r0,#0x14]
        LSLS     r1,r1,#1
        ORRS     r0,r0,r1
        LDR      r1,|L12.976|
        STR      r0,[r1,#0x14]
        MOV      r0,r1
        LDR      r0,[r0,#0x14]
        MOVS     r1,#1
        LSLS     r1,r1,#18
        ANDS     r0,r0,r1
        STR      r0,[sp,#0]
        NOP      
        NOP      
        NOP      
        LDR      r0,|L12.976|
        LDR      r0,[r0,#0x14]
        LSLS     r1,r1,#1
        ORRS     r0,r0,r1
        LDR      r1,|L12.976|
        STR      r0,[r1,#0x14]
        MOV      r0,r1
        LDR      r0,[r0,#0x14]
        MOVS     r1,#1
        LSLS     r1,r1,#19
        ANDS     r0,r0,r1
        STR      r0,[sp,#0]
        NOP      
        NOP      
        NOP      
        LDR      r0,|L12.976|
        LDR      r0,[r0,#0x14]
        LSLS     r1,r1,#1
        ORRS     r0,r0,r1
        LDR      r1,|L12.976|
        STR      r0,[r1,#0x14]
        MOV      r0,r1
        LDR      r0,[r0,#0x14]
        MOVS     r1,#1
        LSLS     r1,r1,#20
        ANDS     r0,r0,r1
        STR      r0,[sp,#0]
        NOP      
        NOP      
        NOP      
        LDR      r0,|L12.976|
        LDR      r0,[r0,#0x14]
        LSLS     r1,r1,#1
        ORRS     r0,r0,r1
        LDR      r1,|L12.976|
        STR      r0,[r1,#0x14]
        MOV      r0,r1
        LDR      r0,[r0,#0x14]
        MOVS     r1,#1
        LSLS     r1,r1,#21
        ANDS     r0,r0,r1
        STR      r0,[sp,#0]
        NOP      
        NOP      
        NOP      
        LDR      r0,|L12.976|
        LDR      r0,[r0,#0x14]
        LSLS     r1,r1,#1
        ORRS     r0,r0,r1
        LDR      r1,|L12.976|
        STR      r0,[r1,#0x14]
        MOV      r0,r1
        LDR      r0,[r0,#0x14]
        MOVS     r1,#1
        LSLS     r1,r1,#22
        ANDS     r0,r0,r1
        STR      r0,[sp,#0]
        NOP      
        NOP      
        NOP      
        LDR      r0,|L12.976|
        LDR      r0,[r0,#0x14]
        ORRS     r0,r0,r1
        LDR      r1,|L12.976|
        STR      r0,[r1,#0x14]
        MOV      r0,r1
        LDR      r0,[r0,#0x14]
        MOVS     r1,#1
        LSLS     r1,r1,#22
        ANDS     r0,r0,r1
        STR      r0,[sp,#0]
        NOP      
        NOP      
        NOP      
        LDR      r0,|L12.976|
        LDR      r0,[r0,#0x1c]
        ASRS     r1,r1,#3
        ORRS     r0,r0,r1
        LDR      r1,|L12.976|
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        MOVS     r1,#1
        LSLS     r1,r1,#19
        ANDS     r0,r0,r1
        STR      r0,[sp,#0]
        NOP      
        NOP      
        LDR      r0,|L12.976|
        LDR      r0,[r0,#0x34]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,|L12.976|
        STR      r0,[r1,#0x34]
        NOP      
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ASRS     r1,r1,#21
        ORRS     r0,r0,r1
        LDR      r1,|L12.976|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ASRS     r1,r1,#21
        ANDS     r0,r0,r1
        STR      r0,[sp,#0]
        NOP      
        NOP      
        BL       SystemInit
        BL       SystemCoreClockUpdate
        MOVS     r0,#0x20
        STR      r0,[sp,#0x28]
        MOVS     r0,#1
        STR      r0,[sp,#0x48]
        STR      r0,[sp,#0x3c]
        ADD      r0,sp,#0x28
        BL       HAL_RCC_OscConfig
        MOVS     r0,#7
        STR      r0,[sp,#0x5c]
        MOVS     r0,#0
        STR      r0,[sp,#0x64]
        STR      r0,[sp,#0x68]
        MOVS     r0,#3
        STR      r0,[sp,#0x60]
        MOVS     r0,#1
        STR      r0,[sp,#0x5c]
        MOVS     r1,#1
        ADD      r0,sp,#0x5c
        BL       HAL_RCC_ClockConfig
        MOVS     r0,#1
        STR      r0,[sp,#0x10]
        MOVS     r0,#0
        STR      r0,[sp,#0x18]
        ADD      r0,sp,#0x10
        BL       HAL_RCCEx_PeriphCLKConfig
        NOP      
        LDR      r0,|L12.976|
        LDR      r0,[r0,#0x18]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,|L12.976|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        LSLS     r0,r0,#31
        LSRS     r0,r0,#31
        STR      r0,[sp,#0]
        NOP      
        NOP      
        MOVS     r1,#1
        LDR      r0,|L12.980|
        BL       gpio_set_output
        MOVS     r1,#2
        LDR      r0,|L12.980|
        BL       gpio_set_output
        MOVS     r1,#1
        LDR      r0,|L12.984|
        BL       gpio_set_output
        MOVS     r1,#1
        LSLS     r1,r1,#9
        MOVS     r0,#9
        LSLS     r0,r0,#27
        BL       gpio_set_output
        MOVS     r1,#1
        LSLS     r1,r1,#10
        MOVS     r0,#9
        LSLS     r0,r0,#27
        BL       gpio_set_output
        MOVS     r1,#0xff
        ADDS     r1,#1
        LDR      r0,|L12.984|
        BL       gpio_set_output
        MOVS     r1,#0x80
        LDR      r0,|L12.984|
        BL       gpio_set_output
        MOVS     r1,#0x40
        LDR      r0,|L12.984|
        BL       gpio_set_output
        MOVS     r1,#1
        LSLS     r1,r1,#15
        LDR      r0,|L12.988|
        BL       gpio_set_output
        MOVS     r1,#1
        LSLS     r1,r1,#14
        LDR      r0,|L12.988|
        BL       gpio_set_output
        MOVS     r1,#1
        LSLS     r1,r1,#13
        LDR      r0,|L12.988|
        BL       gpio_set_output
        MOVS     r1,#0xff
        ADDS     r1,#1
        MOVS     r0,#9
        LSLS     r0,r0,#27
        BL       gpio_set_output
        MOVS     r1,#1
        LSLS     r1,r1,#13
        LDR      r0,|L12.984|
        BL       gpio_set_output
        MOVS     r1,#0x20
        LDR      r0,|L12.992|
        BL       gpio_set_output
        MOVS     r1,#0x40
        LDR      r0,|L12.992|
        BL       gpio_set_output
        MOVS     r1,#0x40
        LDR      r0,|L12.988|
        BL       gpio_set_output
        MOVS     r2,#0
        MOVS     r1,#0x40
        LDR      r0,|L12.988|
        BL       HAL_GPIO_WritePin
        MOVS     r1,#0x80
        LDR      r0,|L12.988|
        BL       gpio_set_output
        MOVS     r1,#1
        LSLS     r1,r1,#9
        LDR      r0,|L12.984|
        BL       gpio_set_output
        MOVS     r1,#1
        LSLS     r1,r1,#12
        MOVS     r0,#9
        LSLS     r0,r0,#27
        BL       gpio_set_output
        MOVS     r1,#2
        LDR      r0,|L12.992|
        BL       gpio_set_output
        MOVS     r1,#1
        LSLS     r1,r1,#9
        LDR      r0,|L12.988|
        BL       gpio_set_output
        MOVS     r1,#1
        LSLS     r1,r1,#10
        LDR      r0,|L12.988|
        BL       gpio_set_output
        MOVS     r2,#0
        MOVS     r1,#1
        LDR      r0,|L12.980|
        BL       HAL_GPIO_WritePin
        MOVS     r2,#0
        MOVS     r1,#2
        LDR      r0,|L12.980|
        BL       HAL_GPIO_WritePin
        MOVS     r2,#0
        MOVS     r1,#1
        LDR      r0,|L12.984|
        BL       HAL_GPIO_WritePin
        MOVS     r2,#1
        LSLS     r1,r2,#9
        MOVS     r0,#9
        LSLS     r0,r0,#27
        BL       HAL_GPIO_WritePin
        MOVS     r2,#1
        LSLS     r1,r2,#10
        MOVS     r0,#9
        LSLS     r0,r0,#27
        BL       HAL_GPIO_WritePin
        MOVS     r0,#1
        LSLS     r0,r0,#10
        STR      r0,[sp,#0x6c]
        MOVS     r0,#2
        STR      r0,[sp,#0x70]
        MOVS     r0,#0
        STR      r0,[sp,#0x7c]
        STR      r0,[sp,#0x78]
        STR      r0,[sp,#0x74]
        ADD      r1,sp,#0x6c
        LDR      r0,|L12.984|
        BL       HAL_GPIO_Init
        MOVS     r0,#1
        LSLS     r0,r0,#11
        STR      r0,[sp,#0x6c]
        MOVS     r0,#0x12
        STR      r0,[sp,#0x70]
        MOVS     r0,#0
        STR      r0,[sp,#0x7c]
        STR      r0,[sp,#0x78]
        STR      r0,[sp,#0x74]
        ADD      r1,sp,#0x6c
        LDR      r0,|L12.984|
        BL       HAL_GPIO_Init
        LDR      r0,|L12.996|
        LDR      r1,|L12.1000|
        STR      r0,[r1,#0]  ; g_UARTHandle
        MOVS     r0,#0xe1
        LSLS     r0,r0,#11
        STR      r0,[r1,#4]  ; g_UARTHandle
        MOVS     r1,#0xc
        LDR      r0,|L12.1000|
        STR      r1,[r0,#0x14]
        MOVS     r1,#0
        STR      r1,[r0,#0x10]
        STR      r1,[r0,#0xc]
        STR      r1,[r0,#8]
        STR      r1,[r0,#0x18]
        BL       HAL_UART_Init
        ADR      r0,|L12.1004|
        BL       uart_putsraw
        ADR      r0,|L12.1012|
        BL       uart_putsraw
        ADR      r0,|L12.1044|
        BL       uart_putsraw
        LDR      r0,|L12.1068|
        LDR      r1,|L12.1072|
        STR      r0,[r1,#0]  ; g_ADCHandle
        MOVS     r0,#0
        STR      r0,[r1,#4]  ; g_ADCHandle
        MOVS     r1,#0
        LDR      r0,|L12.1072|
        STR      r1,[r0,#0x20]
        STR      r1,[r0,#0xc]
        STR      r1,[r0,#0x24]
        STR      r1,[r0,#0x30]
        MOVS     r1,#4
        STR      r1,[r0,#0x14]
        MOVS     r1,#0xff
        ADDS     r1,r1,#0xc2
        STR      r1,[r0,#0x28]
        MOVS     r1,#0
        STR      r1,[r0,#0x2c]
        STR      r1,[r0,#0x1c]
        MOVS     r1,#1
        STR      r1,[r0,#0x18]
        MOVS     r1,#0
        STR      r1,[r0,#0x34]
        STR      r1,[r0,#8]
        MOVS     r1,#1
        STR      r1,[r0,#0x38]
        STR      r1,[r0,#0x10]
        BL       HAL_ADC_Init
        LDR      r0,|L12.1072|
        BL       HAL_ADC_Start
        MOVS     r0,#2
        STR      r0,[sp,#0x6c]
        MOVS     r0,#3
        STR      r0,[sp,#0x70]
        MOVS     r0,#0
        STR      r0,[sp,#0x74]
        ADD      r1,sp,#0x6c
        LDR      r0,|L12.984|
        BL       HAL_GPIO_Init
        MOVS     r0,#0xb
        STR      r0,[sp,#4]
        MOVS     r0,#1
        STR      r0,[sp,#8]
        MOVS     r0,#3
        STR      r0,[sp,#0xc]
        ADD      r1,sp,#4
        LDR      r0,|L12.1072|
        BL       HAL_ADC_ConfigChannel
        ADR      r0,|L12.1076|
        BL       uart_putsraw
        MOVS     r1,#0x7d
        LSLS     r1,r1,#3
        LDR      r0,|L12.1104|
        LDR      r0,[r0,#0]  ; SystemCoreClock
        BL       __aeabi_uidivmod
        MOV      r4,r0
        SUBS     r0,r4,#1
        LDR      r1,|L12.1108|
        CMP      r0,r1
        BLS      |L12.884|
        B        |L12.910|
|L12.884|
        SUBS     r0,r4,#1
        LDR      r1,|L12.1112|
        STR      r0,[r1,#0x14]
        MOVS     r1,#3
        SUBS     r0,r1,#4
        BL       __NVIC_SetPriority
        MOVS     r0,#0
        LDR      r1,|L12.1112|
        STR      r0,[r1,#0x18]
        MOVS     r0,#7
        STR      r0,[r1,#0x10]
        NOP      
|L12.910|
        BL       adc_power_off
        ADR      r0,|L12.1116|
        BL       uart_putsraw
        BL       pll_power_off
        ADR      r0,|L12.1136|
        BL       uart_putsraw
        BL       raspi_power_off
        ADR      r0,|L12.1156|
        BL       uart_putsraw
        BL       zynq_power_off
        ADR      r0,|L12.1180|
        BL       uart_putsraw
        BL       main_psu_power_off
        ADR      r0,|L12.1200|
        BL       uart_putsraw
        ADR      r0,|L12.1220|
        BL       uart_putsraw
        BL       zynq_spi_init
        ADD      sp,sp,#0x80
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L12.976|
        DCD      0x40021000
|L12.980|
        DCD      0x48001400
|L12.984|
        DCD      0x48000800
|L12.988|
        DCD      0x48000c00
|L12.992|
        DCD      0x48001000
|L12.996|
        DCD      0x40004c00
|L12.1000|
        DCD      g_UARTHandle
|L12.1004|
        DCB      "\r\n\r\n",0
        DCB      0
        DCB      0
        DCB      0
|L12.1012|
        DCB      "ScopyMVP MCU Main Application\r\n",0
|L12.1044|
        DCB      "hal: IO initialised\r\n",0
        DCB      0
        DCB      0
|L12.1068|
        DCD      0x40012400
|L12.1072|
        DCD      g_ADCHandle
|L12.1076|
        DCB      "hal: MCU ADC initialised\r\n",0
        DCB      0
|L12.1104|
        DCD      SystemCoreClock
|L12.1108|
        DCD      0x00ffffff
|L12.1112|
        DCD      0xe000e000
|L12.1116|
        DCB      "hal: adc pwr OFF\r\n",0
        DCB      0
|L12.1136|
        DCB      "hal: pll pwr OFF\r\n",0
        DCB      0
|L12.1156|
        DCB      "hal: raspi pwr OFF\r\n",0
        DCB      0
        DCB      0
        DCB      0
|L12.1180|
        DCB      "hal: zynq pwr OFF\r\n",0
|L12.1200|
        DCB      "hal: main pwr OFF\r\n",0
|L12.1220|
        DCB      "hal: rails start OFF\r\n",0
        DCB      0

        AREA ||i.main_psu_power_off||, CODE, READONLY, ALIGN=2

main_psu_power_off PROC
        PUSH     {r4,lr}
        LDR      r0,|L13.80|
        LDR      r0,[r0,#0]  ; sys_state
        LSLS     r0,r0,#30
        LSRS     r0,r0,#30
        CMP      r0,#0
        BEQ      |L13.30|
        LDR      r0,|L13.80|
        LDR      r0,[r0,#0]  ; sys_state
        LSLS     r1,r0,#30
        LSRS     r1,r1,#30
        LDR      r0,|L13.84|
        BL       uart_printf
|L13.28|
        POP      {r4,pc}
|L13.30|
        MOVS     r2,#0
        MOVS     r1,#0x40
        LDR      r0,|L13.88|
        BL       HAL_GPIO_WritePin
        MOVS     r2,#0
        MOVS     r1,#0x80
        LDR      r0,|L13.88|
        BL       HAL_GPIO_WritePin
        MOVS     r2,#0
        MOVS     r1,#0xff
        ADDS     r1,#1
        LDR      r0,|L13.88|
        BL       HAL_GPIO_WritePin
        LDR      r0,|L13.80|
        LDR      r0,[r0,#0]  ; sys_state
        MOVS     r1,#0x10
        BICS     r0,r0,r1
        LDR      r1,|L13.80|
        STR      r0,[r1,#0]  ; sys_state
        NOP      
        B        |L13.28|
        ENDP

        DCW      0x0000
|L13.80|
        DCD      sys_state
|L13.84|
        DCD      ||.conststring||
|L13.88|
        DCD      0x48000800

        AREA ||i.main_psu_power_on||, CODE, READONLY, ALIGN=2

main_psu_power_on PROC
        PUSH     {r4,lr}
        BL       zynq_power_off
        MOVS     r2,#1
        MOVS     r1,#0x40
        LDR      r0,|L14.76|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#0xa
        BL       systick_wait
        MOVS     r2,#1
        MOVS     r1,#0x80
        LDR      r0,|L14.76|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#0xa
        BL       systick_wait
        MOVS     r2,#1
        LSLS     r1,r2,#8
        LDR      r0,|L14.76|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#0x50
        BL       systick_wait
        LDR      r0,|L14.80|
        LDR      r0,[r0,#0]  ; sys_state
        MOVS     r1,#0x10
        ORRS     r0,r0,r1
        LDR      r1,|L14.80|
        STR      r0,[r1,#0]  ; sys_state
        ADR      r0,|L14.84|
        BL       uart_putsraw
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L14.76|
        DCD      0x48000800
|L14.80|
        DCD      sys_state
|L14.84|
        DCB      "hal: main DC-DC banks ON\r\n",0
        DCB      0

        AREA ||i.main_psu_power_on_if_off||, CODE, READONLY, ALIGN=2

main_psu_power_on_if_off PROC
        PUSH     {r4,lr}
        LDR      r0,|L15.20|
        LDR      r0,[r0,#0]  ; sys_state
        MOVS     r1,#0x10
        ANDS     r0,r0,r1
        CMP      r0,#0
        BNE      |L15.18|
        BL       main_psu_power_on
|L15.18|
        POP      {r4,pc}
        ENDP

|L15.20|
        DCD      sys_state

        AREA ||i.pll_power_off||, CODE, READONLY, ALIGN=2

pll_power_off PROC
        PUSH     {r4,lr}
        MOVS     r2,#0
        MOVS     r1,#1
        LSLS     r1,r1,#9
        LDR      r0,|L16.28|
        BL       HAL_GPIO_WritePin
        LDR      r0,|L16.32|
        LDR      r0,[r0,#0]  ; sys_state
        MOVS     r1,#4
        BICS     r0,r0,r1
        LDR      r1,|L16.32|
        STR      r0,[r1,#0]  ; sys_state
        POP      {r4,pc}
        ENDP

|L16.28|
        DCD      0x48000c00
|L16.32|
        DCD      sys_state

        AREA ||i.pll_power_on||, CODE, READONLY, ALIGN=2

pll_power_on PROC
        PUSH     {r4,lr}
        MOVS     r2,#1
        LSLS     r1,r2,#9
        LDR      r0,|L17.28|
        BL       HAL_GPIO_WritePin
        LDR      r0,|L17.32|
        LDR      r0,[r0,#0]  ; sys_state
        MOVS     r1,#4
        ORRS     r0,r0,r1
        LDR      r1,|L17.32|
        STR      r0,[r1,#0]  ; sys_state
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L17.28|
        DCD      0x48000c00
|L17.32|
        DCD      sys_state

        AREA ||i.raspi_power_off||, CODE, READONLY, ALIGN=2

raspi_power_off PROC
        PUSH     {r4,lr}
        LDR      r0,|L18.104|
        LDR      r0,[r0,#0]  ; sys_state
        MOVS     r1,#2
        ANDS     r0,r0,r1
        CMP      r0,#0
        BNE      |L18.16|
|L18.14|
        POP      {r4,pc}
|L18.16|
        MOVS     r2,#0
        MOVS     r1,#2
        LDR      r0,|L18.108|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#0x64
        BL       systick_wait
        MOVS     r2,#0
        MOVS     r1,#1
        LSLS     r1,r1,#13
        LDR      r0,|L18.112|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#0x14
        BL       systick_wait
        MOVS     r2,#0
        MOVS     r1,#1
        LSLS     r1,r1,#14
        LDR      r0,|L18.112|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#0x14
        BL       systick_wait
        MOVS     r2,#0
        MOVS     r1,#1
        LSLS     r1,r1,#15
        LDR      r0,|L18.112|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#0x14
        BL       systick_wait
        LDR      r0,|L18.104|
        LDR      r0,[r0,#0]  ; sys_state
        MOVS     r1,#2
        BICS     r0,r0,r1
        LDR      r1,|L18.104|
        STR      r0,[r1,#0]  ; sys_state
        NOP      
        B        |L18.14|
        ENDP

        DCW      0x0000
|L18.104|
        DCD      sys_state
|L18.108|
        DCD      0x48001000
|L18.112|
        DCD      0x48000c00

        AREA ||i.raspi_power_on||, CODE, READONLY, ALIGN=2

raspi_power_on PROC
        PUSH     {r4,lr}
        LDR      r0,|L19.136|
        LDR      r0,[r0,#0]  ; sys_state
        MOVS     r1,#3
        LSLS     r1,r1,#8
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L19.34|
        LDR      r0,|L19.136|
        LDR      r0,[r0,#0]  ; sys_state
        MOV      r2,r1
        ANDS     r0,r0,r2
        MOV      r1,r0
        LDR      r0,|L19.140|
        BL       uart_printf
|L19.32|
        POP      {r4,pc}
|L19.34|
        MOVS     r2,#1
        LSLS     r1,r2,#15
        LDR      r0,|L19.144|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#0x14
        BL       systick_wait
        MOVS     r2,#1
        LSLS     r1,r2,#14
        LDR      r0,|L19.144|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#0x14
        BL       systick_wait
        MOVS     r2,#1
        LSLS     r1,r2,#13
        LDR      r0,|L19.144|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#0x14
        BL       systick_wait
        MOVS     r2,#0
        MOVS     r1,#2
        LDR      r0,|L19.148|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#0x32
        BL       systick_wait
        MOVS     r2,#1
        MOVS     r1,#2
        LDR      r0,|L19.148|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#0x14
        BL       systick_wait
        LDR      r0,|L19.136|
        LDR      r0,[r0,#0]  ; sys_state
        MOVS     r1,#2
        ORRS     r0,r0,r1
        LDR      r1,|L19.136|
        STR      r0,[r1,#0]  ; sys_state
        ADR      r0,|L19.152|
        BL       uart_putsraw
        NOP      
        B        |L19.32|
        ENDP

|L19.136|
        DCD      sys_state
|L19.140|
        DCD      ||.conststring||+0x4c
|L19.144|
        DCD      0x48000c00
|L19.148|
        DCD      0x48001000
|L19.152|
        DCB      "hal: raspi pwr ON\r\n",0

        AREA ||i.raspi_rapid_power_off||, CODE, READONLY, ALIGN=2

raspi_rapid_power_off PROC
        PUSH     {r4,lr}
        MOVS     r2,#0
        MOVS     r1,#2
        LDR      r0,|L20.64|
        BL       HAL_GPIO_WritePin
        MOVS     r2,#0
        MOVS     r1,#1
        LSLS     r1,r1,#13
        LDR      r0,|L20.68|
        BL       HAL_GPIO_WritePin
        MOVS     r2,#0
        MOVS     r1,#1
        LSLS     r1,r1,#14
        LDR      r0,|L20.68|
        BL       HAL_GPIO_WritePin
        MOVS     r2,#0
        MOVS     r1,#1
        LSLS     r1,r1,#15
        LDR      r0,|L20.68|
        BL       HAL_GPIO_WritePin
        LDR      r0,|L20.72|
        LDR      r0,[r0,#0]  ; sys_state
        MOVS     r1,#2
        BICS     r0,r0,r1
        LDR      r1,|L20.72|
        STR      r0,[r1,#0]  ; sys_state
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L20.64|
        DCD      0x48001000
|L20.68|
        DCD      0x48000c00
|L20.72|
        DCD      sys_state

        AREA ||i.systick_wait||, CODE, READONLY, ALIGN=2

systick_wait PROC
        MOVS     r1,#0
        LDR      r2,|L21.20|
        STR      r1,[r2,#0]  ; ms_counter
        NOP      
|L21.8|
        LDR      r1,|L21.20|
        LDR      r1,[r1,#0]  ; ms_counter
        CMP      r1,r0
        BCC      |L21.8|
        BX       lr
        ENDP

        DCW      0x0000
|L21.20|
        DCD      ms_counter

        AREA ||i.uart_char_is_available||, CODE, READONLY, ALIGN=2

uart_char_is_available PROC
        LDR      r0,|L22.16|
        LDR      r0,[r0,#0]  ; g_UARTHandle
        LDR      r0,[r0,#0x1c]
        MOVS     r1,#0x20
        ANDS     r0,r0,r1
        LSRS     r0,r0,#5
        BX       lr
        ENDP

        DCW      0x0000
|L22.16|
        DCD      g_UARTHandle

        AREA ||i.uart_flush||, CODE, READONLY, ALIGN=1

uart_flush PROC
        PUSH     {lr}
        B        |L23.8|
|L23.4|
        BL       uart_getchar_nb
|L23.8|
        BL       uart_char_is_available
        CMP      r0,#0
        BNE      |L23.4|
        POP      {pc}
        ENDP


        AREA ||i.uart_getchar||, CODE, READONLY, ALIGN=2

uart_getchar PROC
        NOP      
|L24.2|
        LDR      r0,|L24.44|
        LDR      r0,[r0,#0]  ; g_UARTHandle
        LDR      r0,[r0,#0x1c]
        MOVS     r1,#0x20
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L24.2|
        LDR      r0,|L24.44|
        LDR      r0,[r0,#0]  ; g_UARTHandle
        LDR      r0,[r0,#0x20]
        MOVS     r1,#0xf
        ORRS     r0,r0,r1
        LDR      r1,|L24.44|
        LDR      r1,[r1,#0]  ; g_UARTHandle
        STR      r0,[r1,#0x20]
        LDR      r0,|L24.44|
        LDR      r0,[r0,#0]  ; g_UARTHandle
        LDRH     r0,[r0,#0x24]
        UXTB     r0,r0
        BX       lr
        ENDP

        DCW      0x0000
|L24.44|
        DCD      g_UARTHandle

        AREA ||i.uart_getchar_nb||, CODE, READONLY, ALIGN=2

uart_getchar_nb PROC
        LDR      r0,|L25.28|
        LDR      r0,[r0,#0]  ; g_UARTHandle
        LDR      r0,[r0,#0x20]
        MOVS     r1,#0xf
        ORRS     r0,r0,r1
        LDR      r1,|L25.28|
        LDR      r1,[r1,#0]  ; g_UARTHandle
        STR      r0,[r1,#0x20]
        LDR      r0,|L25.28|
        LDR      r0,[r0,#0]  ; g_UARTHandle
        LDRH     r0,[r0,#0x24]
        UXTB     r0,r0
        BX       lr
        ENDP

        DCW      0x0000
|L25.28|
        DCD      g_UARTHandle

        AREA ||i.uart_printf||, CODE, READONLY, ALIGN=2

uart_printf PROC
        PUSH     {r0-r3}
        PUSH     {r3,lr}
        ADD      r0,sp,#0xc
        STR      r0,[sp,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#10
        LDR      r0,|L26.40|
        LDR      r3,[sp,#0]
        LDR      r2,[sp,#8]
        BL       vsnprintf
        LDR      r0,|L26.40|
        BL       uart_putsraw
        MOVS     r0,#0
        STR      r0,[sp,#0]
        ADD      sp,sp,#4
        POP      {r3}
        ADD      sp,sp,#0x10
        BX       r3
        ENDP

|L26.40|
        DCD      vsnprint_buffer

        AREA ||i.uart_putsraw||, CODE, READONLY, ALIGN=2

uart_putsraw PROC
        NOP      
|L27.2|
        NOP      
|L27.4|
        LDR      r1,|L27.36|
        LDR      r1,[r1,#0]  ; g_UARTHandle
        LDR      r1,[r1,#0x1c]
        MOVS     r2,#0x80
        ANDS     r1,r1,r2
        CMP      r1,#0
        BEQ      |L27.4|
        LDRB     r1,[r0,#0]
        LDR      r2,|L27.36|
        LDR      r2,[r2,#0]  ; g_UARTHandle
        STRH     r1,[r2,#0x28]
        LDRB     r2,[r0,#0]
        ADDS     r0,r0,#1
        CMP      r2,#0
        BNE      |L27.2|
        BX       lr
        ENDP

|L27.36|
        DCD      g_UARTHandle

        AREA ||i.zynq_power_off||, CODE, READONLY, ALIGN=2

zynq_power_off PROC
        PUSH     {r4,lr}
        BL       gpio_prot_power_start
        MOVS     r2,#0
        MOVS     r1,#0x80
        LDR      r0,|L28.104|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#4
        BL       systick_wait
        MOVS     r2,#0
        MOVS     r1,#0x40
        LDR      r0,|L28.104|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#0x32
        BL       systick_wait
        MOVS     r1,#0
        LDR      r0,|L28.108|
        BL       gpio_prot_power_rail_disable
        MOVS     r1,#0xa
        LDR      r0,|L28.112|
        BL       gpio_prot_power_rail_disable
        MOVS     r1,#0
        LDR      r0,|L28.116|
        BL       gpio_prot_power_rail_disable
        MOVS     r1,#0xa
        LDR      r0,|L28.120|
        BL       gpio_prot_power_rail_disable
        MOVS     r1,#2
        LDR      r0,|L28.124|
        BL       gpio_prot_power_rail_disable
        MOVS     r1,#2
        LDR      r0,|L28.128|
        BL       gpio_prot_power_rail_disable
        LDR      r0,|L28.132|
        LDR      r0,[r0,#0]  ; sys_state
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,|L28.132|
        STR      r0,[r1,#0]  ; sys_state
        BL       gpio_prot_power_end
        POP      {r4,pc}
        ENDP

|L28.104|
        DCD      0x48000c00
|L28.108|
        DCD      prot_rail_fpga_pl_1v8_io
|L28.112|
        DCD      prot_rail_fpga_ps_pl_io
|L28.116|
        DCD      prot_rail_1v5_ddr
|L28.120|
        DCD      prot_rail_vtt_ddr
|L28.124|
        DCD      prot_rail_1v05_zynq
|L28.128|
        DCD      prot_rail_fpga_aux_pll_adc
|L28.132|
        DCD      sys_state

        AREA ||i.zynq_power_on||, CODE, READONLY, ALIGN=2

zynq_power_on PROC
        PUSH     {r4,lr}
        LDR      r0,|L29.180|
        LDR      r0,[r0,#0]  ; sys_state
        MOVS     r1,#3
        LSLS     r1,r1,#8
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L29.34|
        LDR      r0,|L29.180|
        LDR      r0,[r0,#0]  ; sys_state
        MOV      r2,r1
        ANDS     r0,r0,r2
        MOV      r1,r0
        LDR      r0,|L29.184|
        BL       uart_printf
|L29.32|
        POP      {r4,pc}
|L29.34|
        BL       gpio_prot_power_start
        MOVS     r2,#0
        MOVS     r1,#0x40
        LDR      r0,|L29.188|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#0x1e
        BL       systick_wait
        LDR      r0,|L29.192|
        BL       arb_delay
        MOVS     r1,#0x64
        LDR      r0,|L29.196|
        BL       gpio_prot_power_rail_enable
        MOVS     r1,#0x14
        LDR      r0,|L29.200|
        BL       gpio_prot_power_rail_enable
        MOVS     r1,#0x14
        LDR      r0,|L29.204|
        BL       gpio_prot_power_rail_enable
        MOVS     r1,#0x32
        LDR      r0,|L29.208|
        BL       gpio_prot_power_rail_enable
        MOVS     r1,#0x32
        LDR      r0,|L29.212|
        BL       gpio_prot_power_rail_enable
        MOVS     r1,#0
        LDR      r0,|L29.216|
        BL       gpio_prot_power_rail_enable
        MOVS     r2,#1
        MOVS     r1,#0x80
        LDR      r0,|L29.188|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#0xa
        BL       systick_wait
        MOVS     r0,#0xc8
        BL       systick_wait
        LDR      r0,|L29.192|
        BL       arb_delay
        MOVS     r2,#1
        MOVS     r1,#0x40
        LDR      r0,|L29.188|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#0xa
        BL       systick_wait
        LDR      r0,|L29.180|
        LDR      r0,[r0,#0]  ; sys_state
        MOVS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,|L29.180|
        STR      r0,[r1,#0]  ; sys_state
        BL       gpio_prot_power_end
        ADR      r0,|L29.220|
        BL       uart_putsraw
        NOP      
        B        |L29.32|
        ENDP

        DCW      0x0000
|L29.180|
        DCD      sys_state
|L29.184|
        DCD      ||.conststring||+0x90
|L29.188|
        DCD      0x48000c00
|L29.192|
        DCD      0x00002710
|L29.196|
        DCD      prot_rail_1v05_zynq
|L29.200|
        DCD      prot_rail_fpga_aux_pll_adc
|L29.204|
        DCD      prot_rail_fpga_pl_1v8_io
|L29.208|
        DCD      prot_rail_fpga_ps_pl_io
|L29.212|
        DCD      prot_rail_1v5_ddr
|L29.216|
        DCD      prot_rail_vtt_ddr
|L29.220|
        DCB      "hal: zynq pwr ON\r\n",0
        DCB      0

        AREA ||i.zynq_rapid_power_off||, CODE, READONLY, ALIGN=2

zynq_rapid_power_off PROC
        PUSH     {r4,lr}
        MOVS     r2,#0
        MOVS     r1,#0x80
        LDR      r0,|L30.104|
        BL       HAL_GPIO_WritePin
        LDR      r0,|L30.108|
        BL       arb_delay
        MOVS     r2,#0
        MOVS     r1,#0x40
        LDR      r0,|L30.104|
        BL       HAL_GPIO_WritePin
        LDR      r0,|L30.112|
        BL       arb_delay
        MOVS     r1,#0
        LDR      r0,|L30.116|
        BL       gpio_prot_power_rail_disable
        MOVS     r1,#0
        LDR      r0,|L30.120|
        BL       gpio_prot_power_rail_disable
        MOVS     r1,#0
        LDR      r0,|L30.124|
        BL       gpio_prot_power_rail_disable
        MOVS     r1,#0
        LDR      r0,|L30.128|
        BL       gpio_prot_power_rail_disable
        LDR      r0,|L30.132|
        BL       arb_delay
        MOVS     r1,#0
        LDR      r0,|L30.136|
        BL       gpio_prot_power_rail_disable
        MOVS     r1,#0
        LDR      r0,|L30.140|
        BL       gpio_prot_power_rail_disable
        LDR      r0,|L30.144|
        LDR      r0,[r0,#0]  ; sys_state
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,|L30.144|
        STR      r0,[r1,#0]  ; sys_state
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L30.104|
        DCD      0x48000c00
|L30.108|
        DCD      0x00001388
|L30.112|
        DCD      0x00004e20
|L30.116|
        DCD      prot_rail_fpga_pl_1v8_io
|L30.120|
        DCD      prot_rail_fpga_ps_pl_io
|L30.124|
        DCD      prot_rail_1v5_ddr
|L30.128|
        DCD      prot_rail_vtt_ddr
|L30.132|
        DCD      0x00002710
|L30.136|
        DCD      prot_rail_1v05_zynq
|L30.140|
        DCD      prot_rail_fpga_aux_pll_adc
|L30.144|
        DCD      sys_state

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

g_UARTHandle
        %        112
g_ADCHandle
        %        76
sys_state
        %        32
vsnprint_buffer
        %        1024

        AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

        DCB      "hal: error: unable to shut PSU down - Raspi/Zynq still "
        DCB      "enabled (0x%08x)\r\n",0
        DCB      0
        DCB      0
        DCB      "hal: error: unable to power up Pi due to prohibit flags"
        DCB      " 0x%08x\r\n",0
        DCB      0
        DCB      0
        DCB      0
        DCB      "hal: error: unable to power up Zynq due to prohibit fla"
        DCB      "gs 0x%08x\r\n",0

        AREA ||.data||, DATA, ALIGN=3

prot_rail_1v05_zynq
        DCD      0x00000001
        DCD      0x48000000
        DCW      0x0100
        DCB      0x00,0x00
prot_rail_1v5_ddr
        DCD      0x00000002
        DCD      0x48000800
        DCW      0x0200
        DCB      0x00,0x00
prot_rail_fpga_aux_pll_adc
        DCD      0x00000003
        DCD      0x48000800
        DCW      0x2000
        DCB      0x00,0x00
prot_rail_fpga_pl_1v8_io
        DCD      0x00000004
        DCD      0x48001000
        DCW      0x0020
        DCB      0x00,0x00
prot_rail_fpga_ps_pl_io
        DCD      0x00000005
        DCD      0x48001000
        DCW      0x0040
        DCB      0x00,0x00
prot_rail_vtt_ddr
        DCD      0x00000006
        DCD      0x48000000
        DCW      0x1000
        DCB      0x00,0x00
ms_since_boot
        %        8
ms_counter
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "hal.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_hal_c_e329e39c____REV16|
#line 463 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.4.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___5_hal_c_e329e39c____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_hal_c_e329e39c____REVSH|
#line 478
|__asm___5_hal_c_e329e39c____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT SysTick_Handler [CODE]
        EXPORT adc_power_off [CODE]
        EXPORT adc_power_on [CODE]
        EXPORT arb_delay [CODE]
        EXPORT gpio_prot_power_end [CODE]
        EXPORT gpio_prot_power_rail_disable [CODE]
        EXPORT gpio_prot_power_rail_enable [CODE]
        EXPORT gpio_prot_power_start [CODE]
        EXPORT gpio_set_input [CODE]
        EXPORT gpio_set_output [CODE]
        EXPORT hal_init [CODE]
        EXPORT main_psu_power_off [CODE]
        EXPORT main_psu_power_on [CODE]
        EXPORT main_psu_power_on_if_off [CODE]
        EXPORT pll_power_off [CODE]
        EXPORT pll_power_on [CODE]
        EXPORT raspi_power_off [CODE]
        EXPORT raspi_power_on [CODE]
        EXPORT raspi_rapid_power_off [CODE]
        EXPORT systick_wait [CODE]
        EXPORT uart_char_is_available [CODE]
        EXPORT uart_flush [CODE]
        EXPORT uart_getchar [CODE]
        EXPORT uart_getchar_nb [CODE]
        EXPORT uart_printf [CODE]
        EXPORT uart_putsraw [CODE]
        EXPORT zynq_power_off [CODE]
        EXPORT zynq_power_on [CODE]
        EXPORT zynq_rapid_power_off [CODE]
        EXPORT sys_state [DATA,SIZE=32]
        EXPORT vsnprint_buffer [DATA,SIZE=1024]
        EXPORT prot_rail_1v05_zynq [DATA,SIZE=12]
        EXPORT prot_rail_1v5_ddr [DATA,SIZE=12]
        EXPORT prot_rail_fpga_aux_pll_adc [DATA,SIZE=12]
        EXPORT prot_rail_fpga_pl_1v8_io [DATA,SIZE=12]
        EXPORT prot_rail_fpga_ps_pl_io [DATA,SIZE=12]
        EXPORT prot_rail_vtt_ddr [DATA,SIZE=12]
        EXPORT ms_since_boot [DATA,SIZE=8]
        EXPORT ms_counter [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT HAL_GPIO_WritePin [CODE]
        IMPORT HAL_ADC_PollForConversion [CODE]
        IMPORT HAL_ADC_GetValue [CODE]
        IMPORT HAL_ADC_Start [CODE]
        IMPORT vsnprintf [CODE]
        IMPORT HAL_GPIO_Init [CODE]
        IMPORT SystemInit [CODE]
        IMPORT SystemCoreClockUpdate [CODE]
        IMPORT HAL_RCC_OscConfig [CODE]
        IMPORT HAL_RCC_ClockConfig [CODE]
        IMPORT HAL_RCCEx_PeriphCLKConfig [CODE]
        IMPORT HAL_UART_Init [CODE]
        IMPORT HAL_ADC_Init [CODE]
        IMPORT HAL_ADC_ConfigChannel [CODE]
        IMPORT __aeabi_uidivmod [CODE]
        IMPORT zynq_spi_init [CODE]
        IMPORT SystemCoreClock [DATA]

        KEEP __NVIC_SetPriority
        KEEP g_UARTHandle
        KEEP g_ADCHandle

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
