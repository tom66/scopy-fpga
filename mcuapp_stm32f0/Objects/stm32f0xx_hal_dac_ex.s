; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -o.\objects\stm32f0xx_hal_dac_ex.o --depend=.\objects\stm32f0xx_hal_dac_ex.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE\Device\STM32F071VBTx -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0 -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32F0xx\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc\Legacy -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F071xB --omf_browse=.\objects\stm32f0xx_hal_dac_ex.crf C:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Src\stm32f0xx_hal_dac_ex.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.DAC_DMAConvCpltCh1||, CODE, READONLY, ALIGN=1

DAC_DMAConvCpltCh1 PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r5,[r4,#0x24]
        MOV      r0,r5
        BL       HAL_DAC_ConvCpltCallbackCh1
        MOVS     r0,#1
        STRB     r0,[r5,#4]
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.DAC_DMAConvCpltCh2||, CODE, READONLY, ALIGN=1

DAC_DMAConvCpltCh2 PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r5,[r4,#0x24]
        MOV      r0,r5
        BL       HAL_DACEx_ConvCpltCallbackCh2
        MOVS     r0,#1
        STRB     r0,[r5,#4]
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.DAC_DMAErrorCh1||, CODE, READONLY, ALIGN=1

DAC_DMAErrorCh1 PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        LDR      r0,[r4,#0x10]
        MOVS     r1,#4
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x10]
        MOV      r0,r4
        BL       HAL_DAC_ErrorCallbackCh1
        MOVS     r0,#1
        STRB     r0,[r4,#4]
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.DAC_DMAErrorCh2||, CODE, READONLY, ALIGN=1

DAC_DMAErrorCh2 PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        LDR      r0,[r4,#0x10]
        MOVS     r1,#4
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x10]
        MOV      r0,r4
        BL       HAL_DACEx_ErrorCallbackCh2
        MOVS     r0,#1
        STRB     r0,[r4,#4]
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.DAC_DMAHalfConvCpltCh1||, CODE, READONLY, ALIGN=1

DAC_DMAHalfConvCpltCh1 PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r5,[r4,#0x24]
        MOV      r0,r5
        BL       HAL_DAC_ConvHalfCpltCallbackCh1
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.DAC_DMAHalfConvCpltCh2||, CODE, READONLY, ALIGN=1

DAC_DMAHalfConvCpltCh2 PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r5,[r4,#0x24]
        MOV      r0,r5
        BL       HAL_DACEx_ConvHalfCpltCallbackCh2
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.HAL_DACEx_ConvCpltCallbackCh2||, CODE, READONLY, ALIGN=1

HAL_DACEx_ConvCpltCallbackCh2 PROC
        BX       lr
        ENDP


        AREA ||i.HAL_DACEx_ConvHalfCpltCallbackCh2||, CODE, READONLY, ALIGN=1

HAL_DACEx_ConvHalfCpltCallbackCh2 PROC
        BX       lr
        ENDP


        AREA ||i.HAL_DACEx_DMAUnderrunCallbackCh2||, CODE, READONLY, ALIGN=1

HAL_DACEx_DMAUnderrunCallbackCh2 PROC
        BX       lr
        ENDP


        AREA ||i.HAL_DACEx_DualGetValue||, CODE, READONLY, ALIGN=1

HAL_DACEx_DualGetValue PROC
        MOV      r1,r0
        MOVS     r0,#0
        LDR      r2,[r1,#0]
        LDR      r2,[r2,#0x2c]
        ORRS     r0,r0,r2
        LDR      r2,[r1,#0]
        LDR      r2,[r2,#0x30]
        LSLS     r2,r2,#16
        ORRS     r0,r0,r2
        BX       lr
        ENDP


        AREA ||i.HAL_DACEx_DualSetValue||, CODE, READONLY, ALIGN=1

HAL_DACEx_DualSetValue PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r6,#0
        MOVS     r5,#0
        CMP      r1,#8
        BNE      |L11.20|
        LSLS     r0,r3,#8
        ORRS     r0,r0,r2
        MOV      r6,r0
        B        |L11.26|
|L11.20|
        LSLS     r0,r3,#16
        ORRS     r0,r0,r2
        MOV      r6,r0
|L11.26|
        LDR      r5,[r4,#0]
        MOV      r0,r1
        ADDS     r0,r0,#0x20
        ADDS     r5,r0,r5
        STR      r6,[r5,#0]
        MOVS     r0,#0
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.HAL_DACEx_ErrorCallbackCh2||, CODE, READONLY, ALIGN=1

HAL_DACEx_ErrorCallbackCh2 PROC
        BX       lr
        ENDP


        AREA ||i.HAL_DACEx_NoiseWaveGenerate||, CODE, READONLY, ALIGN=1

HAL_DACEx_NoiseWaveGenerate PROC
        PUSH     {r4,lr}
        MOV      r3,r0
        NOP      
        LDRB     r0,[r3,#5]
        CMP      r0,#1
        BNE      |L13.16|
        MOVS     r0,#2
|L13.14|
        POP      {r4,pc}
|L13.16|
        MOVS     r0,#1
        STRB     r0,[r3,#5]
        NOP      
        MOVS     r0,#2
        STRB     r0,[r3,#4]
        LDR      r0,[r3,#0]
        LDR      r0,[r0,#0]
        MOVS     r4,#0x3f
        LSLS     r4,r4,#6
        LSLS     r4,r4,r1
        BICS     r0,r0,r4
        MOVS     r4,#0x40
        ORRS     r4,r4,r2
        LSLS     r4,r4,r1
        ORRS     r0,r0,r4
        LDR      r4,[r3,#0]
        STR      r0,[r4,#0]
        MOVS     r0,#1
        STRB     r0,[r3,#4]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r3,#5]
        NOP      
        NOP      
        B        |L13.14|
        ENDP


        AREA ||i.HAL_DACEx_TriangleWaveGenerate||, CODE, READONLY, ALIGN=1

HAL_DACEx_TriangleWaveGenerate PROC
        PUSH     {r4,lr}
        MOV      r3,r0
        NOP      
        LDRB     r0,[r3,#5]
        CMP      r0,#1
        BNE      |L14.16|
        MOVS     r0,#2
|L14.14|
        POP      {r4,pc}
|L14.16|
        MOVS     r0,#1
        STRB     r0,[r3,#5]
        NOP      
        MOVS     r0,#2
        STRB     r0,[r3,#4]
        LDR      r0,[r3,#0]
        LDR      r0,[r0,#0]
        MOVS     r4,#0x3f
        LSLS     r4,r4,#6
        LSLS     r4,r4,r1
        BICS     r0,r0,r4
        MOVS     r4,#0x80
        ORRS     r4,r4,r2
        LSLS     r4,r4,r1
        ORRS     r0,r0,r4
        LDR      r4,[r3,#0]
        STR      r0,[r4,#0]
        MOVS     r0,#1
        STRB     r0,[r3,#4]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r3,#5]
        NOP      
        NOP      
        B        |L14.14|
        ENDP


        AREA ||i.HAL_DAC_ConfigChannel||, CODE, READONLY, ALIGN=2

HAL_DAC_ConfigChannel PROC
        PUSH     {r4-r6,lr}
        MOV      r3,r0
        MOVS     r4,#0
        MOVS     r5,#0
        NOP      
        LDRB     r0,[r3,#5]
        CMP      r0,#1
        BNE      |L15.20|
        MOVS     r0,#2
|L15.18|
        POP      {r4-r6,pc}
|L15.20|
        MOVS     r0,#1
        STRB     r0,[r3,#5]
        NOP      
        MOVS     r0,#2
        STRB     r0,[r3,#4]
        LDR      r0,[r3,#0]
        LDR      r4,[r0,#0]
        LDR      r0,|L15.80|
        LSLS     r0,r0,r2
        MOV      r6,r4
        BICS     r6,r6,r0
        MOV      r4,r6
        LDR      r6,[r1,#4]
        LDR      r0,[r1,#0]
        ORRS     r0,r0,r6
        MOV      r5,r0
        MOV      r0,r5
        LSLS     r0,r0,r2
        ORRS     r4,r4,r0
        LDR      r0,[r3,#0]
        STR      r4,[r0,#0]
        MOVS     r0,#1
        STRB     r0,[r3,#4]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r3,#5]
        NOP      
        NOP      
        B        |L15.18|
        ENDP

        DCW      0x0000
|L15.80|
        DCD      0x00000ffe

        AREA ||i.HAL_DAC_GetValue||, CODE, READONLY, ALIGN=1

HAL_DAC_GetValue PROC
        MOV      r2,r0
        CMP      r1,#0
        BNE      |L16.12|
        LDR      r0,[r2,#0]
        LDR      r0,[r0,#0x2c]
|L16.10|
        BX       lr
|L16.12|
        LDR      r0,[r2,#0]
        LDR      r0,[r0,#0x30]
        B        |L16.10|
        ENDP


        AREA ||i.HAL_DAC_IRQHandler||, CODE, READONLY, ALIGN=1

HAL_DAC_IRQHandler PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#13
        ANDS     r0,r0,r1
        CMP      r0,r1
        BNE      |L17.66|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        ANDS     r0,r0,r1
        CMP      r0,r1
        BNE      |L17.66|
        MOVS     r0,#4
        STRB     r0,[r4,#4]
        LDR      r0,[r4,#0x10]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x10]
        LSLS     r0,r1,#13
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#12
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       HAL_DAC_DMAUnderrunCallbackCh1
|L17.66|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#29
        ANDS     r0,r0,r1
        CMP      r0,r1
        BNE      |L17.128|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        ANDS     r0,r0,r1
        CMP      r0,r1
        BNE      |L17.128|
        MOVS     r0,#4
        STRB     r0,[r4,#4]
        LDR      r0,[r4,#0x10]
        MOVS     r1,#2
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x10]
        LSLS     r0,r1,#28
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#28
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       HAL_DACEx_DMAUnderrunCallbackCh2
|L17.128|
        POP      {r4,pc}
        ENDP


        AREA ||i.HAL_DAC_Start||, CODE, READONLY, ALIGN=1

HAL_DAC_Start PROC
        MOV      r2,r0
        NOP      
        LDRB     r0,[r2,#5]
        CMP      r0,#1
        BNE      |L18.14|
        MOVS     r0,#2
|L18.12|
        BX       lr
|L18.14|
        MOVS     r0,#1
        STRB     r0,[r2,#5]
        NOP      
        MOVS     r0,#2
        STRB     r0,[r2,#4]
        LDR      r0,[r2,#0]
        LDR      r0,[r0,#0]
        MOVS     r3,#1
        LSLS     r3,r3,r1
        ORRS     r0,r0,r3
        LDR      r3,[r2,#0]
        STR      r0,[r3,#0]
        CMP      r1,#0
        BNE      |L18.68|
        LDR      r0,[r2,#0]
        LDR      r0,[r0,#0]
        MOVS     r3,#0x3c
        ANDS     r0,r0,r3
        CMP      r0,#0x3c
        BNE      |L18.94|
        LDR      r0,[r2,#0]
        LDR      r0,[r0,#4]
        MOVS     r3,#1
        ORRS     r0,r0,r3
        LDR      r3,[r2,#0]
        STR      r0,[r3,#4]
        B        |L18.94|
|L18.68|
        LDR      r0,[r2,#0]
        LDR      r0,[r0,#0]
        MOVS     r3,#0xf
        LSLS     r3,r3,#18
        ANDS     r0,r0,r3
        CMP      r0,r3
        BNE      |L18.94|
        LDR      r0,[r2,#0]
        LDR      r0,[r0,#4]
        MOVS     r3,#2
        ORRS     r0,r0,r3
        LDR      r3,[r2,#0]
        STR      r0,[r3,#4]
|L18.94|
        MOVS     r0,#1
        STRB     r0,[r2,#4]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r2,#5]
        NOP      
        NOP      
        B        |L18.12|
        ENDP


        AREA ||i.HAL_DAC_Start_DMA||, CODE, READONLY, ALIGN=2

HAL_DAC_Start_DMA PROC
        PUSH     {r0-r7,lr}
        SUB      sp,sp,#4
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        LDR      r7,[sp,#0x28]
        MOVS     r0,#0
        STR      r0,[sp,#0]
        NOP      
        LDRB     r0,[r4,#5]
        CMP      r0,#1
        BNE      |L19.30|
        MOVS     r0,#2
|L19.26|
        ADD      sp,sp,#0x14
        POP      {r4-r7,pc}
|L19.30|
        MOVS     r0,#1
        STRB     r0,[r4,#5]
        NOP      
        MOVS     r0,#2
        STRB     r0,[r4,#4]
        CMP      r5,#0
        BNE      |L19.118|
        LDR      r0,|L19.276|
        LDR      r1,[r4,#8]
        STR      r0,[r1,#0x28]
        LDR      r0,|L19.280|
        LDR      r1,[r4,#8]
        STR      r0,[r1,#0x2c]
        LDR      r0,|L19.284|
        LDR      r1,[r4,#8]
        STR      r0,[r1,#0x30]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#12
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        CMP      r7,#0
        BEQ      |L19.90|
        CMP      r7,#4
        BEQ      |L19.98|
        CMP      r7,#8
        BNE      |L19.114|
        B        |L19.106|
|L19.90|
        LDR      r0,[r4,#0]
        ADDS     r0,r0,#8
        STR      r0,[sp,#0]
        B        |L19.116|
|L19.98|
        LDR      r0,[r4,#0]
        ADDS     r0,r0,#0xc
        STR      r0,[sp,#0]
        B        |L19.116|
|L19.106|
        LDR      r0,[r4,#0]
        ADDS     r0,r0,#0x10
        STR      r0,[sp,#0]
        B        |L19.116|
|L19.114|
        NOP      
|L19.116|
        B        |L19.192|
|L19.118|
        LDR      r0,|L19.288|
        LDR      r1,[r4,#0xc]
        STR      r0,[r1,#0x28]
        LDR      r0,|L19.292|
        LDR      r1,[r4,#0xc]
        STR      r0,[r1,#0x2c]
        LDR      r0,|L19.296|
        LDR      r1,[r4,#0xc]
        STR      r0,[r1,#0x30]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#28
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        CMP      r7,#0
        BEQ      |L19.164|
        CMP      r7,#4
        BEQ      |L19.172|
        CMP      r7,#8
        BNE      |L19.188|
        B        |L19.180|
|L19.164|
        LDR      r0,[r4,#0]
        ADDS     r0,r0,#0x14
        STR      r0,[sp,#0]
        B        |L19.190|
|L19.172|
        LDR      r0,[r4,#0]
        ADDS     r0,r0,#0x18
        STR      r0,[sp,#0]
        B        |L19.190|
|L19.180|
        LDR      r0,[r4,#0]
        ADDS     r0,r0,#0x1c
        STR      r0,[sp,#0]
        B        |L19.190|
|L19.188|
        NOP      
|L19.190|
        NOP      
|L19.192|
        CMP      r5,#0
        BNE      |L19.224|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#13
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#8]
        MOV      r1,r6
        LDR      r3,[sp,#0x10]
        LDR      r2,[sp,#0]
        BL       HAL_DMA_Start_IT
        B        |L19.250|
|L19.224|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#29
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0xc]
        MOV      r1,r6
        LDR      r3,[sp,#0x10]
        LDR      r2,[sp,#0]
        BL       HAL_DMA_Start_IT
|L19.250|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        LSLS     r1,r1,r5
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#5]
        NOP      
        NOP      
        B        |L19.26|
        ENDP

|L19.276|
        DCD      DAC_DMAConvCpltCh1
|L19.280|
        DCD      DAC_DMAHalfConvCpltCh1
|L19.284|
        DCD      DAC_DMAErrorCh1
|L19.288|
        DCD      DAC_DMAConvCpltCh2
|L19.292|
        DCD      DAC_DMAHalfConvCpltCh2
|L19.296|
        DCD      DAC_DMAErrorCh2

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F0xx_DFP\\2.0.0\\Drivers\\STM32F0xx_HAL_Driver\\Src\\stm32f0xx_hal_dac_ex.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___22_stm32f0xx_hal_dac_ex_c_554514d1____REV16|
#line 463 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.4.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___22_stm32f0xx_hal_dac_ex_c_554514d1____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___22_stm32f0xx_hal_dac_ex_c_554514d1____REVSH|
#line 478
|__asm___22_stm32f0xx_hal_dac_ex_c_554514d1____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT DAC_DMAConvCpltCh2 [CODE]
        EXPORT DAC_DMAErrorCh2 [CODE]
        EXPORT DAC_DMAHalfConvCpltCh2 [CODE]
        EXPORT HAL_DACEx_ConvCpltCallbackCh2 [CODE,WEAK]
        EXPORT HAL_DACEx_ConvHalfCpltCallbackCh2 [CODE,WEAK]
        EXPORT HAL_DACEx_DMAUnderrunCallbackCh2 [CODE,WEAK]
        EXPORT HAL_DACEx_DualGetValue [CODE]
        EXPORT HAL_DACEx_DualSetValue [CODE]
        EXPORT HAL_DACEx_ErrorCallbackCh2 [CODE,WEAK]
        EXPORT HAL_DACEx_NoiseWaveGenerate [CODE]
        EXPORT HAL_DACEx_TriangleWaveGenerate [CODE]
        EXPORT HAL_DAC_ConfigChannel [CODE]
        EXPORT HAL_DAC_GetValue [CODE]
        EXPORT HAL_DAC_IRQHandler [CODE]
        EXPORT HAL_DAC_Start [CODE]
        EXPORT HAL_DAC_Start_DMA [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT HAL_DAC_ErrorCallbackCh1 [CODE]
        IMPORT HAL_DAC_ConvHalfCpltCallbackCh1 [CODE]
        IMPORT HAL_DAC_ConvCpltCallbackCh1 [CODE]
        IMPORT HAL_DMA_Start_IT [CODE]
        IMPORT HAL_DAC_DMAUnderrunCallbackCh1 [CODE]

        KEEP DAC_DMAConvCpltCh1
        KEEP DAC_DMAErrorCh1
        KEEP DAC_DMAHalfConvCpltCh1

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
