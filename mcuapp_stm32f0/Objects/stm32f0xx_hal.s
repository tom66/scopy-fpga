; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -o.\objects\stm32f0xx_hal.o --depend=.\objects\stm32f0xx_hal.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE\Device\STM32F071VBTx -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0 -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32F0xx\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc\Legacy -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F071xB --omf_browse=.\objects\stm32f0xx_hal.crf C:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Src\stm32f0xx_hal.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.HAL_DBGMCU_DisableDBGStandbyMode||, CODE, READONLY, ALIGN=2

HAL_DBGMCU_DisableDBGStandbyMode PROC
        LDR      r0,|L1.16|
        LDR      r0,[r0,#4]
        MOVS     r1,#4
        BICS     r0,r0,r1
        LDR      r1,|L1.16|
        STR      r0,[r1,#4]
        BX       lr
        ENDP

        DCW      0x0000
|L1.16|
        DCD      0x40015800

        AREA ||i.HAL_DBGMCU_DisableDBGStopMode||, CODE, READONLY, ALIGN=2

HAL_DBGMCU_DisableDBGStopMode PROC
        LDR      r0,|L2.16|
        LDR      r0,[r0,#4]
        MOVS     r1,#2
        BICS     r0,r0,r1
        LDR      r1,|L2.16|
        STR      r0,[r1,#4]
        BX       lr
        ENDP

        DCW      0x0000
|L2.16|
        DCD      0x40015800

        AREA ||i.HAL_DBGMCU_EnableDBGStandbyMode||, CODE, READONLY, ALIGN=2

HAL_DBGMCU_EnableDBGStandbyMode PROC
        LDR      r0,|L3.16|
        LDR      r0,[r0,#4]
        MOVS     r1,#4
        ORRS     r0,r0,r1
        LDR      r1,|L3.16|
        STR      r0,[r1,#4]
        BX       lr
        ENDP

        DCW      0x0000
|L3.16|
        DCD      0x40015800

        AREA ||i.HAL_DBGMCU_EnableDBGStopMode||, CODE, READONLY, ALIGN=2

HAL_DBGMCU_EnableDBGStopMode PROC
        LDR      r0,|L4.16|
        LDR      r0,[r0,#4]
        MOVS     r1,#2
        ORRS     r0,r0,r1
        LDR      r1,|L4.16|
        STR      r0,[r1,#4]
        BX       lr
        ENDP

        DCW      0x0000
|L4.16|
        DCD      0x40015800

        AREA ||i.HAL_DeInit||, CODE, READONLY, ALIGN=2

HAL_DeInit PROC
        PUSH     {r4,lr}
        MOVS     r0,#0
        MVNS     r0,r0
        LDR      r1,|L5.40|
        STR      r0,[r1,#0x10]
        MOVS     r0,#0
        STR      r0,[r1,#0x10]
        SUBS     r0,r0,#1
        STR      r0,[r1,#0xc]
        MOVS     r0,#0
        STR      r0,[r1,#0xc]
        SUBS     r0,r0,#1
        STR      r0,[r1,#0x28]
        MOVS     r0,#0
        STR      r0,[r1,#0x28]
        BL       HAL_MspDeInit
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L5.40|
        DCD      0x40021000

        AREA ||i.HAL_Delay||, CODE, READONLY, ALIGN=1

HAL_Delay PROC
        PUSH     {r0,r4,r5,lr}
        BL       HAL_GetTick
        MOV      r5,r0
        LDR      r4,[sp,#0]
        ADDS     r0,r4,#1
        CMP      r0,#0
        BEQ      |L6.18|
        ADDS     r4,r4,#1
|L6.18|
        NOP      
|L6.20|
        BL       HAL_GetTick
        SUBS     r0,r0,r5
        CMP      r0,r4
        BCC      |L6.20|
        POP      {r3-r5,pc}
        ENDP


        AREA ||i.HAL_GetDEVID||, CODE, READONLY, ALIGN=2

HAL_GetDEVID PROC
        LDR      r0,|L7.12|
        LDR      r0,[r0,#0]
        LSLS     r0,r0,#20
        LSRS     r0,r0,#20
        BX       lr
        ENDP

        DCW      0x0000
|L7.12|
        DCD      0x40015800

        AREA ||i.HAL_GetHalVersion||, CODE, READONLY, ALIGN=2

HAL_GetHalVersion PROC
        LDR      r0,|L8.4|
        BX       lr
        ENDP

|L8.4|
        DCD      0x01070000

        AREA ||i.HAL_GetREVID||, CODE, READONLY, ALIGN=2

HAL_GetREVID PROC
        LDR      r0,|L9.8|
        LDR      r0,[r0,#0]
        LSRS     r0,r0,#16
        BX       lr
        ENDP

|L9.8|
        DCD      0x40015800

        AREA ||i.HAL_GetTick||, CODE, READONLY, ALIGN=2

HAL_GetTick PROC
        LDR      r0,|L10.8|
        LDR      r0,[r0,#0]  ; uwTick
        BX       lr
        ENDP

        DCW      0x0000
|L10.8|
        DCD      uwTick

        AREA ||i.HAL_GetUIDw0||, CODE, READONLY, ALIGN=2

HAL_GetUIDw0 PROC
        LDR      r0,|L11.8|
        LDR      r0,[r0,#0x2c]
        BX       lr
        ENDP

        DCW      0x0000
|L11.8|
        DCD      0x1ffff780

        AREA ||i.HAL_GetUIDw1||, CODE, READONLY, ALIGN=2

HAL_GetUIDw1 PROC
        LDR      r0,|L12.8|
        LDR      r0,[r0,#0x30]
        BX       lr
        ENDP

        DCW      0x0000
|L12.8|
        DCD      0x1ffff780

        AREA ||i.HAL_GetUIDw2||, CODE, READONLY, ALIGN=2

HAL_GetUIDw2 PROC
        LDR      r0,|L13.8|
        LDR      r0,[r0,#0x34]
        BX       lr
        ENDP

        DCW      0x0000
|L13.8|
        DCD      0x1ffff780

        AREA ||i.HAL_IncTick||, CODE, READONLY, ALIGN=2

HAL_IncTick PROC
        LDR      r0,|L14.12|
        LDR      r0,[r0,#0]  ; uwTick
        ADDS     r0,r0,#1
        LDR      r1,|L14.12|
        STR      r0,[r1,#0]  ; uwTick
        BX       lr
        ENDP

|L14.12|
        DCD      uwTick

        AREA ||i.HAL_Init||, CODE, READONLY, ALIGN=2

HAL_Init PROC
        PUSH     {r4,lr}
        LDR      r0,|L15.28|
        LDR      r0,[r0,#0]
        MOVS     r1,#0x10
        ORRS     r0,r0,r1
        LDR      r1,|L15.28|
        STR      r0,[r1,#0]
        MOVS     r0,#3
        BL       HAL_InitTick
        BL       HAL_MspInit
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP

|L15.28|
        DCD      0x40022000

        AREA ||i.HAL_InitTick||, CODE, READONLY, ALIGN=1

HAL_InitTick PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        BL       HAL_RCC_GetHCLKFreq
        MOV      r6,r0
        MOVS     r1,#0x7d
        LSLS     r1,r1,#3
        BL       __aeabi_uidivmod
        MOV      r5,r0
        BL       HAL_SYSTICK_Config
        MOVS     r2,#0
        MOV      r1,r4
        SUBS     r0,r2,#1
        BL       HAL_NVIC_SetPriority
        MOVS     r0,#0
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.HAL_MspDeInit||, CODE, READONLY, ALIGN=1

HAL_MspDeInit PROC
        BX       lr
        ENDP


        AREA ||i.HAL_MspInit||, CODE, READONLY, ALIGN=1

HAL_MspInit PROC
        BX       lr
        ENDP


        AREA ||i.HAL_ResumeTick||, CODE, READONLY, ALIGN=2

HAL_ResumeTick PROC
        LDR      r0,|L19.16|
        LDR      r0,[r0,#0x10]
        MOVS     r1,#2
        ORRS     r0,r0,r1
        LDR      r1,|L19.16|
        STR      r0,[r1,#0x10]
        BX       lr
        ENDP

        DCW      0x0000
|L19.16|
        DCD      0xe000e000

        AREA ||i.HAL_SuspendTick||, CODE, READONLY, ALIGN=2

HAL_SuspendTick PROC
        LDR      r0,|L20.16|
        LDR      r0,[r0,#0x10]
        MOVS     r1,#2
        BICS     r0,r0,r1
        LDR      r1,|L20.16|
        STR      r0,[r1,#0x10]
        BX       lr
        ENDP

        DCW      0x0000
|L20.16|
        DCD      0xe000e000

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

uwTick
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F0xx_DFP\\2.0.0\\Drivers\\STM32F0xx_HAL_Driver\\Src\\stm32f0xx_hal.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_stm32f0xx_hal_c_HAL_Init____REV16|
#line 463 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.4.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___15_stm32f0xx_hal_c_HAL_Init____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_stm32f0xx_hal_c_HAL_Init____REVSH|
#line 478
|__asm___15_stm32f0xx_hal_c_HAL_Init____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT HAL_DBGMCU_DisableDBGStandbyMode [CODE]
        EXPORT HAL_DBGMCU_DisableDBGStopMode [CODE]
        EXPORT HAL_DBGMCU_EnableDBGStandbyMode [CODE]
        EXPORT HAL_DBGMCU_EnableDBGStopMode [CODE]
        EXPORT HAL_DeInit [CODE]
        EXPORT HAL_Delay [CODE,WEAK]
        EXPORT HAL_GetDEVID [CODE]
        EXPORT HAL_GetHalVersion [CODE]
        EXPORT HAL_GetREVID [CODE]
        EXPORT HAL_GetTick [CODE,WEAK]
        EXPORT HAL_GetUIDw0 [CODE]
        EXPORT HAL_GetUIDw1 [CODE]
        EXPORT HAL_GetUIDw2 [CODE]
        EXPORT HAL_IncTick [CODE,WEAK]
        EXPORT HAL_Init [CODE]
        EXPORT HAL_InitTick [CODE,WEAK]
        EXPORT HAL_MspDeInit [CODE,WEAK]
        EXPORT HAL_MspInit [CODE,WEAK]
        EXPORT HAL_ResumeTick [CODE,WEAK]
        EXPORT HAL_SuspendTick [CODE,WEAK]
        EXPORT uwTick [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT HAL_RCC_GetHCLKFreq [CODE]
        IMPORT __aeabi_uidivmod [CODE]
        IMPORT HAL_SYSTICK_Config [CODE]
        IMPORT HAL_NVIC_SetPriority [CODE]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
