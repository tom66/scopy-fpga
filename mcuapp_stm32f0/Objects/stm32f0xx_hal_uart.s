; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -o.\objects\stm32f0xx_hal_uart.o --depend=.\objects\stm32f0xx_hal_uart.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE\Device\STM32F071VBTx -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0 -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32F0xx\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc\Legacy -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F071xB --omf_browse=.\objects\stm32f0xx_hal_uart.crf C:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Src\stm32f0xx_hal_uart.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.HAL_HalfDuplex_EnableReceiver||, CODE, READONLY, ALIGN=1

HAL_HalfDuplex_EnableReceiver PROC
        MOV      r1,r0
        NOP      
        MOVS     r0,#0x68
        LDRB     r0,[r0,r1]
        CMP      r0,#1
        BNE      |L1.16|
        MOVS     r0,#2
|L1.14|
        BX       lr
|L1.16|
        MOVS     r2,#1
        MOVS     r0,#0x68
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r2,#0x24
        MOVS     r0,#0x69
        STRB     r2,[r0,r1]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        MOVS     r2,#0xc
        BICS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        MOVS     r2,#4
        ORRS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        MOVS     r2,#0x20
        MOVS     r0,#0x69
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r2,#0
        MOVS     r0,#0x68
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r0,#0
        B        |L1.14|
        ENDP


        AREA ||i.HAL_HalfDuplex_EnableTransmitter||, CODE, READONLY, ALIGN=1

HAL_HalfDuplex_EnableTransmitter PROC
        MOV      r1,r0
        NOP      
        MOVS     r0,#0x68
        LDRB     r0,[r0,r1]
        CMP      r0,#1
        BNE      |L2.16|
        MOVS     r0,#2
|L2.14|
        BX       lr
|L2.16|
        MOVS     r2,#1
        MOVS     r0,#0x68
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r2,#0x24
        MOVS     r0,#0x69
        STRB     r2,[r0,r1]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        MOVS     r2,#0xc
        BICS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        MOVS     r2,#8
        ORRS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        MOVS     r2,#0x20
        MOVS     r0,#0x69
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r2,#0
        MOVS     r0,#0x68
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r0,#0
        B        |L2.14|
        ENDP


        AREA ||i.HAL_HalfDuplex_Init||, CODE, READONLY, ALIGN=1

HAL_HalfDuplex_Init PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CMP      r4,#0
        BNE      |L3.12|
        MOVS     r0,#1
|L3.10|
        POP      {r4,pc}
|L3.12|
        MOVS     r0,#0x69
        LDRB     r0,[r0,r4]
        CMP      r0,#0
        BNE      |L3.32|
        MOVS     r1,#0
        MOVS     r0,#0x68
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_UART_MspInit
|L3.32|
        MOVS     r1,#0x24
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_SetConfig
        CMP      r0,#1
        BNE      |L3.62|
        B        |L3.10|
|L3.62|
        LDR      r0,[r4,#0x24]
        CMP      r0,#0
        BEQ      |L3.74|
        MOV      r0,r4
        BL       UART_AdvFeatureConfig
|L3.74|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        MOVS     r1,#9
        LSLS     r1,r1,#11
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x22
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#8
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_CheckIdleState
        B        |L3.10|
        ENDP


        AREA ||i.HAL_MultiProcessor_DisableMuteMode||, CODE, READONLY, ALIGN=1

HAL_MultiProcessor_DisableMuteMode PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        NOP      
        MOVS     r0,#0x68
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L4.18|
        MOVS     r0,#2
|L4.16|
        POP      {r4,pc}
|L4.18|
        MOVS     r1,#1
        MOVS     r0,#0x68
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r1,#0x24
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#13
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOVS     r1,#0x20
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       UART_CheckIdleState
        B        |L4.16|
        ENDP


        AREA ||i.HAL_MultiProcessor_EnableMuteMode||, CODE, READONLY, ALIGN=1

HAL_MultiProcessor_EnableMuteMode PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        NOP      
        MOVS     r0,#0x68
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L5.18|
        MOVS     r0,#2
|L5.16|
        POP      {r4,pc}
|L5.18|
        MOVS     r1,#1
        MOVS     r0,#0x68
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r1,#0x24
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#13
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOVS     r1,#0x20
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       UART_CheckIdleState
        B        |L5.16|
        ENDP


        AREA ||i.HAL_MultiProcessor_EnterMuteMode||, CODE, READONLY, ALIGN=1

HAL_MultiProcessor_EnterMuteMode PROC
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#0x18]
        MOVS     r2,#4
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#0x18]
        BX       lr
        ENDP


        AREA ||i.HAL_MultiProcessor_Init||, CODE, READONLY, ALIGN=1

HAL_MultiProcessor_Init PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r5,r2
        CMP      r4,#0
        BNE      |L7.16|
        MOVS     r0,#1
|L7.14|
        POP      {r4-r6,pc}
|L7.16|
        MOVS     r0,#0x69
        LDRB     r0,[r0,r4]
        CMP      r0,#0
        BNE      |L7.36|
        MOVS     r1,#0
        MOVS     r0,#0x68
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_UART_MspInit
|L7.36|
        MOVS     r1,#0x24
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_SetConfig
        CMP      r0,#1
        BNE      |L7.66|
        B        |L7.14|
|L7.66|
        LDR      r0,[r4,#0x24]
        CMP      r0,#0
        BEQ      |L7.78|
        MOV      r0,r4
        BL       UART_AdvFeatureConfig
|L7.78|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        MOVS     r1,#9
        LSLS     r1,r1,#11
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x2a
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r0,#1
        LSLS     r0,r0,#11
        CMP      r5,r0
        BNE      |L7.128|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        LSLS     r0,r0,#8
        LSRS     r0,r0,#8
        LSLS     r1,r6,#24
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
|L7.128|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#11
        BICS     r0,r0,r1
        ORRS     r0,r0,r5
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_CheckIdleState
        B        |L7.14|
        ENDP


        AREA ||i.HAL_UART_Abort||, CODE, READONLY, ALIGN=1

HAL_UART_Abort PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,r1,#0xe1
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L8.70|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x60]
        CMP      r0,#0
        BEQ      |L8.70|
        MOVS     r0,#0
        LDR      r1,[r4,#0x60]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x60]
        BL       HAL_DMA_Abort
|L8.70|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L8.110|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x64]
        CMP      r0,#0
        BEQ      |L8.110|
        MOVS     r0,#0
        LDR      r1,[r4,#0x64]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x64]
        BL       HAL_DMA_Abort
|L8.110|
        MOVS     r1,#0
        MOVS     r0,#0x52
        STRH     r1,[r0,r4]
        MOVS     r0,#0x5a
        STRH     r1,[r0,r4]
        MOVS     r0,#0xf
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#0x20
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        MOVS     r0,#0x6a
        STRB     r1,[r0,r4]
        MOVS     r0,#0
        STR      r0,[r4,#0x6c]
        POP      {r4,pc}
        ENDP


        AREA ||i.HAL_UART_AbortCpltCallback||, CODE, READONLY, ALIGN=1

HAL_UART_AbortCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_AbortReceive||, CODE, READONLY, ALIGN=1

HAL_UART_AbortReceive PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,r1,#0x21
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L10.70|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x64]
        CMP      r0,#0
        BEQ      |L10.70|
        MOVS     r0,#0
        LDR      r1,[r4,#0x64]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x64]
        BL       HAL_DMA_Abort
|L10.70|
        MOVS     r1,#0
        MOVS     r0,#0x5a
        STRH     r1,[r0,r4]
        MOVS     r0,#0xf
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#0x20
        MOVS     r0,#0x6a
        STRB     r1,[r0,r4]
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.HAL_UART_AbortReceiveCpltCallback||, CODE, READONLY, ALIGN=1

HAL_UART_AbortReceiveCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_AbortReceive_IT||, CODE, READONLY, ALIGN=2

HAL_UART_AbortReceive_IT PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,r1,#0x21
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L12.108|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x64]
        CMP      r0,#0
        BEQ      |L12.82|
        LDR      r0,|L12.136|
        LDR      r1,[r4,#0x64]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x64]
        BL       HAL_DMA_Abort_IT
        CMP      r0,#0
        BEQ      |L12.132|
        LDR      r0,[r4,#0x64]
        LDR      r1,[r0,#0x34]
        BLX      r1
        B        |L12.132|
|L12.82|
        MOVS     r1,#0
        MOVS     r0,#0x5a
        STRH     r1,[r0,r4]
        MOVS     r0,#0xf
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#0x20
        MOVS     r0,#0x6a
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_UART_AbortReceiveCpltCallback
        B        |L12.132|
|L12.108|
        MOVS     r1,#0
        MOVS     r0,#0x5a
        STRH     r1,[r0,r4]
        MOVS     r0,#0xf
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#0x20
        MOVS     r0,#0x6a
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_UART_AbortReceiveCpltCallback
|L12.132|
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP

|L12.136|
        DCD      UART_DMARxOnlyAbortCallback

        AREA ||i.HAL_UART_AbortTransmit||, CODE, READONLY, ALIGN=1

HAL_UART_AbortTransmit PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xc0
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L13.56|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x60]
        CMP      r0,#0
        BEQ      |L13.56|
        MOVS     r0,#0
        LDR      r1,[r4,#0x60]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x60]
        BL       HAL_DMA_Abort
|L13.56|
        MOVS     r1,#0
        MOVS     r0,#0x52
        STRH     r1,[r0,r4]
        MOVS     r1,#0x20
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.HAL_UART_AbortTransmitCpltCallback||, CODE, READONLY, ALIGN=1

HAL_UART_AbortTransmitCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_AbortTransmit_IT||, CODE, READONLY, ALIGN=2

HAL_UART_AbortTransmit_IT PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xc0
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L15.88|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x60]
        CMP      r0,#0
        BEQ      |L15.68|
        LDR      r0,|L15.112|
        LDR      r1,[r4,#0x60]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x60]
        BL       HAL_DMA_Abort_IT
        CMP      r0,#0
        BEQ      |L15.106|
        LDR      r0,[r4,#0x60]
        LDR      r1,[r0,#0x34]
        BLX      r1
        B        |L15.106|
|L15.68|
        MOVS     r1,#0
        MOVS     r0,#0x52
        STRH     r1,[r0,r4]
        MOVS     r1,#0x20
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_UART_AbortTransmitCpltCallback
        B        |L15.106|
|L15.88|
        MOVS     r1,#0
        MOVS     r0,#0x52
        STRH     r1,[r0,r4]
        MOVS     r1,#0x20
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_UART_AbortTransmitCpltCallback
|L15.106|
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L15.112|
        DCD      UART_DMATxOnlyAbortCallback

        AREA ||i.HAL_UART_Abort_IT||, CODE, READONLY, ALIGN=2

HAL_UART_Abort_IT PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r5,#1
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,r1,#0xe1
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r5
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x60]
        CMP      r0,#0
        BEQ      |L16.62|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L16.56|
        LDR      r0,|L16.236|
        LDR      r1,[r4,#0x60]
        STR      r0,[r1,#0x34]
        B        |L16.62|
|L16.56|
        MOVS     r0,#0
        LDR      r1,[r4,#0x60]
        STR      r0,[r1,#0x34]
|L16.62|
        LDR      r0,[r4,#0x64]
        CMP      r0,#0
        BEQ      |L16.94|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L16.88|
        LDR      r0,|L16.240|
        LDR      r1,[r4,#0x64]
        STR      r0,[r1,#0x34]
        B        |L16.94|
|L16.88|
        MOVS     r0,#0
        LDR      r1,[r4,#0x64]
        STR      r0,[r1,#0x34]
|L16.94|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L16.142|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x60]
        CMP      r0,#0
        BEQ      |L16.142|
        LDR      r0,[r4,#0x60]
        BL       HAL_DMA_Abort_IT
        CMP      r0,#0
        BEQ      |L16.140|
        MOVS     r0,#0
        LDR      r1,[r4,#0x60]
        STR      r0,[r1,#0x34]
        B        |L16.142|
|L16.140|
        MOVS     r5,#0
|L16.142|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L16.192|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x64]
        CMP      r0,#0
        BEQ      |L16.192|
        LDR      r0,[r4,#0x64]
        BL       HAL_DMA_Abort_IT
        CMP      r0,#0
        BEQ      |L16.190|
        MOVS     r0,#0
        LDR      r1,[r4,#0x64]
        STR      r0,[r1,#0x34]
        MOVS     r5,#1
        B        |L16.192|
|L16.190|
        MOVS     r5,#0
|L16.192|
        CMP      r5,#1
        BNE      |L16.232|
        MOVS     r1,#0
        MOVS     r0,#0x52
        STRH     r1,[r0,r4]
        MOVS     r0,#0x5a
        STRH     r1,[r0,r4]
        MOVS     r0,#0
        STR      r0,[r4,#0x6c]
        MOVS     r0,#0xf
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#0x20
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        MOVS     r0,#0x6a
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_UART_AbortCpltCallback
|L16.232|
        MOVS     r0,#0
        POP      {r4-r6,pc}
        ENDP

|L16.236|
        DCD      UART_DMATxAbortCallback
|L16.240|
        DCD      UART_DMARxAbortCallback

        AREA ||i.HAL_UART_DMAPause||, CODE, READONLY, ALIGN=1

HAL_UART_DMAPause PROC
        MOV      r1,r0
        NOP      
        MOVS     r0,#0x68
        LDRB     r0,[r0,r1]
        CMP      r0,#1
        BNE      |L17.16|
        MOVS     r0,#2
|L17.14|
        BX       lr
|L17.16|
        MOVS     r2,#1
        MOVS     r0,#0x68
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r0,#0x69
        LDRB     r0,[r0,r1]
        CMP      r0,#0x21
        BNE      |L17.54|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        MOVS     r2,#0x80
        ANDS     r0,r0,r2
        CMP      r0,#0
        BEQ      |L17.54|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
|L17.54|
        MOVS     r0,#0x6a
        LDRB     r0,[r0,r1]
        CMP      r0,#0x22
        BNE      |L17.110|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        MOVS     r2,#0x40
        ANDS     r0,r0,r2
        CMP      r0,#0
        BEQ      |L17.110|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        LSLS     r2,r2,#2
        BICS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        MOVS     r2,#0x40
        BICS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
|L17.110|
        NOP      
        MOVS     r2,#0
        MOVS     r0,#0x68
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r0,#0
        B        |L17.14|
        ENDP


        AREA ||i.HAL_UART_DMAResume||, CODE, READONLY, ALIGN=1

HAL_UART_DMAResume PROC
        MOV      r1,r0
        NOP      
        MOVS     r0,#0x68
        LDRB     r0,[r0,r1]
        CMP      r0,#1
        BNE      |L18.16|
        MOVS     r0,#2
|L18.14|
        BX       lr
|L18.16|
        MOVS     r2,#1
        MOVS     r0,#0x68
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r0,#0x69
        LDRB     r0,[r0,r1]
        CMP      r0,#0x21
        BNE      |L18.44|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        MOVS     r2,#0x80
        ORRS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
|L18.44|
        MOVS     r0,#0x6a
        LDRB     r0,[r0,r1]
        CMP      r0,#0x22
        BNE      |L18.96|
        MOVS     r0,#8
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0x20]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        MOVS     r2,#0xff
        ADDS     r2,#1
        ORRS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        MOVS     r2,#1
        ORRS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        MOVS     r2,#0x40
        ORRS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
|L18.96|
        NOP      
        MOVS     r2,#0
        MOVS     r0,#0x68
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r0,#0
        B        |L18.14|
        ENDP


        AREA ||i.HAL_UART_DMAStop||, CODE, READONLY, ALIGN=1

HAL_UART_DMAStop PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOVS     r0,#0x69
        LDRB     r0,[r0,r4]
        CMP      r0,#0x21
        BNE      |L19.52|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L19.52|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x60]
        CMP      r0,#0
        BEQ      |L19.46|
        LDR      r0,[r4,#0x60]
        BL       HAL_DMA_Abort
|L19.46|
        MOV      r0,r4
        BL       UART_EndTxTransfer
|L19.52|
        MOVS     r0,#0x6a
        LDRB     r0,[r0,r4]
        CMP      r0,#0x22
        BNE      |L19.100|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L19.100|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x64]
        CMP      r0,#0
        BEQ      |L19.94|
        LDR      r0,[r4,#0x64]
        BL       HAL_DMA_Abort
|L19.94|
        MOV      r0,r4
        BL       UART_EndRxTransfer
|L19.100|
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.HAL_UART_DeInit||, CODE, READONLY, ALIGN=1

HAL_UART_DeInit PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CMP      r4,#0
        BNE      |L20.12|
        MOVS     r0,#1
|L20.10|
        POP      {r4,pc}
|L20.12|
        MOVS     r1,#0x24
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOVS     r0,#0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOV      r0,r4
        BL       HAL_UART_MspDeInit
        MOVS     r0,#0
        STR      r0,[r4,#0x6c]
        MOVS     r1,#0
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        MOVS     r0,#0x6a
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0x68
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        B        |L20.10|
        ENDP


        AREA ||i.HAL_UART_ErrorCallback||, CODE, READONLY, ALIGN=1

HAL_UART_ErrorCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_GetError||, CODE, READONLY, ALIGN=1

HAL_UART_GetError PROC
        MOV      r1,r0
        LDR      r0,[r1,#0x6c]
        BX       lr
        ENDP


        AREA ||i.HAL_UART_GetState||, CODE, READONLY, ALIGN=1

HAL_UART_GetState PROC
        MOV      r1,r0
        MOVS     r2,#0
        MOVS     r3,#0
        MOVS     r0,#0x69
        LDRB     r2,[r0,r1]
        MOVS     r0,#0x6a
        LDRB     r3,[r0,r1]
        MOV      r0,r2
        ORRS     r0,r0,r3
        BX       lr
        ENDP


        AREA ||i.HAL_UART_IRQHandler||, CODE, READONLY, ALIGN=2

HAL_UART_IRQHandler PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r5,[r0,#0x1c]
        LDR      r0,[r4,#0]
        LDR      r6,[r0,#0]
        LSLS     r0,r5,#28
        LSRS     r0,r0,#28
        STR      r0,[sp,#0]
        LDR      r0,[sp,#0]
        CMP      r0,#0
        BNE      |L24.48|
        MOVS     r0,#0x20
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L24.48|
        MOVS     r0,#0x20
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L24.48|
        MOV      r0,r4
        BL       UART_Receive_IT
|L24.46|
        POP      {r3-r7,pc}
|L24.48|
        LDR      r0,[r4,#0]
        LDR      r7,[r0,#8]
        LDR      r0,[sp,#0]
        CMP      r0,#0
|L24.56|
        BEQ      |L24.312|
        LSLS     r0,r7,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BNE      |L24.76|
        MOVS     r0,#0xff
        ADDS     r0,r0,#0x21
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L24.56|
|L24.76|
        LSLS     r0,r5,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L24.108|
        MOVS     r0,#0xff
        ADDS     r0,#1
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L24.108|
        MOVS     r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        LDR      r0,[r4,#0x6c]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x6c]
|L24.108|
        MOVS     r0,#2
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L24.138|
        LSLS     r0,r7,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L24.138|
        MOVS     r0,#2
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        LDR      r0,[r4,#0x6c]
        MOVS     r1,#4
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x6c]
|L24.138|
        MOVS     r0,#4
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L24.168|
        LSLS     r0,r7,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L24.168|
        MOVS     r0,#4
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        LDR      r0,[r4,#0x6c]
        MOVS     r1,#2
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x6c]
|L24.168|
        MOVS     r0,#8
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L24.206|
        MOVS     r0,#0x20
        ANDS     r0,r0,r6
        CMP      r0,#0
        BNE      |L24.192|
        LSLS     r0,r7,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L24.206|
|L24.192|
        MOVS     r0,#8
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        LDR      r0,[r4,#0x6c]
        MOVS     r1,#8
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x6c]
|L24.206|
        LDR      r0,[r4,#0x6c]
        CMP      r0,#0
        BEQ      |L24.344|
        MOVS     r0,#0x20
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L24.234|
        MOVS     r0,#0x20
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L24.234|
        MOV      r0,r4
        BL       UART_Receive_IT
|L24.234|
        LDR      r0,[r4,#0x6c]
        MOVS     r1,#8
        ANDS     r0,r0,r1
        CMP      r0,#0
        BNE      |L24.256|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L24.334|
|L24.256|
        MOV      r0,r4
        BL       UART_EndRxTransfer
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L24.326|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x64]
        CMP      r0,#0
        BEQ      |L24.318|
        LDR      r0,|L24.444|
        LDR      r1,[r4,#0x64]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x64]
        BL       HAL_DMA_Abort_IT
        CMP      r0,#0
        BEQ      |L24.344|
        LDR      r0,[r4,#0x64]
        LDR      r1,[r0,#0x34]
        B        |L24.314|
|L24.312|
        B        |L24.346|
|L24.314|
        BLX      r1
        B        |L24.344|
|L24.318|
        MOV      r0,r4
        BL       HAL_UART_ErrorCallback
        B        |L24.344|
|L24.326|
        MOV      r0,r4
        BL       HAL_UART_ErrorCallback
        B        |L24.344|
|L24.334|
        MOV      r0,r4
        BL       HAL_UART_ErrorCallback
        MOVS     r0,#0
        STR      r0,[r4,#0x6c]
|L24.344|
        B        |L24.46|
|L24.346|
        MOVS     r0,#1
        LSLS     r0,r0,#20
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L24.392|
        MOVS     r0,#1
        LSLS     r0,r0,#22
        ANDS     r0,r0,r7
        CMP      r0,#0
        BEQ      |L24.392|
        MOVS     r0,#1
        LSLS     r0,r0,#20
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#0x20
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        MOVS     r0,#0x6a
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_UARTEx_WakeupCallback
        B        |L24.46|
|L24.392|
        MOVS     r0,#0x80
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L24.416|
        MOVS     r0,#0x80
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L24.416|
        MOV      r0,r4
        BL       UART_Transmit_IT
        B        |L24.46|
|L24.416|
        MOVS     r0,#0x40
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L24.440|
        MOVS     r0,#0x40
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L24.440|
        MOV      r0,r4
        BL       UART_EndTransmit_IT
        B        |L24.46|
|L24.440|
        NOP      
        B        |L24.46|
        ENDP

|L24.444|
        DCD      UART_DMAAbortOnError

        AREA ||i.HAL_UART_Init||, CODE, READONLY, ALIGN=1

HAL_UART_Init PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CMP      r4,#0
        BNE      |L25.12|
        MOVS     r0,#1
|L25.10|
        POP      {r4,pc}
|L25.12|
        LDR      r0,[r4,#0x18]
        CMP      r0,#0
        BEQ      |L25.20|
        B        |L25.22|
|L25.20|
        NOP      
|L25.22|
        MOVS     r0,#0x69
        LDRB     r0,[r0,r4]
        CMP      r0,#0
        BNE      |L25.42|
        MOVS     r1,#0
        MOVS     r0,#0x68
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_UART_MspInit
|L25.42|
        MOVS     r1,#0x24
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_SetConfig
        CMP      r0,#1
        BNE      |L25.72|
        B        |L25.10|
|L25.72|
        LDR      r0,[r4,#0x24]
        CMP      r0,#0
        BEQ      |L25.84|
        MOV      r0,r4
        BL       UART_AdvFeatureConfig
|L25.84|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        MOVS     r1,#9
        LSLS     r1,r1,#11
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x2a
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_CheckIdleState
        B        |L25.10|
        ENDP


        AREA ||i.HAL_UART_MspDeInit||, CODE, READONLY, ALIGN=1

HAL_UART_MspDeInit PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_MspInit||, CODE, READONLY, ALIGN=1

HAL_UART_MspInit PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_Receive||, CODE, READONLY, ALIGN=2

HAL_UART_Receive PROC
        PUSH     {r0-r7,lr}
        SUB      sp,sp,#0xc
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOVS     r0,#0
        STR      r0,[sp,#4]
        MOVS     r0,#0x6a
        LDRB     r0,[r0,r4]
        CMP      r0,#0x20
        BNE      |L28.248|
        CMP      r5,#0
        BEQ      |L28.30|
        CMP      r6,#0
        BNE      |L28.36|
|L28.30|
        MOVS     r0,#1
|L28.32|
        ADD      sp,sp,#0x1c
        POP      {r4-r7,pc}
|L28.36|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L28.64|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L28.64|
        LSLS     r0,r5,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L28.64|
        MOVS     r0,#1
        B        |L28.32|
|L28.64|
        NOP      
        MOVS     r0,#0x68
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L28.78|
        MOVS     r0,#2
        B        |L28.32|
|L28.78|
        MOVS     r1,#1
        MOVS     r0,#0x68
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        STR      r0,[r4,#0x6c]
        MOVS     r1,#0x22
        MOVS     r0,#0x6a
        STRB     r1,[r0,r4]
        BL       HAL_GetTick
        STR      r0,[sp,#4]
        MOVS     r0,#0x58
        STRH     r6,[r0,r4]
        MOVS     r0,#0x5a
        STRH     r6,[r0,r4]
        NOP      
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L28.144|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L28.136|
        LDR      r1,|L28.328|
        MOVS     r0,#0x5c
        STRH     r1,[r0,r4]
        B        |L28.202|
|L28.136|
        MOVS     r1,#0xff
        MOVS     r0,#0x5c
        STRH     r1,[r0,r4]
        B        |L28.202|
|L28.144|
        LDR      r0,[r4,#8]
        CMP      r0,#0
        BNE      |L28.172|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L28.164|
        MOVS     r1,#0xff
        MOVS     r0,#0x5c
        STRH     r1,[r0,r4]
        B        |L28.202|
|L28.164|
        MOVS     r1,#0x7f
        MOVS     r0,#0x5c
        STRH     r1,[r0,r4]
        B        |L28.202|
|L28.172|
        MOVS     r1,#1
        LSLS     r1,r1,#28
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L28.202|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L28.196|
        MOVS     r1,#0x7f
        MOVS     r0,#0x5c
        STRH     r1,[r0,r4]
        B        |L28.202|
|L28.196|
        MOVS     r1,#0x3f
        MOVS     r0,#0x5c
        STRH     r1,[r0,r4]
|L28.202|
        NOP      
        MOVS     r0,#0x5c
        LDRH     r0,[r0,r4]
        STR      r0,[sp,#8]
        B        |L28.296|
|L28.212|
        MOVS     r0,#0x5a
        LDRH     r0,[r0,r4]
        SUBS     r0,r0,#1
        UXTH     r1,r0
        MOVS     r0,#0x5a
        STRH     r1,[r0,r4]
        LDR      r0,[sp,#0x18]
        STR      r0,[sp,#0]
        MOVS     r2,#0
        MOVS     r1,#0x20
        MOV      r0,r4
        LDR      r3,[sp,#4]
        BL       UART_WaitOnFlagUntilTimeout
        CMP      r0,#0
        BEQ      |L28.250|
        MOVS     r0,#3
        B        |L28.32|
|L28.248|
        B        |L28.324|
|L28.250|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L28.282|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L28.282|
        MOV      r7,r5
        LDR      r0,[r4,#0]
        LDRH     r0,[r0,#0x24]
        LDR      r1,[sp,#8]
        ANDS     r0,r0,r1
        STRH     r0,[r7,#0]
        ADDS     r5,r5,#2
        B        |L28.296|
|L28.282|
        LDR      r0,[r4,#0]
        LDRH     r0,[r0,#0x24]
        LDR      r1,[sp,#8]
        UXTB     r1,r1
        ANDS     r0,r0,r1
        STRB     r0,[r5,#0]
        ADDS     r5,r5,#1
|L28.296|
        MOVS     r0,#0x5a
        LDRH     r0,[r0,r4]
        CMP      r0,#0
        BNE      |L28.212|
        MOVS     r1,#0x20
        MOVS     r0,#0x6a
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x68
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        B        |L28.32|
|L28.324|
        MOVS     r0,#2
        B        |L28.32|
        ENDP

|L28.328|
        DCD      0x000001ff

        AREA ||i.HAL_UART_Receive_DMA||, CODE, READONLY, ALIGN=2

HAL_UART_Receive_DMA PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOVS     r0,#0x6a
        LDRB     r0,[r0,r4]
        CMP      r0,#0x20
        BNE      |L29.186|
        CMP      r5,#0
        BEQ      |L29.24|
        CMP      r6,#0
        BNE      |L29.28|
|L29.24|
        MOVS     r0,#1
|L29.26|
        POP      {r4-r6,pc}
|L29.28|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L29.56|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L29.56|
        LSLS     r0,r5,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L29.56|
        MOVS     r0,#1
        B        |L29.26|
|L29.56|
        NOP      
        MOVS     r0,#0x68
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L29.70|
        MOVS     r0,#2
        B        |L29.26|
|L29.70|
        MOVS     r1,#1
        MOVS     r0,#0x68
        STRB     r1,[r0,r4]
        NOP      
        STR      r5,[r4,#0x54]
        MOVS     r0,#0x58
        STRH     r6,[r0,r4]
        MOVS     r0,#0
        STR      r0,[r4,#0x6c]
        MOVS     r1,#0x22
        MOVS     r0,#0x6a
        STRB     r1,[r0,r4]
        LDR      r0,|L29.192|
        LDR      r1,[r4,#0x64]
        STR      r0,[r1,#0x28]
        LDR      r0,|L29.196|
        LDR      r1,[r4,#0x64]
        STR      r0,[r1,#0x2c]
        LDR      r0,|L29.200|
        LDR      r1,[r4,#0x64]
        STR      r0,[r1,#0x30]
        MOVS     r0,#0
        LDR      r1,[r4,#0x64]
        STR      r0,[r1,#0x34]
        LDR      r3,[r4,#0]
        MOV      r1,r3
        ADDS     r1,r1,#0x24
        MOV      r3,r6
        LDR      r2,[r4,#0x54]
        LDR      r0,[r4,#0x64]
        BL       HAL_DMA_Start_IT
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x68
        STRB     r1,[r0,r4]
        NOP      
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r0,#0
        B        |L29.26|
|L29.186|
        MOVS     r0,#2
        B        |L29.26|
        ENDP

        DCW      0x0000
|L29.192|
        DCD      UART_DMAReceiveCplt
|L29.196|
        DCD      UART_DMARxHalfCplt
|L29.200|
        DCD      UART_DMAError

        AREA ||i.HAL_UART_Receive_IT||, CODE, READONLY, ALIGN=2

HAL_UART_Receive_IT PROC
        PUSH     {r4,lr}
        MOV      r3,r0
        MOVS     r0,#0x6a
        LDRB     r0,[r0,r3]
        CMP      r0,#0x20
        BNE      |L30.226|
        CMP      r1,#0
        BEQ      |L30.20|
        CMP      r2,#0
        BNE      |L30.24|
|L30.20|
        MOVS     r0,#1
|L30.22|
        POP      {r4,pc}
|L30.24|
        MOVS     r4,#1
        LSLS     r4,r4,#12
        LDR      r0,[r3,#8]
        CMP      r0,r4
        BNE      |L30.52|
        LDR      r0,[r3,#0x10]
        CMP      r0,#0
        BNE      |L30.52|
        LSLS     r0,r1,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L30.52|
        MOVS     r0,#1
        B        |L30.22|
|L30.52|
        NOP      
        MOVS     r0,#0x68
        LDRB     r0,[r0,r3]
        CMP      r0,#1
        BNE      |L30.66|
        MOVS     r0,#2
        B        |L30.22|
|L30.66|
        MOVS     r4,#1
        MOVS     r0,#0x68
        STRB     r4,[r0,r3]
        NOP      
        STR      r1,[r3,#0x54]
        MOVS     r0,#0x58
        STRH     r2,[r0,r3]
        MOVS     r0,#0x5a
        STRH     r2,[r0,r3]
        NOP      
        LSLS     r4,r4,#12
        LDR      r0,[r3,#8]
        CMP      r0,r4
        BNE      |L30.116|
        LDR      r0,[r3,#0x10]
        CMP      r0,#0
        BNE      |L30.108|
        LDR      r4,|L30.232|
        MOVS     r0,#0x5c
        STRH     r4,[r0,r3]
        B        |L30.174|
|L30.108|
        MOVS     r4,#0xff
        MOVS     r0,#0x5c
        STRH     r4,[r0,r3]
        B        |L30.174|
|L30.116|
        LDR      r0,[r3,#8]
        CMP      r0,#0
        BNE      |L30.144|
        LDR      r0,[r3,#0x10]
        CMP      r0,#0
        BNE      |L30.136|
        MOVS     r4,#0xff
        MOVS     r0,#0x5c
        STRH     r4,[r0,r3]
        B        |L30.174|
|L30.136|
        MOVS     r4,#0x7f
        MOVS     r0,#0x5c
        STRH     r4,[r0,r3]
        B        |L30.174|
|L30.144|
        MOVS     r4,#1
        LSLS     r4,r4,#28
        LDR      r0,[r3,#8]
        CMP      r0,r4
        BNE      |L30.174|
        LDR      r0,[r3,#0x10]
        CMP      r0,#0
        BNE      |L30.168|
        MOVS     r4,#0x7f
        MOVS     r0,#0x5c
        STRH     r4,[r0,r3]
        B        |L30.174|
|L30.168|
        MOVS     r4,#0x3f
        MOVS     r0,#0x5c
        STRH     r4,[r0,r3]
|L30.174|
        NOP      
        MOVS     r0,#0
        STR      r0,[r3,#0x6c]
        MOVS     r4,#0x22
        MOVS     r0,#0x6a
        STRB     r4,[r0,r3]
        NOP      
        MOVS     r4,#0
        MOVS     r0,#0x68
        STRB     r4,[r0,r3]
        NOP      
        LDR      r0,[r3,#0]
        LDR      r0,[r0,#8]
        MOVS     r4,#1
        ORRS     r0,r0,r4
        LDR      r4,[r3,#0]
        STR      r0,[r4,#8]
        LDR      r0,[r3,#0]
        LDR      r0,[r0,#0]
        MOVS     r4,#0xff
        ADDS     r4,r4,#0x21
        ORRS     r0,r0,r4
        LDR      r4,[r3,#0]
        STR      r0,[r4,#0]
        MOVS     r0,#0
        B        |L30.22|
|L30.226|
        MOVS     r0,#2
        B        |L30.22|
        ENDP

        DCW      0x0000
|L30.232|
        DCD      0x000001ff

        AREA ||i.HAL_UART_RxCpltCallback||, CODE, READONLY, ALIGN=1

HAL_UART_RxCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_RxHalfCpltCallback||, CODE, READONLY, ALIGN=1

HAL_UART_RxHalfCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_Transmit||, CODE, READONLY, ALIGN=1

HAL_UART_Transmit PROC
        PUSH     {r1-r7,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r7,r3
        MOVS     r0,#0
        STR      r0,[sp,#4]
        MOVS     r0,#0x69
        LDRB     r0,[r0,r4]
        CMP      r0,#0x20
        BNE      |L33.236|
        CMP      r5,#0
        BEQ      |L33.30|
        CMP      r6,#0
        BNE      |L33.34|
|L33.30|
        MOVS     r0,#1
|L33.32|
        POP      {r1-r7,pc}
|L33.34|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L33.62|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L33.62|
        LSLS     r0,r5,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L33.62|
        MOVS     r0,#1
        B        |L33.32|
|L33.62|
        NOP      
        MOVS     r0,#0x68
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L33.76|
        MOVS     r0,#2
        B        |L33.32|
|L33.76|
        MOVS     r1,#1
        MOVS     r0,#0x68
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        STR      r0,[r4,#0x6c]
        MOVS     r1,#0x21
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        BL       HAL_GetTick
        STR      r0,[sp,#4]
        MOVS     r0,#0x50
        STRH     r6,[r0,r4]
        MOVS     r0,#0x52
        STRH     r6,[r0,r4]
        B        |L33.186|
|L33.110|
        MOVS     r0,#0x52
        LDRH     r0,[r0,r4]
        SUBS     r0,r0,#1
        UXTH     r1,r0
        MOVS     r0,#0x52
        STRH     r1,[r0,r4]
        STR      r7,[sp,#0]
        MOVS     r2,#0
        MOVS     r1,#0x80
        MOV      r0,r4
        LDR      r3,[sp,#4]
        BL       UART_WaitOnFlagUntilTimeout
        CMP      r0,#0
        BEQ      |L33.144|
        MOVS     r0,#3
        B        |L33.32|
|L33.144|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L33.178|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L33.178|
        STR      r5,[sp,#8]
        LDR      r5,[sp,#8]
        LDRH     r0,[r5,#0]
        LSLS     r0,r0,#23
        LSRS     r0,r0,#23
        LDR      r1,[r4,#0]
        STRH     r0,[r1,#0x28]
        ADDS     r5,r5,#2
        B        |L33.186|
|L33.178|
        LDRB     r0,[r5,#0]
        ADDS     r5,r5,#1
        LDR      r1,[r4,#0]
        STRH     r0,[r1,#0x28]
|L33.186|
        MOVS     r0,#0x52
        LDRH     r0,[r0,r4]
        CMP      r0,#0
        BGT      |L33.110|
        STR      r7,[sp,#0]
        MOVS     r2,#0
        MOVS     r1,#0x40
        MOV      r0,r4
        LDR      r3,[sp,#4]
        BL       UART_WaitOnFlagUntilTimeout
        CMP      r0,#0
        BEQ      |L33.216|
        MOVS     r0,#3
        B        |L33.32|
|L33.216|
        MOVS     r1,#0x20
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x68
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        B        |L33.32|
|L33.236|
        MOVS     r0,#2
        B        |L33.32|
        ENDP


        AREA ||i.HAL_UART_Transmit_DMA||, CODE, READONLY, ALIGN=2

HAL_UART_Transmit_DMA PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r5,r2
        MOVS     r0,#0x69
        LDRB     r0,[r0,r4]
        CMP      r0,#0x20
        BNE      |L34.170|
        CMP      r6,#0
        BEQ      |L34.24|
        CMP      r5,#0
        BNE      |L34.28|
|L34.24|
        MOVS     r0,#1
|L34.26|
        POP      {r4-r6,pc}
|L34.28|
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L34.56|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L34.56|
        LSLS     r0,r6,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L34.56|
        MOVS     r0,#1
        B        |L34.26|
|L34.56|
        NOP      
        MOVS     r0,#0x68
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L34.70|
        MOVS     r0,#2
        B        |L34.26|
|L34.70|
        MOVS     r1,#1
        MOVS     r0,#0x68
        STRB     r1,[r0,r4]
        NOP      
        STR      r6,[r4,#0x4c]
        MOVS     r0,#0x50
        STRH     r5,[r0,r4]
        MOVS     r0,#0x52
        STRH     r5,[r0,r4]
        MOVS     r0,#0
        STR      r0,[r4,#0x6c]
        MOVS     r1,#0x21
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        LDR      r0,|L34.176|
        LDR      r1,[r4,#0x60]
        STR      r0,[r1,#0x28]
        LDR      r0,|L34.180|
        LDR      r1,[r4,#0x60]
        STR      r0,[r1,#0x2c]
        LDR      r0,|L34.184|
        LDR      r1,[r4,#0x60]
        STR      r0,[r1,#0x30]
        MOVS     r0,#0
        LDR      r1,[r4,#0x60]
        STR      r0,[r1,#0x34]
        LDR      r3,[r4,#0]
        MOV      r2,r3
        ADDS     r2,r2,#0x28
        MOV      r3,r5
        LDR      r1,[r4,#0x4c]
        LDR      r0,[r4,#0x60]
        BL       HAL_DMA_Start_IT
        MOVS     r0,#0x40
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x68
        STRB     r1,[r0,r4]
        NOP      
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r0,#0
        B        |L34.26|
|L34.170|
        MOVS     r0,#2
        B        |L34.26|
        ENDP

        DCW      0x0000
|L34.176|
        DCD      UART_DMATransmitCplt
|L34.180|
        DCD      UART_DMATxHalfCplt
|L34.184|
        DCD      UART_DMAError

        AREA ||i.HAL_UART_Transmit_IT||, CODE, READONLY, ALIGN=1

HAL_UART_Transmit_IT PROC
        PUSH     {r4,lr}
        MOV      r3,r0
        MOVS     r0,#0x69
        LDRB     r0,[r0,r3]
        CMP      r0,#0x20
        BNE      |L35.120|
        CMP      r1,#0
        BEQ      |L35.20|
        CMP      r2,#0
        BNE      |L35.24|
|L35.20|
        MOVS     r0,#1
|L35.22|
        POP      {r4,pc}
|L35.24|
        MOVS     r4,#1
        LSLS     r4,r4,#12
        LDR      r0,[r3,#8]
        CMP      r0,r4
        BNE      |L35.52|
        LDR      r0,[r3,#0x10]
        CMP      r0,#0
        BNE      |L35.52|
        LSLS     r0,r1,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BEQ      |L35.52|
        MOVS     r0,#1
        B        |L35.22|
|L35.52|
        NOP      
        MOVS     r0,#0x68
        LDRB     r0,[r0,r3]
        CMP      r0,#1
        BNE      |L35.66|
        MOVS     r0,#2
        B        |L35.22|
|L35.66|
        MOVS     r4,#1
        MOVS     r0,#0x68
        STRB     r4,[r0,r3]
        NOP      
        STR      r1,[r3,#0x4c]
        MOVS     r0,#0x50
        STRH     r2,[r0,r3]
        MOVS     r0,#0x52
        STRH     r2,[r0,r3]
        MOVS     r0,#0
        STR      r0,[r3,#0x6c]
        MOVS     r4,#0x21
        MOVS     r0,#0x69
        STRB     r4,[r0,r3]
        NOP      
        MOVS     r4,#0
        MOVS     r0,#0x68
        STRB     r4,[r0,r3]
        NOP      
        LDR      r0,[r3,#0]
        LDR      r0,[r0,#0]
        MOVS     r4,#0x80
        ORRS     r0,r0,r4
        LDR      r4,[r3,#0]
        STR      r0,[r4,#0]
        MOVS     r0,#0
        B        |L35.22|
|L35.120|
        MOVS     r0,#2
        B        |L35.22|
        ENDP


        AREA ||i.HAL_UART_TxCpltCallback||, CODE, READONLY, ALIGN=1

HAL_UART_TxCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_TxHalfCpltCallback||, CODE, READONLY, ALIGN=1

HAL_UART_TxHalfCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.UART_AdvFeatureConfig||, CODE, READONLY, ALIGN=1

UART_AdvFeatureConfig PROC
        LDRH     r1,[r0,#0x24]
        LSLS     r1,r1,#31
        LSRS     r1,r1,#31
        CMP      r1,#0
        BEQ      |L38.28|
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#4]
        MOVS     r2,#1
        LSLS     r2,r2,#17
        BICS     r1,r1,r2
        LDR      r2,[r0,#0x28]
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#4]
|L38.28|
        MOVS     r2,#2
        LDR      r1,[r0,#0x24]
        ANDS     r1,r1,r2
        CMP      r1,#0
        BEQ      |L38.54|
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#4]
        LSLS     r2,r2,#15
        BICS     r1,r1,r2
        LDR      r2,[r0,#0x2c]
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#4]
|L38.54|
        MOVS     r2,#4
        LDR      r1,[r0,#0x24]
        ANDS     r1,r1,r2
        CMP      r1,#0
        BEQ      |L38.80|
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#4]
        LSLS     r2,r2,#16
        BICS     r1,r1,r2
        LDR      r2,[r0,#0x30]
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#4]
|L38.80|
        MOVS     r2,#8
        LDR      r1,[r0,#0x24]
        ANDS     r1,r1,r2
        CMP      r1,#0
        BEQ      |L38.106|
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#4]
        LSLS     r2,r2,#12
        BICS     r1,r1,r2
        LDR      r2,[r0,#0x34]
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#4]
|L38.106|
        MOVS     r2,#0x10
        LDR      r1,[r0,#0x24]
        ANDS     r1,r1,r2
        CMP      r1,#0
        BEQ      |L38.132|
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#8]
        LSLS     r2,r2,#8
        BICS     r1,r1,r2
        LDR      r2,[r0,#0x38]
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#8]
|L38.132|
        MOVS     r2,#0x20
        LDR      r1,[r0,#0x24]
        ANDS     r1,r1,r2
        CMP      r1,#0
        BEQ      |L38.158|
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#8]
        LSLS     r2,r2,#8
        BICS     r1,r1,r2
        LDR      r2,[r0,#0x3c]
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#8]
|L38.158|
        MOVS     r2,#0x40
        LDR      r1,[r0,#0x24]
        ANDS     r1,r1,r2
        CMP      r1,#0
        BEQ      |L38.212|
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#4]
        LSLS     r2,r2,#14
        BICS     r1,r1,r2
        LDR      r2,[r0,#0x40]
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#4]
        MOVS     r2,#1
        LSLS     r2,r2,#20
        LDR      r1,[r0,#0x40]
        CMP      r1,r2
        BNE      |L38.212|
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#4]
        MOVS     r2,#3
        LSLS     r2,r2,#21
        BICS     r1,r1,r2
        LDR      r2,[r0,#0x44]
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#4]
|L38.212|
        MOVS     r2,#0x80
        LDR      r1,[r0,#0x24]
        ANDS     r1,r1,r2
        CMP      r1,#0
        BEQ      |L38.238|
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#4]
        LSLS     r2,r2,#12
        BICS     r1,r1,r2
        LDR      r2,[r0,#0x48]
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#4]
|L38.238|
        BX       lr
        ENDP


        AREA ||i.UART_CheckIdleState||, CODE, READONLY, ALIGN=2

UART_CheckIdleState PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOVS     r5,#0
        MOVS     r0,#0
        STR      r0,[r4,#0x6c]
        BL       HAL_GetTick
        MOV      r5,r0
        LDR      r1,|L39.128|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BEQ      |L39.32|
        LDR      r1,|L39.132|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L39.104|
|L39.32|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#8
        ANDS     r0,r0,r1
        CMP      r0,#8
        BNE      |L39.68|
        LDR      r0,|L39.136|
        MOV      r3,r5
        MOVS     r2,#0
        LSLS     r1,r1,#18
        STR      r0,[sp,#0]
        MOV      r0,r4
        BL       UART_WaitOnFlagUntilTimeout
        CMP      r0,#0
        BEQ      |L39.68|
        MOVS     r0,#3
|L39.66|
        POP      {r3-r5,pc}
|L39.68|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#4
        ANDS     r0,r0,r1
        CMP      r0,#4
        BNE      |L39.104|
        LDR      r0,|L39.136|
        MOV      r3,r5
        MOVS     r2,#0
        LSLS     r1,r1,#20
        STR      r0,[sp,#0]
        MOV      r0,r4
        BL       UART_WaitOnFlagUntilTimeout
        CMP      r0,#0
        BEQ      |L39.104|
        MOVS     r0,#3
        B        |L39.66|
|L39.104|
        MOVS     r1,#0x20
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        MOVS     r0,#0x6a
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x68
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        B        |L39.66|
        ENDP

|L39.128|
        DCD      0x40013800
|L39.132|
        DCD      0x40004400
|L39.136|
        DCD      0x01ffffff

        AREA ||i.UART_DMAAbortOnError||, CODE, READONLY, ALIGN=1

UART_DMAAbortOnError PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        MOVS     r1,#0
        MOVS     r0,#0x5a
        STRH     r1,[r0,r4]
        MOVS     r0,#0x52
        STRH     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_UART_ErrorCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.UART_DMAError||, CODE, READONLY, ALIGN=1

UART_DMAError PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        MOVS     r0,#0x69
        LDRB     r0,[r0,r4]
        CMP      r0,#0x21
        BNE      |L41.38|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L41.38|
        MOVS     r1,#0
        MOVS     r0,#0x52
        STRH     r1,[r0,r4]
        MOV      r0,r4
        BL       UART_EndTxTransfer
|L41.38|
        MOVS     r0,#0x6a
        LDRB     r0,[r0,r4]
        CMP      r0,#0x22
        BNE      |L41.70|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L41.70|
        MOVS     r1,#0
        MOVS     r0,#0x5a
        STRH     r1,[r0,r4]
        MOV      r0,r4
        BL       UART_EndRxTransfer
|L41.70|
        LDR      r0,[r4,#0x6c]
        MOVS     r1,#0x10
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x6c]
        MOV      r0,r4
        BL       HAL_UART_ErrorCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.UART_DMAReceiveCplt||, CODE, READONLY, ALIGN=1

UART_DMAReceiveCplt PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        LDR      r0,[r5,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0x20
        ANDS     r0,r0,r1
        CMP      r0,#0
        BNE      |L42.68|
        MOVS     r1,#0
        MOVS     r0,#0x5a
        STRH     r1,[r0,r4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,#1
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x40
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r1,#0x20
        MOVS     r0,#0x6a
        STRB     r1,[r0,r4]
|L42.68|
        MOV      r0,r4
        BL       HAL_UART_RxCpltCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.UART_DMARxAbortCallback||, CODE, READONLY, ALIGN=1

UART_DMARxAbortCallback PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        MOVS     r0,#0
        LDR      r1,[r4,#0x64]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x60]
        CMP      r0,#0
        BEQ      |L43.28|
        LDR      r0,[r4,#0x60]
        LDR      r0,[r0,#0x34]
        CMP      r0,#0
        BEQ      |L43.28|
|L43.26|
        POP      {r4-r6,pc}
|L43.28|
        MOVS     r1,#0
        MOVS     r0,#0x52
        STRH     r1,[r0,r4]
        MOVS     r0,#0x5a
        STRH     r1,[r0,r4]
        MOVS     r0,#0
        STR      r0,[r4,#0x6c]
        MOVS     r0,#0xf
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#0x20
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        MOVS     r0,#0x6a
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_UART_AbortCpltCallback
        NOP      
        B        |L43.26|
        ENDP


        AREA ||i.UART_DMARxHalfCplt||, CODE, READONLY, ALIGN=1

UART_DMARxHalfCplt PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r5,[r4,#0x24]
        MOV      r0,r5
        BL       HAL_UART_RxHalfCpltCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.UART_DMARxOnlyAbortCallback||, CODE, READONLY, ALIGN=1

UART_DMARxOnlyAbortCallback PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        MOVS     r1,#0
        MOVS     r0,#0x5a
        STRH     r1,[r0,r4]
        MOVS     r0,#0xf
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#0x20
        MOVS     r0,#0x6a
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_UART_AbortReceiveCpltCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.UART_DMATransmitCplt||, CODE, READONLY, ALIGN=1

UART_DMATransmitCplt PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        LDR      r0,[r5,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0x20
        ANDS     r0,r0,r1
        CMP      r0,#0
        BNE      |L46.50|
        MOVS     r1,#0
        MOVS     r0,#0x52
        STRH     r1,[r0,r4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x80
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0x40
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        B        |L46.56|
|L46.50|
        MOV      r0,r4
        BL       HAL_UART_TxCpltCallback
|L46.56|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.UART_DMATxAbortCallback||, CODE, READONLY, ALIGN=1

UART_DMATxAbortCallback PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        MOVS     r0,#0
        LDR      r1,[r4,#0x60]
        STR      r0,[r1,#0x34]
        LDR      r0,[r4,#0x64]
        CMP      r0,#0
        BEQ      |L47.28|
        LDR      r0,[r4,#0x64]
        LDR      r0,[r0,#0x34]
        CMP      r0,#0
        BEQ      |L47.28|
|L47.26|
        POP      {r4-r6,pc}
|L47.28|
        MOVS     r1,#0
        MOVS     r0,#0x52
        STRH     r1,[r0,r4]
        MOVS     r0,#0x5a
        STRH     r1,[r0,r4]
        MOVS     r0,#0
        STR      r0,[r4,#0x6c]
        MOVS     r0,#0xf
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        MOVS     r1,#0x20
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        MOVS     r0,#0x6a
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_UART_AbortCpltCallback
        NOP      
        B        |L47.26|
        ENDP


        AREA ||i.UART_DMATxHalfCplt||, CODE, READONLY, ALIGN=1

UART_DMATxHalfCplt PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r5,[r4,#0x24]
        MOV      r0,r5
        BL       HAL_UART_TxHalfCpltCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.UART_DMATxOnlyAbortCallback||, CODE, READONLY, ALIGN=1

UART_DMATxOnlyAbortCallback PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x24]
        MOVS     r1,#0
        MOVS     r0,#0x52
        STRH     r1,[r0,r4]
        MOVS     r1,#0x20
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_UART_AbortTransmitCpltCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.UART_EndRxTransfer||, CODE, READONLY, ALIGN=1

UART_EndRxTransfer PROC
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#0]
        MOVS     r2,#0xff
        ADDS     r2,r2,#0x21
        BICS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#0]
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#8]
        LSRS     r1,r1,#1
        LSLS     r1,r1,#1
        LDR      r2,[r0,#0]
        STR      r1,[r2,#8]
        MOVS     r2,#0x20
        MOVS     r1,#0x6a
        STRB     r2,[r1,r0]
        BX       lr
        ENDP


        AREA ||i.UART_EndTransmit_IT||, CODE, READONLY, ALIGN=1

UART_EndTransmit_IT PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0x40
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOVS     r1,#0x20
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_UART_TxCpltCallback
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.UART_EndTxTransfer||, CODE, READONLY, ALIGN=1

UART_EndTxTransfer PROC
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#0]
        MOVS     r2,#0xc0
        BICS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#0]
        MOVS     r2,#0x20
        MOVS     r1,#0x69
        STRB     r2,[r1,r0]
        BX       lr
        ENDP


        AREA ||i.UART_Receive_IT||, CODE, READONLY, ALIGN=1

UART_Receive_IT PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        MOVS     r0,#0x5c
        LDRH     r7,[r0,r4]
        MOVS     r0,#0x6a
        LDRB     r0,[r0,r4]
        CMP      r0,#0x22
        BNE      |L53.126|
        LDR      r0,[r4,#0]
        LDRH     r5,[r0,#0x24]
        MOVS     r1,#1
        LSLS     r1,r1,#12
        LDR      r0,[r4,#8]
        CMP      r0,r1
        BNE      |L53.52|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L53.52|
        LDR      r6,[r4,#0x54]
        MOV      r0,r5
        ANDS     r0,r0,r7
        STRH     r0,[r6,#0]
        LDR      r0,[r4,#0x54]
        ADDS     r0,r0,#2
        STR      r0,[r4,#0x54]
        B        |L53.64|
|L53.52|
        UXTB     r0,r7
        ANDS     r0,r0,r5
        LDR      r2,[r4,#0x54]
        ADDS     r1,r2,#1
        STR      r1,[r4,#0x54]
        STRB     r0,[r2,#0]
|L53.64|
        MOVS     r0,#0x5a
        LDRH     r0,[r0,r4]
        SUBS     r0,r0,#1
        UXTH     r1,r0
        MOVS     r0,#0x5a
        STRH     r1,[r0,r4]
        CMP      r1,#0
        BNE      |L53.122|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,r1,#0x21
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r1,#0x20
        MOVS     r0,#0x6a
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_UART_RxCpltCallback
        MOVS     r0,#0
|L53.120|
        POP      {r3-r7,pc}
|L53.122|
        MOVS     r0,#0
        B        |L53.120|
|L53.126|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x18]
        MOVS     r1,#8
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x18]
        MOVS     r0,#2
        B        |L53.120|
        ENDP


        AREA ||i.UART_SetConfig||, CODE, READONLY, ALIGN=2

UART_SetConfig PROC
        PUSH     {r1-r7,lr}
        MOV      r4,r0
        MOVS     r5,#0
        MOVS     r6,#0x10
        MOVS     r7,#0
        MOVS     r0,#0
        STR      r0,[sp,#8]
        STR      r0,[sp,#4]
        LDR      r1,[r4,#0x10]
        LDR      r0,[r4,#8]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0x14]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0x1c]
        ORRS     r0,r0,r1
        MOV      r5,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LDR      r1,|L54.528|
        ANDS     r0,r0,r1
        ORRS     r0,r0,r5
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        MOVS     r1,#3
        LSLS     r1,r1,#12
        BICS     r0,r0,r1
        LDR      r1,[r4,#0xc]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r1,[r4,#0x20]
        LDR      r0,[r4,#0x18]
        ORRS     r0,r0,r1
        MOV      r5,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0xb
        LSLS     r1,r1,#8
        BICS     r0,r0,r1
        ORRS     r0,r0,r5
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        NOP      
        LDR      r1,|L54.532|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L54.146|
        LDR      r0,|L54.536|
        LDR      r0,[r0,#0x30]
        LSLS     r0,r0,#30
        LSRS     r0,r0,#30
        CMP      r0,#0
        BEQ      |L54.124|
        CMP      r0,#1
        BEQ      |L54.132|
        CMP      r0,#2
        BEQ      |L54.136|
        CMP      r0,#3
        BNE      |L54.140|
        B        |L54.128|
|L54.124|
        MOVS     r6,#0
        B        |L54.144|
|L54.128|
        MOVS     r6,#2
        B        |L54.144|
|L54.132|
        MOVS     r6,#4
        B        |L54.144|
|L54.136|
        MOVS     r6,#8
        B        |L54.144|
|L54.140|
        MOVS     r6,#0x10
        NOP      
|L54.144|
        B        |L54.234|
|L54.146|
        LDR      r1,|L54.540|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L54.208|
        LDR      r0,|L54.536|
        LDR      r0,[r0,#0x30]
        MOVS     r1,#3
        LSLS     r1,r1,#16
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L54.186|
        MOVS     r1,#1
        LSLS     r1,r1,#16
        SUBS     r0,r0,r1
        BEQ      |L54.194|
        SUBS     r0,r0,r1
        BEQ      |L54.198|
        SUBS     r0,r0,r1
        BNE      |L54.202|
        B        |L54.190|
|L54.186|
        MOVS     r6,#0
        B        |L54.206|
|L54.190|
        MOVS     r6,#2
        B        |L54.206|
|L54.194|
        MOVS     r6,#4
        B        |L54.206|
|L54.198|
        MOVS     r6,#8
        B        |L54.206|
|L54.202|
        MOVS     r6,#0x10
        NOP      
|L54.206|
        B        |L54.234|
|L54.208|
        LDR      r1,|L54.544|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L54.220|
        MOVS     r6,#0
        B        |L54.234|
|L54.220|
        LDR      r1,|L54.548|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L54.232|
        MOVS     r6,#0
        B        |L54.234|
|L54.232|
        MOVS     r6,#0x10
|L54.234|
        NOP      
        MOVS     r1,#1
        LSLS     r1,r1,#15
        LDR      r0,[r4,#0x1c]
        CMP      r0,r1
        BNE      |L54.394|
        CMP      r6,#4
        BEQ      |L54.316|
        BGT      |L54.262|
        CMP      r6,#0
        BEQ      |L54.272|
        CMP      r6,#2
        BNE      |L54.362|
        B        |L54.298|
|L54.262|
        CMP      r6,#8
        BEQ      |L54.342|
        CMP      r6,#0x10
        BNE      |L54.362|
        B        |L54.364|
|L54.272|
        BL       HAL_RCC_GetPCLK1Freq
        LSLS     r0,r0,#1
        LDR      r1,[r4,#4]
        LSRS     r1,r1,#1
        ADDS     r0,r0,r1
        STR      r0,[sp,#0]
        LDR      r1,[r4,#4]
        BL       __aeabi_uidivmod
        UXTH     r0,r0
        STR      r0,[sp,#8]
        B        |L54.370|
|L54.298|
        LDR      r1,[r4,#4]
        LSRS     r2,r1,#1
        LDR      r3,|L54.552|
        ADDS     r0,r2,r3
        BL       __aeabi_uidivmod
        UXTH     r0,r0
        STR      r0,[sp,#8]
        B        |L54.370|
|L54.316|
        BL       HAL_RCC_GetSysClockFreq
        LSLS     r0,r0,#1
        LDR      r1,[r4,#4]
        LSRS     r1,r1,#1
        ADDS     r0,r0,r1
        STR      r0,[sp,#0]
        LDR      r1,[r4,#4]
        BL       __aeabi_uidivmod
        UXTH     r0,r0
        STR      r0,[sp,#8]
        B        |L54.370|
|L54.342|
        LDR      r1,[r4,#4]
        LSRS     r2,r1,#1
        MOVS     r3,#1
        LSLS     r3,r3,#16
        ADDS     r0,r2,r3
        BL       __aeabi_uidivmod
        UXTH     r0,r0
        STR      r0,[sp,#8]
        B        |L54.370|
|L54.362|
        NOP      
|L54.364|
        MOVS     r0,#1
        STR      r0,[sp,#4]
        NOP      
|L54.370|
        NOP      
        LDR      r1,|L54.556|
        LDR      r0,[sp,#8]
        ANDS     r0,r0,r1
        MOV      r7,r0
        LDR      r0,[sp,#8]
        LSLS     r0,r0,#28
        LSRS     r0,r0,#29
        ORRS     r7,r7,r0
        LDR      r0,[r4,#0]
        STR      r7,[r0,#0xc]
        B        |L54.524|
|L54.394|
        CMP      r6,#4
        BEQ      |L54.466|
        BGT      |L54.410|
        CMP      r6,#0
        BEQ      |L54.420|
        CMP      r6,#2
        BNE      |L54.514|
        B        |L54.446|
|L54.410|
        CMP      r6,#8
        BEQ      |L54.492|
        CMP      r6,#0x10
        BNE      |L54.514|
        B        |L54.516|
|L54.420|
        BL       HAL_RCC_GetPCLK1Freq
        LDR      r1,[r4,#4]
        LSRS     r1,r1,#1
        ADDS     r0,r0,r1
        STR      r0,[sp,#0]
        LDR      r1,[r4,#4]
        BL       __aeabi_uidivmod
        UXTH     r0,r0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0xc]
        B        |L54.522|
|L54.446|
        LDR      r1,[r4,#4]
        LSRS     r2,r1,#1
        LDR      r3,|L54.560|
        ADDS     r0,r2,r3
        BL       __aeabi_uidivmod
        UXTH     r0,r0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0xc]
        B        |L54.522|
|L54.466|
        BL       HAL_RCC_GetSysClockFreq
        LDR      r1,[r4,#4]
        LSRS     r1,r1,#1
        ADDS     r0,r0,r1
        STR      r0,[sp,#0]
        LDR      r1,[r4,#4]
        BL       __aeabi_uidivmod
        UXTH     r0,r0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0xc]
        B        |L54.522|
|L54.492|
        LDR      r1,[r4,#4]
        LSRS     r2,r1,#1
        MOVS     r3,#1
        LSLS     r3,r3,#15
        ADDS     r0,r2,r3
        BL       __aeabi_uidivmod
        UXTH     r0,r0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0xc]
        B        |L54.522|
|L54.514|
        NOP      
|L54.516|
        MOVS     r0,#1
        STR      r0,[sp,#4]
        NOP      
|L54.522|
        NOP      
|L54.524|
        LDR      r0,[sp,#4]
        POP      {r1-r7,pc}
        ENDP

|L54.528|
        DCD      0xefff69f3
|L54.532|
        DCD      0x40013800
|L54.536|
        DCD      0x40021000
|L54.540|
        DCD      0x40004400
|L54.544|
        DCD      0x40004800
|L54.548|
        DCD      0x40004c00
|L54.552|
        DCD      0x00f42400
|L54.556|
        DCD      0x0000fff0
|L54.560|
        DCD      0x007a1200

        AREA ||i.UART_Transmit_IT||, CODE, READONLY, ALIGN=1

UART_Transmit_IT PROC
        MOV      r1,r0
        MOVS     r0,#0x69
        LDRB     r0,[r0,r1]
        CMP      r0,#0x21
        BNE      |L55.110|
        MOVS     r0,#0x52
        LDRH     r0,[r0,r1]
        CMP      r0,#0
        BNE      |L55.46|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        MOVS     r3,#0x80
        BICS     r0,r0,r3
        LDR      r3,[r1,#0]
        STR      r0,[r3,#0]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        MOVS     r3,#0x40
        ORRS     r0,r0,r3
        LDR      r3,[r1,#0]
        STR      r0,[r3,#0]
        MOVS     r0,#0
|L55.44|
        BX       lr
|L55.46|
        MOVS     r3,#1
        LSLS     r3,r3,#12
        LDR      r0,[r1,#8]
        CMP      r0,r3
        BNE      |L55.82|
        LDR      r0,[r1,#0x10]
        CMP      r0,#0
        BNE      |L55.82|
        LDR      r2,[r1,#0x4c]
        LDRH     r0,[r2,#0]
        LSLS     r0,r0,#23
        LSRS     r0,r0,#23
        LDR      r3,[r1,#0]
        STRH     r0,[r3,#0x28]
        LDR      r0,[r1,#0x4c]
        ADDS     r0,r0,#2
        STR      r0,[r1,#0x4c]
        B        |L55.94|
|L55.82|
        LDR      r3,[r1,#0x4c]
        ADDS     r0,r3,#1
        STR      r0,[r1,#0x4c]
        LDRB     r0,[r3,#0]
        LDR      r3,[r1,#0]
        STRH     r0,[r3,#0x28]
|L55.94|
        MOVS     r0,#0x52
        LDRH     r0,[r0,r1]
        SUBS     r0,r0,#1
        UXTH     r3,r0
        MOVS     r0,#0x52
        STRH     r3,[r0,r1]
        MOVS     r0,#0
        B        |L55.44|
|L55.110|
        MOVS     r0,#2
        B        |L55.44|
        ENDP


        AREA ||i.UART_WaitOnFlagUntilTimeout||, CODE, READONLY, ALIGN=1

UART_WaitOnFlagUntilTimeout PROC
        PUSH     {r0-r7,lr}
        SUB      sp,sp,#4
        MOV      r4,r0
        MOV      r5,r1
        MOV      r7,r2
        LDR      r6,[sp,#0x28]
        B        |L56.88|
|L56.14|
        ADDS     r0,r6,#1
        CMP      r0,#0
        BEQ      |L56.88|
        CMP      r6,#0
        BEQ      |L56.36|
        BL       HAL_GetTick
        LDR      r1,[sp,#0x10]
        SUBS     r0,r0,r1
        CMP      r0,r6
        BLS      |L56.88|
|L56.36|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,r1,#0xa1
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r1,#0x20
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        MOVS     r0,#0x6a
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x68
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#3
|L56.84|
        ADD      sp,sp,#0x14
        POP      {r4-r7,pc}
|L56.88|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x1c]
        ANDS     r0,r0,r5
        CMP      r0,r5
        BNE      |L56.102|
        MOVS     r0,#1
        B        |L56.104|
|L56.102|
        MOVS     r0,#0
|L56.104|
        CMP      r0,r7
        BEQ      |L56.14|
        MOVS     r0,#0
        B        |L56.84|
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F0xx_DFP\\2.0.0\\Drivers\\STM32F0xx_HAL_Driver\\Src\\stm32f0xx_hal_uart.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___20_stm32f0xx_hal_uart_c_d497114f____REV16|
#line 463 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.4.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___20_stm32f0xx_hal_uart_c_d497114f____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___20_stm32f0xx_hal_uart_c_d497114f____REVSH|
#line 478
|__asm___20_stm32f0xx_hal_uart_c_d497114f____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT HAL_HalfDuplex_EnableReceiver [CODE]
        EXPORT HAL_HalfDuplex_EnableTransmitter [CODE]
        EXPORT HAL_HalfDuplex_Init [CODE]
        EXPORT HAL_MultiProcessor_DisableMuteMode [CODE]
        EXPORT HAL_MultiProcessor_EnableMuteMode [CODE]
        EXPORT HAL_MultiProcessor_EnterMuteMode [CODE]
        EXPORT HAL_MultiProcessor_Init [CODE]
        EXPORT HAL_UART_Abort [CODE]
        EXPORT HAL_UART_AbortCpltCallback [CODE,WEAK]
        EXPORT HAL_UART_AbortReceive [CODE]
        EXPORT HAL_UART_AbortReceiveCpltCallback [CODE,WEAK]
        EXPORT HAL_UART_AbortReceive_IT [CODE]
        EXPORT HAL_UART_AbortTransmit [CODE]
        EXPORT HAL_UART_AbortTransmitCpltCallback [CODE,WEAK]
        EXPORT HAL_UART_AbortTransmit_IT [CODE]
        EXPORT HAL_UART_Abort_IT [CODE]
        EXPORT HAL_UART_DMAPause [CODE]
        EXPORT HAL_UART_DMAResume [CODE]
        EXPORT HAL_UART_DMAStop [CODE]
        EXPORT HAL_UART_DeInit [CODE]
        EXPORT HAL_UART_ErrorCallback [CODE,WEAK]
        EXPORT HAL_UART_GetError [CODE]
        EXPORT HAL_UART_GetState [CODE]
        EXPORT HAL_UART_IRQHandler [CODE]
        EXPORT HAL_UART_Init [CODE]
        EXPORT HAL_UART_MspDeInit [CODE,WEAK]
        EXPORT HAL_UART_MspInit [CODE,WEAK]
        EXPORT HAL_UART_Receive [CODE]
        EXPORT HAL_UART_Receive_DMA [CODE]
        EXPORT HAL_UART_Receive_IT [CODE]
        EXPORT HAL_UART_RxCpltCallback [CODE,WEAK]
        EXPORT HAL_UART_RxHalfCpltCallback [CODE,WEAK]
        EXPORT HAL_UART_Transmit [CODE]
        EXPORT HAL_UART_Transmit_DMA [CODE]
        EXPORT HAL_UART_Transmit_IT [CODE]
        EXPORT HAL_UART_TxCpltCallback [CODE,WEAK]
        EXPORT HAL_UART_TxHalfCpltCallback [CODE,WEAK]
        EXPORT UART_AdvFeatureConfig [CODE]
        EXPORT UART_CheckIdleState [CODE]
        EXPORT UART_EndTransmit_IT [CODE]
        EXPORT UART_Receive_IT [CODE]
        EXPORT UART_SetConfig [CODE]
        EXPORT UART_Transmit_IT [CODE]
        EXPORT UART_WaitOnFlagUntilTimeout [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT HAL_GetTick [CODE]
        IMPORT HAL_RCC_GetPCLK1Freq [CODE]
        IMPORT __aeabi_uidivmod [CODE]
        IMPORT HAL_RCC_GetSysClockFreq [CODE]
        IMPORT HAL_DMA_Start_IT [CODE]
        IMPORT HAL_DMA_Abort [CODE]
        IMPORT HAL_DMA_Abort_IT [CODE]
        IMPORT HAL_UARTEx_WakeupCallback [CODE]

        KEEP UART_DMAAbortOnError
        KEEP UART_DMAError
        KEEP UART_DMAReceiveCplt
        KEEP UART_DMARxAbortCallback
        KEEP UART_DMARxHalfCplt
        KEEP UART_DMARxOnlyAbortCallback
        KEEP UART_DMATransmitCplt
        KEEP UART_DMATxAbortCallback
        KEEP UART_DMATxHalfCplt
        KEEP UART_DMATxOnlyAbortCallback
        KEEP UART_EndRxTransfer
        KEEP UART_EndTxTransfer

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
