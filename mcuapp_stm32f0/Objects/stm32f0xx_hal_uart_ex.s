; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -o.\objects\stm32f0xx_hal_uart_ex.o --depend=.\objects\stm32f0xx_hal_uart_ex.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE\Device\STM32F071VBTx -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0 -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32F0xx\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc\Legacy -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F071xB --omf_browse=.\objects\stm32f0xx_hal_uart_ex.crf C:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Src\stm32f0xx_hal_uart_ex.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.HAL_LIN_Init||, CODE, READONLY, ALIGN=1

HAL_LIN_Init PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        CMP      r4,#0
        BNE      |L1.14|
        MOVS     r0,#1
|L1.12|
        POP      {r4-r6,pc}
|L1.14|
        MOVS     r1,#1
        LSLS     r1,r1,#15
        LDR      r0,[r4,#0x1c]
        CMP      r0,r1
        BNE      |L1.28|
        MOVS     r0,#1
        B        |L1.12|
|L1.28|
        LDR      r0,[r4,#8]
        CMP      r0,#0
        BEQ      |L1.38|
        MOVS     r0,#1
        B        |L1.12|
|L1.38|
        MOVS     r0,#0x69
        LDRB     r0,[r0,r4]
        CMP      r0,#0
        BNE      |L1.58|
        MOVS     r1,#0
        MOVS     r0,#0x68
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_UART_MspInit
|L1.58|
        MOVS     r1,#0x24
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_SetConfig
        CMP      r0,#1
        BNE      |L1.88|
        B        |L1.12|
|L1.88|
        LDR      r0,[r4,#0x24]
        CMP      r0,#0
        BEQ      |L1.100|
        MOV      r0,r4
        BL       UART_AdvFeatureConfig
|L1.100|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        MOVS     r1,#1
        LSLS     r1,r1,#11
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#0x2a
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        MOVS     r1,#1
        LSLS     r1,r1,#14
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        MOVS     r1,#0x20
        BICS     r0,r0,r1
        ORRS     r0,r0,r5
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_CheckIdleState
        B        |L1.12|
        ENDP


        AREA ||i.HAL_LIN_SendBreak||, CODE, READONLY, ALIGN=1

HAL_LIN_SendBreak PROC
        MOV      r1,r0
        NOP      
        MOVS     r0,#0x68
        LDRB     r0,[r0,r1]
        CMP      r0,#1
        BNE      |L2.16|
        MOVS     r0,#2
|L2.14|
        BX       lr
|L2.16|
        MOVS     r2,#1
        MOVS     r0,#0x68
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r2,#0x24
        MOVS     r0,#0x69
        STRB     r2,[r0,r1]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0x18]
        MOVS     r2,#2
        ORRS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0x18]
        MOVS     r2,#0x20
        MOVS     r0,#0x69
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r2,#0
        MOVS     r0,#0x68
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r0,#0
        B        |L2.14|
        ENDP


        AREA ||i.HAL_MultiProcessorEx_AddressLength_Set||, CODE, READONLY, ALIGN=1

HAL_MultiProcessorEx_AddressLength_Set PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        CMP      r4,#0
        BNE      |L3.14|
        MOVS     r0,#1
|L3.12|
        POP      {r4-r6,pc}
|L3.14|
        MOVS     r1,#0x24
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        MOVS     r1,#0x10
        BICS     r0,r0,r1
        ORRS     r0,r0,r5
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_CheckIdleState
        B        |L3.12|
        ENDP


        AREA ||i.HAL_RS485Ex_Init||, CODE, READONLY, ALIGN=2

HAL_RS485Ex_Init PROC
        PUSH     {r0-r7,lr}
        SUB      sp,sp,#4
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOVS     r7,#0
        CMP      r4,#0
        BNE      |L4.22|
        MOVS     r0,#1
|L4.18|
        ADD      sp,sp,#0x14
        POP      {r4-r7,pc}
|L4.22|
        MOVS     r0,#0x69
        LDRB     r0,[r0,r4]
        CMP      r0,#0
        BNE      |L4.42|
        MOVS     r1,#0
        MOVS     r0,#0x68
        STRB     r1,[r0,r4]
        MOV      r0,r4
        BL       HAL_UART_MspInit
|L4.42|
        MOVS     r1,#0x24
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_SetConfig
        CMP      r0,#1
        BNE      |L4.72|
        B        |L4.18|
|L4.72|
        LDR      r0,[r4,#0x24]
        CMP      r0,#0
        BEQ      |L4.84|
        MOV      r0,r4
        BL       UART_AdvFeatureConfig
|L4.84|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#1
        LSLS     r1,r1,#14
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#1
        LSLS     r1,r1,#15
        BICS     r0,r0,r1
        ORRS     r0,r0,r5
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LSLS     r7,r6,#21
        LDR      r0,[sp,#0x10]
        LSLS     r0,r0,#16
        ORRS     r7,r7,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LDR      r1,|L4.156|
        ANDS     r0,r0,r1
        ORRS     r0,r0,r7
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_CheckIdleState
        B        |L4.18|
        ENDP

|L4.156|
        DCD      0xfc00ffff

        AREA ||i.HAL_UARTEx_DisableStopMode||, CODE, READONLY, ALIGN=1

HAL_UARTEx_DisableStopMode PROC
        MOV      r1,r0
        NOP      
        MOVS     r0,#0x68
        LDRB     r0,[r0,r1]
        CMP      r0,#1
        BNE      |L5.16|
        MOVS     r0,#2
|L5.14|
        BX       lr
|L5.16|
        MOVS     r2,#1
        MOVS     r0,#0x68
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r2,#0x24
        MOVS     r0,#0x69
        STRB     r2,[r0,r1]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        MOVS     r2,#2
        BICS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        MOVS     r2,#0x20
        MOVS     r0,#0x69
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r2,#0
        MOVS     r0,#0x68
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r0,#0
        B        |L5.14|
        ENDP


        AREA ||i.HAL_UARTEx_EnableStopMode||, CODE, READONLY, ALIGN=1

HAL_UARTEx_EnableStopMode PROC
        MOV      r1,r0
        NOP      
        MOVS     r0,#0x68
        LDRB     r0,[r0,r1]
        CMP      r0,#1
        BNE      |L6.16|
        MOVS     r0,#2
|L6.14|
        BX       lr
|L6.16|
        MOVS     r2,#1
        MOVS     r0,#0x68
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r2,#0x24
        MOVS     r0,#0x69
        STRB     r2,[r0,r1]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        MOVS     r2,#2
        ORRS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        MOVS     r2,#0x20
        MOVS     r0,#0x69
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r2,#0
        MOVS     r0,#0x68
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r0,#0
        B        |L6.14|
        ENDP


        AREA ||i.HAL_UARTEx_StopModeWakeUpSourceConfig||, CODE, READONLY, ALIGN=2

HAL_UARTEx_StopModeWakeUpSourceConfig PROC
        PUSH     {r0-r2,r4-r6,lr}
        SUB      sp,sp,#4
        MOV      r4,r0
        MOVS     r5,#0
        MOVS     r6,#0
        NOP      
        MOVS     r0,#0x68
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L7.26|
        MOVS     r0,#2
|L7.22|
        ADD      sp,sp,#0x10
        POP      {r4-r6,pc}
|L7.26|
        MOVS     r1,#1
        MOVS     r0,#0x68
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r1,#0x24
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        MOVS     r1,#3
        LSLS     r1,r1,#20
        BICS     r0,r0,r1
        LDR      r1,[sp,#8]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[sp,#8]
        CMP      r0,#0
        BNE      |L7.86|
        MOV      r0,r4
        LDR      r2,[sp,#0xc]
        LDR      r1,[sp,#8]
        BL       UARTEx_Wakeup_AddressConfig
|L7.86|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        BL       HAL_GetTick
        MOV      r6,r0
        LDR      r0,|L7.152|
        MOV      r3,r6
        MOVS     r2,#0
        MOVS     r1,#1
        LSLS     r1,r1,#22
        STR      r0,[sp,#0]
        MOV      r0,r4
        BL       UART_WaitOnFlagUntilTimeout
        CMP      r0,#0
        BEQ      |L7.130|
        MOVS     r5,#3
        B        |L7.136|
|L7.130|
        MOVS     r1,#0x20
        MOVS     r0,#0x69
        STRB     r1,[r0,r4]
|L7.136|
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x68
        STRB     r1,[r0,r4]
        NOP      
        MOV      r0,r5
        B        |L7.22|
        ENDP

        DCW      0x0000
|L7.152|
        DCD      0x01ffffff

        AREA ||i.HAL_UARTEx_WakeupCallback||, CODE, READONLY, ALIGN=1

HAL_UARTEx_WakeupCallback PROC
        BX       lr
        ENDP


        AREA ||i.UARTEx_Wakeup_AddressConfig||, CODE, READONLY, ALIGN=1

UARTEx_Wakeup_AddressConfig PROC
        PUSH     {r0-r2,lr}
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#4]
        MOVS     r2,#0x10
        BICS     r1,r1,r2
        MOV      r2,sp
        LDRH     r2,[r2,#8]
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#4]
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#4]
        LSLS     r1,r1,#8
        LSRS     r1,r1,#8
        MOV      r2,sp
        LDRB     r2,[r2,#0xa]
        LSLS     r2,r2,#24
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#4]
        POP      {r1-r3,pc}
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F0xx_DFP\\2.0.0\\Drivers\\STM32F0xx_HAL_Driver\\Src\\stm32f0xx_hal_uart_ex.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___23_stm32f0xx_hal_uart_ex_c_83a37df4____REV16|
#line 463 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.4.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___23_stm32f0xx_hal_uart_ex_c_83a37df4____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___23_stm32f0xx_hal_uart_ex_c_83a37df4____REVSH|
#line 478
|__asm___23_stm32f0xx_hal_uart_ex_c_83a37df4____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT HAL_LIN_Init [CODE]
        EXPORT HAL_LIN_SendBreak [CODE]
        EXPORT HAL_MultiProcessorEx_AddressLength_Set [CODE]
        EXPORT HAL_RS485Ex_Init [CODE]
        EXPORT HAL_UARTEx_DisableStopMode [CODE]
        EXPORT HAL_UARTEx_EnableStopMode [CODE]
        EXPORT HAL_UARTEx_StopModeWakeUpSourceConfig [CODE]
        EXPORT HAL_UARTEx_WakeupCallback [CODE,WEAK]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT HAL_UART_MspInit [CODE]
        IMPORT UART_SetConfig [CODE]
        IMPORT UART_AdvFeatureConfig [CODE]
        IMPORT UART_CheckIdleState [CODE]
        IMPORT HAL_GetTick [CODE]
        IMPORT UART_WaitOnFlagUntilTimeout [CODE]

        KEEP UARTEx_Wakeup_AddressConfig

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
