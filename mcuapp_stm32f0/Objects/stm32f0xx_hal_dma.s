; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -o.\objects\stm32f0xx_hal_dma.o --depend=.\objects\stm32f0xx_hal_dma.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE\Device\STM32F071VBTx -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0 -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32F0xx\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc\Legacy -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F071xB --omf_browse=.\objects\stm32f0xx_hal_dma.crf C:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Src\stm32f0xx_hal_dma.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.DMA_CalcBaseAndBitshift||, CODE, READONLY, ALIGN=2

DMA_CalcBaseAndBitshift PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r2,|L1.28|
        LDR      r1,[r4,#0]
        SUBS     r0,r1,r2
        MOVS     r1,#0x14
        BL       __aeabi_uidivmod
        LSLS     r0,r0,#2
        STR      r0,[r4,#0x40]
        LDR      r0,|L1.28|
        SUBS     r0,r0,#8
        STR      r0,[r4,#0x3c]
        POP      {r4,pc}
        ENDP

|L1.28|
        DCD      0x40020008

        AREA ||i.DMA_SetConfig||, CODE, READONLY, ALIGN=1

DMA_SetConfig PROC
        PUSH     {r4,r5,lr}
        MOVS     r4,#1
        LDR      r5,[r0,#0x40]
        LSLS     r4,r4,r5
        LDR      r5,[r0,#0x3c]
        STR      r4,[r5,#4]
        LDR      r4,[r0,#0]
        STR      r3,[r4,#4]
        LDR      r4,[r0,#4]
        CMP      r4,#0x10
        BNE      |L2.32|
        LDR      r4,[r0,#0]
        STR      r2,[r4,#8]
        LDR      r4,[r0,#0]
        STR      r1,[r4,#0xc]
        B        |L2.40|
|L2.32|
        LDR      r4,[r0,#0]
        STR      r1,[r4,#8]
        LDR      r4,[r0,#0]
        STR      r2,[r4,#0xc]
|L2.40|
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.HAL_DMA_Abort||, CODE, READONLY, ALIGN=1

HAL_DMA_Abort PROC
        MOV      r1,r0
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        MOVS     r2,#0xe
        BICS     r0,r0,r2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        MOVS     r0,#1
        LDR      r2,[r1,#0x40]
        LSLS     r0,r0,r2
        LDR      r2,[r1,#0x3c]
        STR      r0,[r2,#4]
        MOVS     r2,#1
        MOVS     r0,#0x21
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r2,#0
        MOVS     r0,#0x20
        STRB     r2,[r0,r1]
        NOP      
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||i.HAL_DMA_Abort_IT||, CODE, READONLY, ALIGN=1

HAL_DMA_Abort_IT PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r5,#0
        MOVS     r0,#0x21
        LDRB     r0,[r0,r4]
        CMP      r0,#2
        BEQ      |L4.22|
        MOVS     r0,#4
        STR      r0,[r4,#0x38]
        MOVS     r5,#1
        B        |L4.84|
|L4.22|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xe
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOVS     r0,#1
        LDR      r1,[r4,#0x40]
        LSLS     r0,r0,r1
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#4]
        MOVS     r1,#1
        MOVS     r0,#0x21
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x20
        STRB     r1,[r0,r4]
        NOP      
        LDR      r0,[r4,#0x34]
        CMP      r0,#0
        BEQ      |L4.84|
        MOV      r0,r4
        LDR      r1,[r4,#0x34]
        BLX      r1
|L4.84|
        MOV      r0,r5
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.HAL_DMA_DeInit||, CODE, READONLY, ALIGN=1

HAL_DMA_DeInit PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CMP      r4,#0
        BNE      |L5.12|
        MOVS     r0,#1
|L5.10|
        POP      {r4,pc}
|L5.12|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOVS     r0,#0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0xc]
        MOV      r0,r4
        BL       DMA_CalcBaseAndBitshift
        MOVS     r0,#1
        LDR      r1,[r4,#0x40]
        LSLS     r0,r0,r1
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#4]
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        MOVS     r1,#0
        MOVS     r0,#0x21
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0x20
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        B        |L5.10|
        ENDP


        AREA ||i.HAL_DMA_GetError||, CODE, READONLY, ALIGN=1

HAL_DMA_GetError PROC
        MOV      r1,r0
        LDR      r0,[r1,#0x38]
        BX       lr
        ENDP


        AREA ||i.HAL_DMA_GetState||, CODE, READONLY, ALIGN=1

HAL_DMA_GetState PROC
        MOV      r1,r0
        MOVS     r0,#0x21
        LDRB     r0,[r0,r1]
        BX       lr
        ENDP


        AREA ||i.HAL_DMA_IRQHandler||, CODE, READONLY, ALIGN=1

HAL_DMA_IRQHandler PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0x3c]
        LDR      r5,[r0,#0]
        LDR      r0,[r4,#0]
        LDR      r6,[r0,#0]
        MOVS     r0,#4
        LDR      r1,[r4,#0x40]
        LSLS     r0,r0,r1
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L8.80|
        MOVS     r0,#4
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L8.80|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0x20
        ANDS     r0,r0,r1
        CMP      r0,#0
        BNE      |L8.56|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#4
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
|L8.56|
        MOVS     r0,#4
        LDR      r1,[r4,#0x40]
        LSLS     r0,r0,r1
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#4]
        LDR      r0,[r4,#0x2c]
        CMP      r0,#0
        BEQ      |L8.238|
        MOV      r0,r4
        LDR      r1,[r4,#0x2c]
        BLX      r1
        B        |L8.238|
|L8.80|
        MOVS     r0,#2
        LDR      r1,[r4,#0x40]
        LSLS     r0,r0,r1
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L8.164|
        MOVS     r0,#2
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L8.164|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0x20
        ANDS     r0,r0,r1
        CMP      r0,#0
        BNE      |L8.130|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xa
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOVS     r1,#1
        MOVS     r0,#0x21
        STRB     r1,[r0,r4]
|L8.130|
        MOVS     r0,#2
        LDR      r1,[r4,#0x40]
        LSLS     r0,r0,r1
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#4]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x20
        STRB     r1,[r0,r4]
        NOP      
        LDR      r0,[r4,#0x28]
        CMP      r0,#0
        BEQ      |L8.238|
        MOV      r0,r4
        LDR      r1,[r4,#0x28]
        BLX      r1
        B        |L8.238|
|L8.164|
        MOVS     r0,#8
        LDR      r1,[r4,#0x40]
        LSLS     r0,r0,r1
        ANDS     r0,r0,r5
        CMP      r0,#0
        BEQ      |L8.238|
        MOVS     r0,#8
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L8.238|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xe
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOVS     r0,#1
        LDR      r1,[r4,#0x40]
        LSLS     r0,r0,r1
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#4]
        MOVS     r0,#1
        STR      r0,[r4,#0x38]
        MOVS     r1,#1
        MOVS     r0,#0x21
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x20
        STRB     r1,[r0,r4]
        NOP      
        LDR      r0,[r4,#0x30]
        CMP      r0,#0
        BEQ      |L8.238|
        MOV      r0,r4
        LDR      r1,[r4,#0x30]
        BLX      r1
|L8.238|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.HAL_DMA_Init||, CODE, READONLY, ALIGN=2

HAL_DMA_Init PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r5,#0
        CMP      r4,#0
        BNE      |L9.14|
        MOVS     r0,#1
|L9.12|
        POP      {r4-r6,pc}
|L9.14|
        MOVS     r1,#2
        MOVS     r0,#0x21
        STRB     r1,[r0,r4]
        LDR      r0,[r4,#0]
        LDR      r5,[r0,#0]
        LDR      r0,|L9.96|
        ANDS     r5,r5,r0
        LDR      r1,[r4,#8]
        LDR      r0,[r4,#4]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0xc]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0x10]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0x14]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0x18]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0x1c]
        ORRS     r0,r0,r1
        ORRS     r5,r5,r0
        LDR      r0,[r4,#0]
        STR      r5,[r0,#0]
        MOV      r0,r4
        BL       DMA_CalcBaseAndBitshift
        MOVS     r0,#0
        STR      r0,[r4,#0x28]
        STR      r0,[r4,#0x2c]
        STR      r0,[r4,#0x30]
        STR      r0,[r4,#0x34]
        STR      r0,[r4,#0x38]
        MOVS     r1,#1
        MOVS     r0,#0x21
        STRB     r1,[r0,r4]
        MOVS     r1,#0
        MOVS     r0,#0x20
        STRB     r1,[r0,r4]
        MOVS     r0,#0
        B        |L9.12|
        ENDP

        DCW      0x0000
|L9.96|
        DCD      0xffffc00f

        AREA ||i.HAL_DMA_PollForTransfer||, CODE, READONLY, ALIGN=1

HAL_DMA_PollForTransfer PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r5,r2
        MOVS     r0,#0
        STR      r0,[sp,#0]
        MOVS     r0,#0x21
        LDRB     r0,[r0,r4]
        CMP      r0,#2
        BEQ      |L10.38|
        MOVS     r0,#4
        STR      r0,[r4,#0x38]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x20
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#1
|L10.36|
        POP      {r3-r7,pc}
|L10.38|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0x20
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L10.58|
        LSLS     r0,r1,#3
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        B        |L10.36|
|L10.58|
        CMP      r6,#0
        BNE      |L10.70|
        MOVS     r7,#2
        LDR      r1,[r4,#0x40]
        LSLS     r7,r7,r1
        B        |L10.76|
|L10.70|
        MOVS     r7,#4
        LDR      r1,[r4,#0x40]
        LSLS     r7,r7,r1
|L10.76|
        BL       HAL_GetTick
        STR      r0,[sp,#0]
        B        |L10.180|
|L10.84|
        LDR      r0,[r4,#0x3c]
        LDR      r0,[r0,#0]
        MOVS     r1,#8
        LDR      r2,[r4,#0x40]
        LSLS     r1,r1,r2
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L10.134|
        MOVS     r0,#1
        LDR      r1,[r4,#0x40]
        LSLS     r0,r0,r1
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#4]
        MOVS     r0,#1
        STR      r0,[r4,#0x38]
        MOVS     r1,#1
        MOVS     r0,#0x21
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x20
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#1
        B        |L10.36|
|L10.134|
        ADDS     r0,r5,#1
        CMP      r0,#0
        BEQ      |L10.180|
        CMP      r5,#0
        BEQ      |L10.156|
        BL       HAL_GetTick
        LDR      r1,[sp,#0]
        SUBS     r0,r0,r1
        CMP      r0,r5
        BLS      |L10.180|
|L10.156|
        MOVS     r0,#0x20
        STR      r0,[r4,#0x38]
        MOVS     r1,#1
        MOVS     r0,#0x21
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x20
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#1
        B        |L10.36|
|L10.180|
        LDR      r0,[r4,#0x3c]
        LDR      r0,[r0,#0]
        ANDS     r0,r0,r7
        CMP      r0,#0
        BEQ      |L10.84|
        CMP      r6,#0
        BNE      |L10.212|
        MOVS     r0,#2
        LDR      r1,[r4,#0x40]
        LSLS     r0,r0,r1
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#4]
        MOVS     r1,#1
        MOVS     r0,#0x21
        STRB     r1,[r0,r4]
        B        |L10.222|
|L10.212|
        MOVS     r0,#4
        LDR      r1,[r4,#0x40]
        LSLS     r0,r0,r1
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#4]
|L10.222|
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x20
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0
        B        |L10.36|
        ENDP


        AREA ||i.HAL_DMA_RegisterCallback||, CODE, READONLY, ALIGN=1

HAL_DMA_RegisterCallback PROC
        PUSH     {r4,r5,lr}
        MOV      r3,r0
        MOVS     r4,#0
        NOP      
        MOVS     r0,#0x20
        LDRB     r0,[r0,r3]
        CMP      r0,#1
        BNE      |L11.20|
        MOVS     r0,#2
|L11.18|
        POP      {r4,r5,pc}
|L11.20|
        MOVS     r5,#1
        MOVS     r0,#0x20
        STRB     r5,[r0,r3]
        NOP      
        MOVS     r0,#0x21
        LDRB     r0,[r0,r3]
        CMP      r0,#1
        BNE      |L11.76|
        CMP      r1,#0
        BEQ      |L11.54|
        CMP      r1,#1
        BEQ      |L11.58|
        CMP      r1,#2
        BEQ      |L11.62|
        CMP      r1,#3
        BNE      |L11.70|
        B        |L11.66|
|L11.54|
        STR      r2,[r3,#0x28]
        B        |L11.74|
|L11.58|
        STR      r2,[r3,#0x2c]
        B        |L11.74|
|L11.62|
        STR      r2,[r3,#0x30]
        B        |L11.74|
|L11.66|
        STR      r2,[r3,#0x34]
        B        |L11.74|
|L11.70|
        MOVS     r4,#1
        NOP      
|L11.74|
        B        |L11.78|
|L11.76|
        MOVS     r4,#1
|L11.78|
        NOP      
        MOVS     r5,#0
        MOVS     r0,#0x20
        STRB     r5,[r0,r3]
        NOP      
        MOV      r0,r4
        B        |L11.18|
        ENDP


        AREA ||i.HAL_DMA_Start||, CODE, READONLY, ALIGN=1

HAL_DMA_Start PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r7,r3
        MOVS     r0,#0
        STR      r0,[sp,#0]
        NOP      
        MOVS     r0,#0x20
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L12.28|
        MOVS     r0,#2
|L12.26|
        POP      {r3-r7,pc}
|L12.28|
        MOVS     r1,#1
        MOVS     r0,#0x20
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0x21
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L12.92|
        MOVS     r1,#2
        MOVS     r0,#0x21
        STRB     r1,[r0,r4]
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r3,r7
        MOV      r2,r6
        MOV      r1,r5
        MOV      r0,r4
        BL       DMA_SetConfig
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        B        |L12.106|
|L12.92|
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x20
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#2
        STR      r0,[sp,#0]
|L12.106|
        LDR      r0,[sp,#0]
        B        |L12.26|
        ENDP


        AREA ||i.HAL_DMA_Start_IT||, CODE, READONLY, ALIGN=1

HAL_DMA_Start_IT PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r7,r3
        MOVS     r0,#0
        STR      r0,[sp,#0]
        NOP      
        MOVS     r0,#0x20
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L13.28|
        MOVS     r0,#2
|L13.26|
        POP      {r3-r7,pc}
|L13.28|
        MOVS     r1,#1
        MOVS     r0,#0x20
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#0x21
        LDRB     r0,[r0,r4]
        CMP      r0,#1
        BNE      |L13.136|
        MOVS     r1,#2
        MOVS     r0,#0x21
        STRB     r1,[r0,r4]
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r3,r7
        MOV      r2,r6
        MOV      r1,r5
        MOV      r0,r4
        BL       DMA_SetConfig
        LDR      r0,[r4,#0x2c]
        CMP      r0,#0
        BEQ      |L13.98|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xe
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        B        |L13.122|
|L13.98|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#0xa
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#4
        BICS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
|L13.122|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        B        |L13.150|
|L13.136|
        NOP      
        MOVS     r1,#0
        MOVS     r0,#0x20
        STRB     r1,[r0,r4]
        NOP      
        MOVS     r0,#2
        STR      r0,[sp,#0]
|L13.150|
        LDR      r0,[sp,#0]
        B        |L13.26|
        ENDP


        AREA ||i.HAL_DMA_UnRegisterCallback||, CODE, READONLY, ALIGN=1

HAL_DMA_UnRegisterCallback PROC
        PUSH     {r4,lr}
        MOV      r2,r0
        MOVS     r4,#0
        NOP      
        MOVS     r0,#0x20
        LDRB     r0,[r0,r2]
        CMP      r0,#1
        BNE      |L14.20|
        MOVS     r0,#2
|L14.18|
        POP      {r4,pc}
|L14.20|
        MOVS     r3,#1
        MOVS     r0,#0x20
        STRB     r3,[r0,r2]
        NOP      
        MOVS     r0,#0x21
        LDRB     r0,[r0,r2]
        CMP      r0,#1
        BNE      |L14.92|
        MOVS     r3,r1
        BL       __ARM_common_switch8
        DCB      0x05,0x04
        DCB      0x07,0x0a,0x0d,0x10
        DCB      0x16,0x00
        MOVS     r0,#0
        STR      r0,[r2,#0x28]
        B        |L14.90|
        MOVS     r0,#0
        STR      r0,[r2,#0x2c]
        B        |L14.90|
        MOVS     r0,#0
        STR      r0,[r2,#0x30]
        B        |L14.90|
        MOVS     r0,#0
        STR      r0,[r2,#0x34]
        B        |L14.90|
        MOVS     r0,#0
        STR      r0,[r2,#0x28]
        STR      r0,[r2,#0x2c]
        STR      r0,[r2,#0x30]
        STR      r0,[r2,#0x34]
        B        |L14.90|
        MOVS     r4,#1
        NOP      
|L14.90|
        B        |L14.94|
|L14.92|
        MOVS     r4,#1
|L14.94|
        NOP      
        MOVS     r3,#0
        MOVS     r0,#0x20
        STRB     r3,[r0,r2]
        NOP      
        MOV      r0,r4
        B        |L14.18|
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

__ARM_common_switch8 PROC
        PUSH     {r4,r5}
        MOV      r4,lr
        SUBS     r4,r4,#1
        LDRB     r5,[r4,#0]
        ADDS     r4,r4,#1
        CMP      r3,r5
        BCC      |L89.24|
|L89.14|
        LDRB     r3,[r4,r5]
        LSLS     r3,r3,#1
        ADDS     r3,r4,r3
        POP      {r4,r5}
        BX       r3
|L89.24|
        MOV      r5,r3
        B        |L89.14|
        ENDP


;*** Start embedded assembler ***

#line 1 "C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F0xx_DFP\\2.0.0\\Drivers\\STM32F0xx_HAL_Driver\\Src\\stm32f0xx_hal_dma.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f0xx_hal_dma_c_c25f65ec____REV16|
#line 463 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.4.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___19_stm32f0xx_hal_dma_c_c25f65ec____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f0xx_hal_dma_c_c25f65ec____REVSH|
#line 478
|__asm___19_stm32f0xx_hal_dma_c_c25f65ec____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT HAL_DMA_Abort [CODE]
        EXPORT HAL_DMA_Abort_IT [CODE]
        EXPORT HAL_DMA_DeInit [CODE]
        EXPORT HAL_DMA_GetError [CODE]
        EXPORT HAL_DMA_GetState [CODE]
        EXPORT HAL_DMA_IRQHandler [CODE]
        EXPORT HAL_DMA_Init [CODE]
        EXPORT HAL_DMA_PollForTransfer [CODE]
        EXPORT HAL_DMA_RegisterCallback [CODE]
        EXPORT HAL_DMA_Start [CODE]
        EXPORT HAL_DMA_Start_IT [CODE]
        EXPORT HAL_DMA_UnRegisterCallback [CODE]
        EXPORT __ARM_common_switch8 [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_uidivmod [CODE]
        IMPORT HAL_GetTick [CODE]

        KEEP DMA_CalcBaseAndBitshift
        KEEP DMA_SetConfig

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
