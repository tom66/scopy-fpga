; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -o.\objects\stm32f0xx_hal_pwr.o --depend=.\objects\stm32f0xx_hal_pwr.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE -IC:\Users\Tom\Documents\Projects\Scopy_MVP_Platform\scopy-fpga\mcuapp_stm32f0\RTE\Device\STM32F071VBTx -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0 -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32F0xx\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Inc\Legacy -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F071xB --omf_browse=.\objects\stm32f0xx_hal_pwr.crf C:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\STM32F0xx_HAL_Driver\Src\stm32f0xx_hal_pwr.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.HAL_PWR_DeInit||, CODE, READONLY, ALIGN=2

HAL_PWR_DeInit PROC
        LDR      r0,|L1.28|
        LDR      r0,[r0,#0x10]
        MOVS     r1,#1
        LSLS     r1,r1,#28
        ORRS     r0,r0,r1
        LDR      r1,|L1.28|
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        LSLS     r1,r1,#16
        BICS     r0,r0,r1
        LDR      r1,|L1.28|
        STR      r0,[r1,#0x10]
        BX       lr
        ENDP

|L1.28|
        DCD      0x40021000

        AREA ||i.HAL_PWR_DisableBkUpAccess||, CODE, READONLY, ALIGN=2

HAL_PWR_DisableBkUpAccess PROC
        LDR      r0,|L2.16|
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,#1
        BICS     r0,r0,r1
        LDR      r1,|L2.16|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

|L2.16|
        DCD      0x40007000

        AREA ||i.HAL_PWR_DisableSEVOnPend||, CODE, READONLY, ALIGN=2

HAL_PWR_DisableSEVOnPend PROC
        LDR      r0,|L3.16|
        LDR      r0,[r0,#0x10]
        MOVS     r1,#0x10
        BICS     r0,r0,r1
        LDR      r1,|L3.16|
        STR      r0,[r1,#0x10]
        BX       lr
        ENDP

        DCW      0x0000
|L3.16|
        DCD      0xe000ed00

        AREA ||i.HAL_PWR_DisableSleepOnExit||, CODE, READONLY, ALIGN=2

HAL_PWR_DisableSleepOnExit PROC
        LDR      r0,|L4.16|
        LDR      r0,[r0,#0x10]
        MOVS     r1,#2
        BICS     r0,r0,r1
        LDR      r1,|L4.16|
        STR      r0,[r1,#0x10]
        BX       lr
        ENDP

        DCW      0x0000
|L4.16|
        DCD      0xe000ed00

        AREA ||i.HAL_PWR_DisableWakeUpPin||, CODE, READONLY, ALIGN=2

HAL_PWR_DisableWakeUpPin PROC
        LDR      r1,|L5.12|
        LDR      r1,[r1,#4]
        BICS     r1,r1,r0
        LDR      r2,|L5.12|
        STR      r1,[r2,#4]
        BX       lr
        ENDP

|L5.12|
        DCD      0x40007000

        AREA ||i.HAL_PWR_EnableBkUpAccess||, CODE, READONLY, ALIGN=2

HAL_PWR_EnableBkUpAccess PROC
        LDR      r0,|L6.16|
        LDR      r0,[r0,#0]
        MOVS     r1,#0xff
        ADDS     r1,#1
        ORRS     r0,r0,r1
        LDR      r1,|L6.16|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

|L6.16|
        DCD      0x40007000

        AREA ||i.HAL_PWR_EnableSEVOnPend||, CODE, READONLY, ALIGN=2

HAL_PWR_EnableSEVOnPend PROC
        LDR      r0,|L7.16|
        LDR      r0,[r0,#0x10]
        MOVS     r1,#0x10
        ORRS     r0,r0,r1
        LDR      r1,|L7.16|
        STR      r0,[r1,#0x10]
        BX       lr
        ENDP

        DCW      0x0000
|L7.16|
        DCD      0xe000ed00

        AREA ||i.HAL_PWR_EnableSleepOnExit||, CODE, READONLY, ALIGN=2

HAL_PWR_EnableSleepOnExit PROC
        LDR      r0,|L8.16|
        LDR      r0,[r0,#0x10]
        MOVS     r1,#2
        ORRS     r0,r0,r1
        LDR      r1,|L8.16|
        STR      r0,[r1,#0x10]
        BX       lr
        ENDP

        DCW      0x0000
|L8.16|
        DCD      0xe000ed00

        AREA ||i.HAL_PWR_EnableWakeUpPin||, CODE, READONLY, ALIGN=2

HAL_PWR_EnableWakeUpPin PROC
        LDR      r1,|L9.12|
        LDR      r1,[r1,#4]
        ORRS     r1,r1,r0
        LDR      r2,|L9.12|
        STR      r1,[r2,#4]
        BX       lr
        ENDP

|L9.12|
        DCD      0x40007000

        AREA ||i.HAL_PWR_EnterSLEEPMode||, CODE, READONLY, ALIGN=2

HAL_PWR_EnterSLEEPMode PROC
        LDR      r2,|L10.28|
        LDR      r2,[r2,#0x10]
        MOVS     r3,#4
        BICS     r2,r2,r3
        LDR      r3,|L10.28|
        STR      r2,[r3,#0x10]
        CMP      r1,#1
        BNE      |L10.20|
        WFI      
        B        |L10.26|
|L10.20|
        SEV      
        WFE      
        WFE      
|L10.26|
        BX       lr
        ENDP

|L10.28|
        DCD      0xe000ed00

        AREA ||i.HAL_PWR_EnterSTANDBYMode||, CODE, READONLY, ALIGN=2

HAL_PWR_EnterSTANDBYMode PROC
        LDR      r0,|L11.32|
        LDR      r0,[r0,#0]
        MOVS     r1,#2
        ORRS     r0,r0,r1
        LDR      r1,|L11.32|
        STR      r0,[r1,#0]
        LDR      r0,|L11.36|
        LDR      r0,[r0,#0x10]
        MOVS     r1,#4
        ORRS     r0,r0,r1
        LDR      r1,|L11.36|
        STR      r0,[r1,#0x10]
        NOP      
        NOP      
        WFI      
        BX       lr
        ENDP

|L11.32|
        DCD      0x40007000
|L11.36|
        DCD      0xe000ed00

        AREA ||i.HAL_PWR_EnterSTOPMode||, CODE, READONLY, ALIGN=2

HAL_PWR_EnterSTOPMode PROC
        PUSH     {r4,lr}
        MOV      r2,r0
        MOVS     r0,#0
        LDR      r3,|L12.64|
        LDR      r0,[r3,#0]
        LSRS     r0,r0,#2
        LSLS     r0,r0,#2
        MOV      r3,r0
        ORRS     r3,r3,r2
        MOV      r0,r3
        LDR      r3,|L12.64|
        STR      r0,[r3,#0]
        LDR      r3,|L12.68|
        LDR      r3,[r3,#0x10]
        MOVS     r4,#4
        ORRS     r3,r3,r4
        LDR      r4,|L12.68|
        STR      r3,[r4,#0x10]
        CMP      r1,#1
        BNE      |L12.44|
        WFI      
        B        |L12.50|
|L12.44|
        SEV      
        WFE      
        WFE      
|L12.50|
        LDR      r3,|L12.68|
        LDR      r3,[r3,#0x10]
        MOVS     r4,#4
        BICS     r3,r3,r4
        LDR      r4,|L12.68|
        STR      r3,[r4,#0x10]
        POP      {r4,pc}
        ENDP

|L12.64|
        DCD      0x40007000
|L12.68|
        DCD      0xe000ed00

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F0xx_DFP\\2.0.0\\Drivers\\STM32F0xx_HAL_Driver\\Src\\stm32f0xx_hal_pwr.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f0xx_hal_pwr_c_f2cfe8be____REV16|
#line 463 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.4.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___19_stm32f0xx_hal_pwr_c_f2cfe8be____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f0xx_hal_pwr_c_f2cfe8be____REVSH|
#line 478
|__asm___19_stm32f0xx_hal_pwr_c_f2cfe8be____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT HAL_PWR_DeInit [CODE]
        EXPORT HAL_PWR_DisableBkUpAccess [CODE]
        EXPORT HAL_PWR_DisableSEVOnPend [CODE]
        EXPORT HAL_PWR_DisableSleepOnExit [CODE]
        EXPORT HAL_PWR_DisableWakeUpPin [CODE]
        EXPORT HAL_PWR_EnableBkUpAccess [CODE]
        EXPORT HAL_PWR_EnableSEVOnPend [CODE]
        EXPORT HAL_PWR_EnableSleepOnExit [CODE]
        EXPORT HAL_PWR_EnableWakeUpPin [CODE]
        EXPORT HAL_PWR_EnterSLEEPMode [CODE]
        EXPORT HAL_PWR_EnterSTANDBYMode [CODE]
        EXPORT HAL_PWR_EnterSTOPMode [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
